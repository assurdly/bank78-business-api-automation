pm.test("Check if billToken is present", function () {
    var responseBody = pm.response.json();
    // Check if the "billToken" field exists in the response
    pm.expect(responseBody.result.billToken).to.not.be.undefined;
});


pm.test("Response status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("The 'reference' field is a non-empty string", function () {
    const responseData = pm.response.json();

    pm.expect(responseData.result.reference).to.be.a('string').and.to.have.lengthOf.at.least(1, "'reference' field should not be empty");
});


pm.test("The 'amount' field should be a number", function () {
    const responseData = pm.response.json();
    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData.result.amount).to.be.a('number');
});

pm.test("Response structure and properties for 200", function () {
    pm.expect(pm.response.json()).to.have.property("hasResult", true);
    pm.expect(pm.response.json()).to.have.property("result");
    pm.expect(pm.response.json()).to.have.property("resultType", 1);
    pm.expect(pm.response.json()).to.have.property("message", "Successful");
    pm.expect(pm.response.json()).to.have.property("successful", true);
    pm.expect(pm.response.json()).to.have.property("errorCode", 0);
    pm.expect(pm.response.json()).to.have.property("responseCode", "200");
});