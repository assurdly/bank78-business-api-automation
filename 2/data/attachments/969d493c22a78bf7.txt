pm.test("Status code is 400", function () {
    pm.response.to.have.status(400);
});

pm.test("Status code response is Bad Request", function () {
    pm.response.to.have.status("Bad Request");
});

pm.test("Content-Type is present", function () {
    pm.response.to.have.header("Content-Type");
});

var jsonData = pm.response.json();

pm.test("Response has a result property", function () {   
    pm.expect(jsonData).to.exist;
    pm.expect(jsonData).to.be.an("object");
});

pm.test("hasResult property is present", function () {   
    pm.expect(jsonData.hasResult).to.be.a("boolean");
    pm.expect(jsonData.hasResult).to.eq(false);
});

pm.test("Result property is a non-empty object", function () {
    pm.expect(jsonData.result).to.be.null;
});

pm.test("resultType property is present", function () {
    pm.expect(jsonData.resultType).to.be.a("number");
    pm.expect(jsonData.resultType).to.eq(3);
});

pm.test("Message property is present", function () {
    pm.expect(jsonData.message).to.be.a("string");
    pm.expect(jsonData.message).to.eq("Response has validation errors");
});

pm.test("validationMessages is present", function () {
    pm.expect(jsonData.validationMessages).to.be.an('array');
    pm.expect(jsonData.validationMessages[0]).to.eq('The Username field is required.');
});


pm.test("Successful property is a boolean - false", function () {
    pm.expect(jsonData.successful).to.be.a('boolean');
     pm.expect(jsonData.successful).to.eq(false);
});