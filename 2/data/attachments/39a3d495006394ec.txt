pm.test("Response has a 'hasResult' property set to false", function () {
    pm.expect(pm.response.json().hasResult).to.equal(false);
});

pm.test("Response 'result' property is null", function () {
    pm.expect(pm.response.json().result).to.be.null;
});

pm.test("Response 'resultType' property is 3", function () {
    pm.expect(pm.response.json().resultType).to.equal(3);
});

pm.test("Response 'message' property is 'Response has validation errors'", function () {
    pm.expect(pm.response.json().message).to.equal("Response has validation errors");
});

pm.test("Response 'validationMessages' property is an array with specific messages", function () {
    const validationMessages = pm.response.json().validationMessages;
    pm.expect(validationMessages).to.be.an('array');
    pm.expect(validationMessages).to.include("'Saving Start Date' must not be empty.");
    pm.expect(validationMessages).to.include("Kindly specify the saving start date");
});

pm.test("Response 'successful' property is false", function () {
    pm.expect(pm.response.json().successful).to.equal(false);
});

pm.test("Response 'errorCode' property is 0", function () {
    pm.expect(pm.response.json().errorCode).to.equal(0);
});

pm.test("Response 'responseCode' property is null", function () {
    pm.expect(pm.response.json().responseCode).to.be.null;
});
