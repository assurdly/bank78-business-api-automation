{"uid":"e1a3e4e54e0f302b","name":"Signup - RC/BN numeric character input","fullName":"Business APIs - QA/Onboarding (Business)/Sign Up#Signup - RC/BN numeric character input","historyId":"ad43a1dd9312047e069a7222e6ef65c1:cdf101d9440a39617d8ac38c06c3bded","time":{"start":1733508088885,"stop":1733508089078,"duration":193},"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","steps":[{"name":"Response status code is 200","time":{"start":1733508089070,"stop":1733508089070,"duration":0},"status":"failed","statusMessage":"expected 400 to equal 200","statusTrace":"AssertionError: expected 400 to equal 200\n   at Object.eval sandbox-script.js:1:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First name is a non-empty string","time":{"start":1733508089070,"stop":1733508089070,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'firstName')","statusTrace":"TypeError: Cannot read properties of null (reading 'firstName')\n   at Object.eval sandbox-script.js:2:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"lastName is a non-empty string","time":{"start":1733508089071,"stop":1733508089071,"duration":0},"status":"failed","statusMessage":"expected null to exist","statusTrace":"AssertionError: expected null to exist\n   at Object.eval sandbox-script.js:3:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"userName is a non-empty string","time":{"start":1733508089072,"stop":1733508089072,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'userName')","statusTrace":"TypeError: Cannot read properties of null (reading 'userName')\n   at Object.eval sandbox-script.js:4:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response has required fields","time":{"start":1733508089072,"stop":1733508089073,"duration":1},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:5:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Email is in a valid format","time":{"start":1733508089073,"stop":1733508089073,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:6:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Phone number is in a valid format","time":{"start":1733508089074,"stop":1733508089074,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'phoneNumber')","statusTrace":"TypeError: Cannot read properties of null (reading 'phoneNumber')\n   at Object.eval sandbox-script.js:7:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"countryCode is a non-empty string","time":{"start":1733508089074,"stop":1733508089074,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'countryCode')","statusTrace":"TypeError: Cannot read properties of null (reading 'countryCode')\n   at Object.eval sandbox-script.js:8:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Assert resultType is 'Success'","time":{"start":1733508089075,"stop":1733508089075,"duration":0},"status":"failed","statusMessage":"expected 'Error' to equal 'Success'","statusTrace":"AssertionError: expected 'Error' to equal 'Success'\n   at Object.eval sandbox-script.js:9:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3f3226eab87104fe","name":"Request Headers","source":"3f3226eab87104fe.json","type":"application/json","size":1156},{"uid":"6fa0f8ddc8201bb5","name":"Request Body","source":"6fa0f8ddc8201bb5.txt","type":"text/plain","size":450},{"uid":"89f6b11b7723dfc","name":"Response Headers","source":"89f6b11b7723dfc.json","type":"application/json","size":1173},{"uid":"a9a50701dfa103b3","name":"Response Body","source":"a9a50701dfa103b3.txt","type":"text/plain","size":188}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az933-915"},{"name":"thread","value":"pid-2043-worker-main"},{"name":"parentSuite","value":"Business APIs - QA"},{"name":"suite","value":"Onboarding (Business)"},{"name":"subSuite","value":"Sign Up"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":42,"broken":0,"skipped":0,"passed":38,"unknown":0,"total":80},"items":[{"uid":"7faadf657cd7727e","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/363//#testresult/7faadf657cd7727e","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733483135720,"stop":1733483136001,"duration":281}},{"uid":"d73304cae4f2cb97","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/362//#testresult/d73304cae4f2cb97","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733406076607,"stop":1733406077001,"duration":394}},{"uid":"64c08a9c6781dba4","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/361//#testresult/64c08a9c6781dba4","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733405082326,"stop":1733405082526,"duration":200}},{"uid":"3dd4b64ef7e5a451","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/360//#testresult/3dd4b64ef7e5a451","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733322122555,"stop":1733322123563,"duration":1008}},{"uid":"57c935268e71eee1","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/359//#testresult/57c935268e71eee1","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733317710108,"stop":1733317710512,"duration":404}},{"uid":"51a5324b59af05ef","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/358//#testresult/51a5324b59af05ef","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733083581633,"stop":1733083582353,"duration":720}},{"uid":"9dd32cd9e6e05e7a","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/357//#testresult/9dd32cd9e6e05e7a","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732903287217,"stop":1732903287734,"duration":517}},{"uid":"8b23986ff8bda0a3","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/356//#testresult/8b23986ff8bda0a3","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732712893923,"stop":1732712894335,"duration":412}},{"uid":"8f2d59e9d30880a3","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/355//#testresult/8f2d59e9d30880a3","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732647693048,"stop":1732647693256,"duration":208}},{"uid":"66c001d2a1abbc6f","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/354//#testresult/66c001d2a1abbc6f","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732639088266,"stop":1732639088472,"duration":206}},{"uid":"34916bbb6b621331","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/353//#testresult/34916bbb6b621331","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732638894840,"stop":1732638895047,"duration":207}},{"uid":"40d04ab73d33914c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/352//#testresult/40d04ab73d33914c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732627819924,"stop":1732627820135,"duration":211}},{"uid":"5738c2180bf136e0","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/351//#testresult/5738c2180bf136e0","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732625637195,"stop":1732625637421,"duration":226}},{"uid":"571ffb629185d077","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/350//#testresult/571ffb629185d077","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732623079297,"stop":1732623079922,"duration":625}},{"uid":"c76cb7604c24a8b0","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/349//#testresult/c76cb7604c24a8b0","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732622529865,"stop":1732622530147,"duration":282}},{"uid":"6675c9bb5f4f444c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/348//#testresult/6675c9bb5f4f444c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732478746502,"stop":1732478746788,"duration":286}},{"uid":"43c65619e54762a8","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/347//#testresult/43c65619e54762a8","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732298532649,"stop":1732298533015,"duration":366}},{"uid":"c37c02b13c6cb7a8","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/346//#testresult/c37c02b13c6cb7a8","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732108050246,"stop":1732108052096,"duration":1850}},{"uid":"1dd9ee3a56ead5f4","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/345//#testresult/1dd9ee3a56ead5f4","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732008731130,"stop":1732008731344,"duration":214}},{"uid":"738e39461d1f4283","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/344//#testresult/738e39461d1f4283","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732008539239,"stop":1732008539481,"duration":242}}]},"tags":[]},"source":"e1a3e4e54e0f302b.json","parameterValues":["POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business","400"]}