{
	"info": {
		"_postman_id": "d4030388-3031-4450-a581-9452d6310b02",
		"name": "Business APIs - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Login to a Business",
			"item": [
				{
					"name": "Sign In",
					"item": [
						{
							"name": "Signin - Valid details - Mary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56780d2f-6ec1-43f8-853c-f55d481d8b9b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"    pm.expect(jsonData.access_token).to.be.a('string');\r",
											"    pm.expect(jsonData.expires_in).to.be.an('number');\r",
											"    pm.expect(jsonData.token_type).to.be.a('string');\r",
											"    pm.expect(jsonData.refresh_token).to.be.a('string');\r",
											"    pm.expect(jsonData.scope).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"   pm.environment.set(\"business_access_token\", jsonData.access_token);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify expires_in is 3600\", function () {\r",
											"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify token_type is Bearer\", function () {\r",
											"    pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0928e994-255e-44ec-82e0-b81d679a5e37",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "mary+babe@assurdly.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Assurdly01!"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "85c62724-a476-4400-8110-2c56562bed85",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Valid details  {Business acct}",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56780d2f-6ec1-43f8-853c-f55d481d8b9b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"    pm.expect(jsonData.access_token).to.be.a('string');\r",
											"    pm.expect(jsonData.expires_in).to.be.an('number');\r",
											"    pm.expect(jsonData.token_type).to.be.a('string');\r",
											"    pm.expect(jsonData.refresh_token).to.be.a('string');\r",
											"    pm.expect(jsonData.scope).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"   pm.environment.set(\"business_access_token\", jsonData.access_token);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify expires_in is 3600\", function () {\r",
											"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify token_type is Bearer\", function () {\r",
											"    pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f4af49e0-1b4e-4a28-b27c-d98c22ce5938",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "85700b6f-5eda-4df5-bfa3-e4a266cf3197",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "{{bus_username}}"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "581dec94-0a37-4653-9e73-00117522a141",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56780d2f-6ec1-43f8-853c-f55d481d8b9b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"    pm.expect(jsonData.access_token).to.be.a('string');\r",
											"    pm.expect(jsonData.expires_in).to.be.an('number');\r",
											"    pm.expect(jsonData.token_type).to.be.a('string');\r",
											"    pm.expect(jsonData.refresh_token).to.be.a('string');\r",
											"    pm.expect(jsonData.scope).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"   pm.environment.set(\"business_access_token\", jsonData.access_token);\r",
											"   pm.environment.set(\"business_access_token\", jsonData.access_token);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify expires_in is 3600\", function () {\r",
											"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify token_type is Bearer\", function () {\r",
											"    pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "03c3e43a-9ca0-4f3d-beac-81fbfc920aea",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "46497f85-7afd-4b41-9a9a-c390192cd1b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "ogo@mailinator.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Password!123"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "533d07f6-bd94-49e0-9930-683213816fd9",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9da1b221-92c5-40c6-9477-2727f1b70f05",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"    pm.expect(jsonData.error_description).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is unauthorized_client\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('unauthorized_client');\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is Invalid Username or password\", function () {\r",
											"    pm.expect(jsonData.error_description).to.eql('Invalid Username or password');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "68527f0f-2fc2-4664-b2cd-436407ab8568",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "{{bus_username}}"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Test@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "8dae0fbe-1e59-445a-98b2-174a1575f734",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Blank password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is invalid_grant\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('unauthorized_client');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f3d6cf50-3af2-4a5e-a98b-386c5effae14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "{{bus_username}}"
										},
										{
											"description": "password",
											"key": "password",
											"value": ""
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "23707cfc-4110-4cc2-a6ef-2b5da3afbc67",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Invalid username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is unauthorized_client\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('unauthorized_client');\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is Invalid Username or password\", function () {\r",
											"    pm.expect(jsonData.error_description).to.eql('Invalid Username or password');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4a3dfa9e-2f56-439a-8e66-183603a23eff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": "abc@cde.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "fff27458-51c5-4f7b-9380-0ad3686bfdde",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signin - Blank username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body required field\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.error).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Error is invalid_grant\", function () {\r",
											"    pm.expect(jsonData.error).to.eql('invalid_grant');\r",
											"});\r",
											"\r",
											"// pm.test(\"Error message is Invalid Username or password\", function () {\r",
											"//     pm.expect(jsonData.error_description).to.eql('Invalid Username or password');\r",
											"// });\r",
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f061a3a2-d667-4e28-bea3-cf2474fa5283",
										"exec": [
											"postman.setNextRequest(\"Forgot Password - Invalid email\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2b288d06-d1c3-43fa-885b-a8e3bba63633",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username",
											"key": "username",
											"value": ""
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "23a10a2c-32e3-4c63-85a6-50634eb93535",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "c1d037ab-1f15-4fa9-b4dd-e1a38615e2fd"
				}
			],
			"id": "b6a6ae78-17a9-44b7-bdd9-711a08d9c14d"
		},
		{
			"name": "Onboarding (Business)",
			"item": [
				{
					"name": "Sign Up",
					"item": [
						{
							"name": "Get Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is present in the response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is a non-empty string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"Onboarding_access_token\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3223d1ba-cb3b-42c1-8e40-48cb88fb1eda",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "4b2fb78c-9222-4be4-8ca8-dce6dcdf2fa0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "client_credentials"
										},
										{
											"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
											"key": "username",
											"value": "test8033@mailinator.com",
											"disabled": true
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980",
											"disabled": true
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "84c0b814-bda1-4f9c-a580-92c9ae36fb27",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "748094b2-a553-48d2-b309-981790734fdc",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											"var rand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var email = \"test\"+rand+\"@mailinator.com\"\r",
											"pm.environment.set(\"bus_email\",email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ddfbb0b6-335f-4e86-abea-0f23dc3aaae9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Result - Response has required fields\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.be.a('string');\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string');\r",
											"    pm.expect(responseData.result.userName).to.exist;\r",
											"    pm.expect(responseData.result.email).to.exist;\r",
											"    pm.expect(responseData.result.phoneNumber).to.be.a('string');\r",
											"    pm.expect(responseData.result.phoneNumberCountryCode).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response contains hasResult\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"First name is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.have.lengthOf.at.least(2, \"Value should not be empty\");\r",
											"    pm.collectionVariables.set(\"firstname\", responseData.result.firstName);\r",
											"});\r",
											"\r",
											"pm.test(\"lastName is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.lastName).to.have.lengthOf.at.least(2, \"lastName should not be empty\");\r",
											"});\r",
											"\r",
											"pm.test(\"userName is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.userName).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"    pm.collectionVariables.set(\"userName\", responseData.result.userName);\r",
											"});\r",
											"\r",
											"pm.test(\"Email is in a valid format\", function () {\r",
											"    pm.expect(responseData.result.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"pm.test(\"Phone number has a valid length\", function () {\r",
											"    pm.expect(responseData.result.phoneNumber).to.have.lengthOf(10);\r",
											"});\r",
											"\r",
											"pm.test(\"countryCode is a non-empty string\", function () {\r",
											"    pm.expect(responseData.result.countryCode).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is a number and has a value of Success\", function () {\r",
											"    pm.expect(responseData.resultType).to.equal('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"message is a string\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Set Business email,name,typeId as global variable\", function () {\r",
											"    pm.globals.set(\"NewBusinessEmail\", jsonData.result.email)\r",
											"    pm.globals.set(\"NewBusinessName\", jsonData.result.businessName)\r",
											"    pm.globals.set(\"NewBusinessTypeId\", jsonData.result.TypeId)\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ee262cf5-9cef-4c59-ab42-324d0105f66a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"userName\": \"{{bus_email}}\",\n    \"email\": \"{{bus_email}}\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessTypeId\": 1,\n    \"businessType\": \"Business Name\",\n    \"businessName\": \"{{$randomFirstName}} {{$randomLastName}}{{number}} ltd\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC{{number}}\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "d21bcf81-cb06-477a-9e65-71d8d167d63b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Numbers in name field",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7711997f-47fc-42d8-b10d-8016f904d04d",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "30c7191c-5241-4b23-ba19-1a4a95d90352",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify response contains hasResult\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a non-empty string\", function () {\r",
											"    pm.expect(responseData.resultType).to.eq('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is a non-empty string\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eq('');\r",
											"});\r",
											"\r",
											"// pm.test(\"Email is in a valid format\", function () {\r",
											"//     pm.expect(responseData.result.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"// });\r",
											"\r",
											"\r",
											"// // pm.test(\"Phone number is in a valid format\", function () {\r",
											"// //     pm.expect(responseData.result.phoneNumber).to.match(/^\\+\\d{1,3}-\\d{1,14}$/);\r",
											"// // });\r",
											"\r",
											"// pm.test(\"Phone number has a valid length\", function () {\r",
											"//     pm.expect(responseData.result.phoneNumber).to.have.lengthOf(10);\r",
											"// });\r",
											"\r",
											"// pm.test(\"countryCode is a non-empty string\", function () {\r",
											"//     pm.expect(responseData.result.countryCode).to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"// });\r",
											"\r",
											"// pm.test(\"resultType is a number and has a value of 0\", function () {\r",
											"//     pm.expect(responseData.resultType).to.equal('Success');\r",
											"// });\r",
											"\r",
											"// pm.test(\"message is success\", function () {\r",
											"//     pm.expect(responseData.message).to.equal('Success');\r",
											"// });\r",
											"\r",
											"// pm.test(\"Successful\", function () {\r",
											"//     pm.expect(responseData.successful).to.eql(true);\r",
											"// });\r",
											"// // pm.environment.set(\"latest_cust_email\", responseData.result.email);\r",
											"\r",
											"\r",
											"\r",
											"// /*pm.test(\"Check that the response has a 'result' object with specific properties\", function () {\r",
											"//     var jsonData = pm.response.json();\r",
											"//     pm.expect(jsonData).to.have.property('result').that.is.an('object');\r",
											"//     pm.expect(jsonData.data).to.have.property('firstName');\r",
											"//     pm.expect(jsonData.data).to.have.property('lastName');\r",
											"//     pm.expect(jsonData.data).to.have.property('userName');\r",
											"//     pm.expect(jsonData.data).to.have.property('email');\r",
											"   \r",
											"// });\r",
											"// */"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b3e1963b-adb9-446e-bd67-5c99ca7d733c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"1234\",\n    \"lastName\": \"1234\",\n    \"userName\": \"test882@mailinator.com\",\n    \"email\": \"test882@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC{{number}}\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "ae583c64-2091-444b-bb81-3652854d1255",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Existing Phone No",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bb8f1d49-2cfb-4eba-809c-055bbfbbdef5",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "24f2f891-cc0f-45bf-b3bd-375e265c1208",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response body contains validationMessages\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"This phone number is attached to another record.\");\r",
											"});\r",
											"\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "82d9015a-983f-4372-b365-5dce254012b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"userName\": \"test885@mailinator.com\",\n    \"email\": \"test885@mailinator.com\",\n    \"phoneNumber\": \"8067447899\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC{{number}}\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "f7f9160d-f7f9-4017-b3a5-825befeda0ae",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Existing username",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "69d1ebd5-71d3-4cce-b724-9044daa8fe60",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b908b948-0e94-4137-a654-1e750cf610eb",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify response body contains validationMessages\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"This phone number already exists\");\r",
											"});\r",
											"\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "fcb5d2ae-c5b1-4da9-8f86-88ac3c678e11",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"userName\": \"test4531@mailinator.com\",\n    \"email\": \"test453@mailinator.com\",\n    \"phoneNumber\": \"8067447890\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC{{number}}\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "47204a8a-1f41-4a7f-9481-42315f5e93c0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Names/CharacterCheck/<2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resultType property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8faa6235-eaad-4083-a059-06fe1d69c499",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"a\",\n    \"lastName\": \"b\",\n    \"userName\": \"test825@mailinator.com\",\n    \"email\": \"test825@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC{{number}}\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "1228dc81-5509-4fcd-aadc-d6c0c7aa2f0b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Existing RC/BN number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"First name is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.firstName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"lastName is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"lastName should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"userName is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.userName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response has required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.email).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.phoneNumber).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.countryCode).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Email is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Phone number is in a valid format\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.phoneNumber).to.match(/^\\d+$/);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"countryCode is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.countryCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Assert resultType is 'Success'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.equal(\"Success\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b6689d1d-b64e-48a3-a19c-2c3c5ac8e87a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"a\",\n    \"lastName\": \"b\",\n    \"userName\": \"test85@mailinator.com\",\n    \"email\": \"test85@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC8067447899\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "a5f6f2d6-9bbb-41db-8049-f62516e020b2",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Blank username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"  var jsonData = pm.response.json();\r",
											"  pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify email cannot be duplicated\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql( \"Please Provide Customer Email\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8e38eba4-0778-4096-b428-f04dd7b6d5be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"a\",\n    \"lastName\": \"b\",\n    \"userName\": \"\",\n    \"email\": \"test88@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC8067447899\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "af9ebc2d-fe16-4ba6-b33c-22b3ed4c4ea3",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Invalid Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains message\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Response has validation errors\");\r",
											"});\r",
											"pm.test(\"verify password character combinations\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"Password must contain a number\",\r",
											"        \"Password must include Upper Case Character\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b0b4a690-a8b3-45c1-88f8-46a0beb74232",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"a\",\n    \"lastName\": \"b\",\n    \"userName\": \"test8725@mailinator.com\",\n    \"email\": \"test8725@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"NG\",\n    \"rcBnNumber\": \"RC8067447899\",\n    \"Password\":\"Tested\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "89d6157c-2068-4b89-aab1-3050557dff87",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Invalid countrycode",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"pm.test(\"verify reponse contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Error\");\r",
											"});\r",
											"pm.test(\"verify reponse contains message\", function () {\r",
											"    pm.expect(pm.response.text()).to.include( \"Error in Saving User \");\r",
											"});\r",
											"pm.test(\"verify reponse contains validationMessage\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ead3754d-317d-400d-8bf6-d87420620d6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"a\",\n    \"lastName\": \"b\",\n    \"userName\": \"test875@mailinator.com\",\n    \"email\": \"test875@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"89\",\n    \"rcBnNumber\": \"RC8067447899\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "2c60a34e-ef82-49d9-8831-29e54e3bfeab",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - All blank field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains message\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Response has validation errors\");\r",
											"});\r",
											"pm.test(\"verify password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"The tempCustomerDto field is required.\",\r",
											"        \"Unexpected character encountered while parsing value: }. Path 'agreeToSignUpTandC', line 13, position 1.\",\r",
											"        \"Unexpected end when deserializing object. Path 'agreeToSignUpTandC', line 14, position 0.\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d9ca78ef-fc3e-477b-b748-afa5e6a87fb8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"userName\": \"\",\n    \"email\": \"\",\n    \"phoneNumber\": \"\",\n    \"phoneNumberCountryCode\": \"\",\n    \"referralCode\": \"\",\n    \"countryCode\": \"\",\n    \"rcBnNumber\": \"\",\n    \"agreeToSignUpTandC\": true,\n    \"Password\":\"\"\n     \n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "ed3f788a-25e1-4521-bcdc-e7a0dd2231e5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Existing email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"  var jsonData = pm.response.json();\r",
											"  pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Verify email cannot be duplicated\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"This email already exists\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains hasResult\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											"pm.test(\"verify reponse body contains result\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(null);\r",
											"});\r",
											"pm.test(\"verify reponse body contains resultType\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ValidationError\");\r",
											"});\r",
											"pm.test(\"verify reponse body contains successful\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4f515376-bbbe-40cb-bd5b-fdc822e97177",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Baya\",\n    \"lastName\": \"Bay\",\n    \"userName\": \"test4531@mailinator.com\",\n    \"email\": \"test4531@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"89\",\n    \"rcBnNumber\": \"RC8067447899\",\n    \"Password\":\"Tested@0980\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "2428f9ff-636b-4f4f-9138-e70db3e3a2ba",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Signup - Blank password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3bbd591-7f4e-43d4-bcac-f20edc665da8",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with properties\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('hasResult');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('result');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('resultType');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('message');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('validationMessages');\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.property('successful');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is of type boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"resultType property is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"message property is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages property is an array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is of type boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf093915-93e8-492d-8b49-cd80fb186f64",
										"exec": [
											"var num = Math.floor(Math.random() * (9999 - 1000) + 1000)\r",
											"var number  = \"806744\" + num\r",
											"pm.environment.set(\"number\", number)\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f50244af-18f0-4cf4-9ea7-bdc2bc515444",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Baya\",\n    \"lastName\": \"Bay\",\n    \"userName\": \"test31@mailinator.com\",\n    \"email\": \"test31@mailinator.com\",\n    \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\",\n    \"referralCode\": \"\",\n    \"businessName\": \"Documen\",\n    \"countryCode\": \"89\",\n    \"rcBnNumber\": \"RC8067447899\",\n    \"Password\":\"\",\n    \"agreeToSignUpTandC\": true\n  }",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/onboard/api/user/save?profile=business",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"onboard",
										"api",
										"user",
										"save"
									],
									"query": [
										{
											"key": "profile",
											"value": "business"
										}
									]
								}
							},
							"response": [
								{
									"id": "52af4ee4-802d-4547-b352-9b4c669f9ec8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/save?profile=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"save"
											],
											"query": [
												{
													"key": "profile",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "683c0474-ce30-43dd-b9b3-d554c820a709"
				},
				{
					"name": "Verify Email",
					"item": [
						{
							"name": "Verify email - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95697624-bf87-4136-b7d0-add3d73b1561",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"firstName is correct\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.eq(pm.collectionVariables.get(\"firstname\"));\r",
											"});\r",
											"\r",
											"pm.test(\"lastName is a string\", function () {\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"userName is correct\", function () {\r",
											"    pm.expect(responseData.result.userName).to.eq(pm.collectionVariables.get(\"userName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email is a valid email format\", function () {\r",
											"    pm.expect(responseData.result.email).to.exist.and.to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"// pm.test(\"Phone number is a valid phone number format\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"//     pm.expect(responseData.result.phoneNumber).to.match(/^\\+\\d{1,3}-\\d{6,14}$/);\r",
											"// });\r",
											"\r",
											"pm.test(\"Phone number is a valid phone number format\", function () {\r",
											"    pm.expect(responseData.result.phoneNumber).to.have.lengthOf(10);\r",
											"});\r",
											"\r",
											"pm.test(\"phoneNumberCountryCode should be a string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.result.phoneNumberCountryCode).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"referralCode should be a string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.result.referralCode).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "88315584-aede-42c1-8e3f-6c9b052b6d43",
										"exec": [
											"pm.collectionVariables.set(\"bus_username\", pm.environment.get(\"bus_email\"));\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3e9797ce-876f-4fe5-a9bb-9e711e8eb789",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Onboarding_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"{{bus_username}}\", \n  \"otp\": \"257340\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "cb79f261-6534-4b24-920f-639b9ceb6612",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Valid details Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95697624-bf87-4136-b7d0-add3d73b1561",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"firstName is correct\", function () {\r",
											"    pm.expect(responseData.result.firstName).to.eq(pm.collectionVariables.get(\"firstname\"));\r",
											"});\r",
											"\r",
											"pm.test(\"lastName is a string\", function () {\r",
											"    pm.expect(responseData.result.lastName).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"userName is correct\", function () {\r",
											"    pm.expect(responseData.result.userName).to.eq(pm.collectionVariables.get(\"userName\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Email is a valid email format\", function () {\r",
											"    pm.expect(responseData.result.email).to.exist.and.to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
											"});\r",
											"\r",
											"// pm.test(\"Phone number is a valid phone number format\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"//     pm.expect(responseData.result.phoneNumber).to.match(/^\\+\\d{1,3}-\\d{6,14}$/);\r",
											"// });\r",
											"\r",
											"pm.test(\"Phone number is a valid phone number format\", function () {\r",
											"    pm.expect(responseData.result.phoneNumber).to.have.lengthOf(10);\r",
											"});\r",
											"\r",
											"pm.test(\"phoneNumberCountryCode should be a string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.result.phoneNumberCountryCode).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"referralCode should be a string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData.result.referralCode).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "88315584-aede-42c1-8e3f-6c9b052b6d43",
										"exec": [
											"pm.collectionVariables.set(\"bus_username\", pm.environment.get(\"bus_email\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "294352cb-750b-47ee-9b59-aff058231b75",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{su_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"{{bus_username}}\", \n  \"otp\": \"307356\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "c9fb9f2a-81f1-46bf-a9de-4bf1463d7608",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Unregistered email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9cdb8880-fd67-465b-8288-8ec9ee3d3759",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-ValidationError\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Response has validation errors\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body validationMessages\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eql(\"Unable to find user email in the System\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b2c58061-264e-4670-9c7e-73ab6072c1de",
										"exec": [
											"// pm.collectionVariables.set(\"username\", pm.environment.get(\"cust_email\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1fd25f21-1f9c-465f-a2e5-85a44f9aa6a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{su_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"ab@bn.mn\", \n  \"otp\": \"163155\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "9ec863d5-d6d2-42a9-8d0b-f88a5ea8ddcb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Blank email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d3f732-383d-439d-8280-c4e069334939",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-ValidationError\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Response has validation errors\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body validationMessages\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eql(\"'User Name' must not be empty.\");\r",
											"    pm.expect(responseData.validationMessages[1]).to.eql(\"Unable to find user email in the System\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a6280885-e8b0-4a18-94b3-38f6a9a101fc",
										"exec": [
											"pm.collectionVariables.set(\"username\", pm.environment.get(\"cust_email\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8b269ba1-198a-4b82-8b3f-c7c4bb1069a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{su_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"\", \n  \"otp\": \"254876\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "e35c35c5-3887-474c-be2f-b2906419b39b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Invalid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95697624-bf87-4136-b7d0-add3d73b1561",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-Error\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Invalid OTP\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Invalid OTP');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cd7a93f6-439d-41d0-b1e3-735c0655f85a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{su_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"{{userName}}\", \n  \"otp\": \"qwec\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "c3bdbb64-5614-41ee-b004-21590abe064c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify email - Blank OTP field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95697624-bf87-4136-b7d0-add3d73b1561",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body hasResult-false\", function () {\r",
											"    pm.expect(responseData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body resultType-ValidationError\", function () {\r",
											"    pm.expect(responseData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body message-Response has validation errors\", function () {\r",
											"    pm.expect(responseData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response body validationMessages\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eql(\"'Otp' must not be empty.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response body successful\", function () {\r",
											"    pm.expect(responseData.successful).to.eql(false);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "afe028e5-2036-4da9-870c-691244111373",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{su_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \n  \"UserName\": \"{{userName}}\", \n  \"otp\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/user/otp/verify/email"
							},
							"response": [
								{
									"id": "4b811318-ace0-41f2-a0bc-fb8689b3d58f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"referralCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"password\": \"<string>\",\n  \"otp\": \"<string>\",\n  \"status\": \"<string>\",\n  \"rcBnNumber\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/user/otp/verify/email"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"referralCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"password\": \"<string>\",\n    \"otp\": \"<string>\",\n    \"status\": \"<string>\",\n    \"rcBnNumber\": \"<string>\"\n  },\n  \"resultType\": 4,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "51e91621-8043-4bdc-a888-39c0c6af2425"
				}
			],
			"id": "1e3e802c-828a-48f3-9a4a-09302e8b10ca",
			"auth": {
				"type": "apikey",
				"apikey": {
					"value": "{{x-api-key}}",
					"key": "x-api-key"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9d4ff15c-3c98-4f8a-b242-ac1e832e6d92",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0611bca0-d443-48b1-8688-18c75b0191a1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "pin (Business)",
			"item": [
				{
					"name": "request-pin-otp",
					"item": [
						{
							"name": "Request PIN OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "915bbb31-2106-4e57-977d-0867b1ee3436",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.exist;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'result' field should be an object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fe4f0f44-a6be-48dd-bab1-2e700cc05692",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2024\",\n  \"pin\": \"2024\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/request-pin-otp"
							},
							"response": [
								{
									"id": "3767e550-1015-44c6-a71f-33b12b9d6dc5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"7181\",\n  \"pin\": \"5013\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/request-pin-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Request PIN OTP - Blank Pin field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "915bbb31-2106-4e57-977d-0867b1ee3436",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.an('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.an('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('The Pin field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ee8fb5d5-4629-4cb4-8fe2-e198412fc0f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2222\",\n  \"pin\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/request-pin-otp"
							},
							"response": [
								{
									"id": "2ecf1fef-59b4-40f3-9461-78e3973ec3a5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"7181\",\n  \"pin\": \"5013\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/request-pin-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Request PIN OTP - Blank Confirm Pin field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "915bbb31-2106-4e57-977d-0867b1ee3436",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.an('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.an('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('The ConfirmPin field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "83d6b41a-78d6-4114-b720-d1b3a1f95279",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"\",\n  \"pin\": \"2222\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/request-pin-otp"
							},
							"response": [
								{
									"id": "18eee43d-3628-49d6-8045-447e5755b01f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"7181\",\n  \"pin\": \"5013\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/request-pin-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Request PIN OTP - Mismatched Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "915bbb31-2106-4e57-977d-0867b1ee3436",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.an('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.an('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 2\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Pin and confirm pin don't match\");\r",
											"});\r",
											"\r",
											"pm.test(\"successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "224accbb-46ff-4a38-b221-4ee7234d6d31",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2000\",\n  \"pin\": \"2222\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/request-pin-otp"
							},
							"response": [
								{
									"id": "1c77df9f-e57b-4418-9cbf-2b8ffce8640b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"7181\",\n  \"pin\": \"5013\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/request-pin-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Request PIN OTP - Alphabets",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "915bbb31-2106-4e57-977d-0867b1ee3436",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.an('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.an('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"PIN can only be digits with a length of 4\",\r",
											"        \"Confirm PIN can only be digits with a length of 4\");\r",
											"});\r",
											"\r",
											"pm.test(\"successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ae388e17-521d-4773-a672-eb8e2d8f8e84",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"adc\",\n  \"pin\": \"adc\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/request-pin-otp"
							},
							"response": [
								{
									"id": "ee48d681-b116-4768-b574-cc662e322e2f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"7181\",\n  \"pin\": \"5013\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/request-pin-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "e96bd7f4-e0de-4808-8f4d-6216f6ead0ac"
				},
				{
					"name": "Verify-otp",
					"item": [
						{
							"name": "Verify OTP - Valid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "855f89f2-3aeb-4aaf-a13f-d9bb67410f55",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.exist;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'result' field should be an object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "653fabe9-6717-4e6d-880e-fd43868f2b27",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"614847\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-otp"
							},
							"response": [
								{
									"id": "f64fd962-a5d8-4e5a-a750-fbb701a2c259",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"otp\": \"381557\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify OTP - Invalid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "855f89f2-3aeb-4aaf-a13f-d9bb67410f55",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Invalid OTP\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "77b8daff-b18d-461b-8658-5d6d8377d823",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"208516\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-otp"
							},
							"response": [
								{
									"id": "d727c2e7-b0fe-4d10-a91e-ce0de278bb20",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"otp\": \"381557\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify OTP - Blank OTP field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "855f89f2-3aeb-4aaf-a13f-d9bb67410f55",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.be.an('array');\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The validationMessages field is present\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eq(\"The OTP field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "17f18b14-cc9e-411a-94dd-5a56354e5516",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"otp\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-otp"
							},
							"response": [
								{
									"id": "f3f97335-1eb1-4227-a0d8-ad73149b72d1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"otp\": \"381557\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-otp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "e4925ce9-0810-4694-bfcd-c64f94d2e554"
				},
				{
					"name": "create-pin",
					"item": [
						{
							"name": "Create Pin - Mismatched PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0090914f-b497-44bb-a634-346ddf6a9145",
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Pin and confirm pin don't match\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7cf3ad39-a63e-4c52-aede-4a5d68c3e6cd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6383\",\n  \"otp\": \"710071\",\n  \"pin\": \"6123\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/create-pin"
							},
							"response": [
								{
									"id": "bd0e212a-b318-489c-8015-e690424003b9",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"8868\",\n  \"otp\": \"061967\",\n  \"pin\": \"8911\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/create-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Pin - Valid Matching PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0090914f-b497-44bb-a634-346ddf6a9145",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.result.message).to.eq(\"PIN Created Successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eql(\"Success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e50e7fdf-1b5c-4624-b5ce-f75a046dbcf2",
										"exec": [
											"// var wand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"// var PIN = wand\r",
											"// pm.environment.set(\"cust_PIN\",PIN)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bbae825b-e079-4ec7-b873-92cfb8f95478",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"8756\",\n  \"otp\": \"622403\",\n  \"pin\": \"8756\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/create-pin"
							},
							"response": [
								{
									"id": "6259021e-03ec-4ebf-aa01-7c17dce0490a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"8868\",\n  \"otp\": \"061967\",\n  \"pin\": \"8911\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/create-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Pin - Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0090914f-b497-44bb-a634-346ddf6a9145",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "86d4886a-7e70-4ede-97b3-760c75884776",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6383\",\n  \"otp\": \"35560\",\n  \"pin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/create-pin"
							},
							"response": [
								{
									"id": "cbff05ac-07fe-405d-a0c6-86e7ee0855a0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"8868\",\n  \"otp\": \"061967\",\n  \"pin\": \"8911\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/create-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "0b976c86-8580-4b9c-a983-625857d5fe0c"
				},
				{
					"name": "Verify PIN",
					"item": [
						{
							"name": "Verify Pin - Valid PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											" const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"The 'result' field should be an object\", function () {\r",
											"    pm.expect(responseData.result.message).to.be.a('string');\r",
											"    pm.expect(responseData.result.message).to.eq('PIN Verified Successfully');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(true);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e9969621-7ebe-4319-b09c-7051ac3bdde6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"8756\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "24b32b72-4569-4b43-b502-57c7b2adfda5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify Pin - Invalid PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c89c6093-1ffe-4b52-82f4-9ca5ecb115fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"0956\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "e557f573-b9ea-4307-922e-777af0e584e6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify Pin - Blank PIN field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The validationMessages field is present\", function () {\r",
											"    pm.expect(responseData.validationMessages[0]).to.eq(\"The Pin field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "880589ae-ee77-401d-9c3d-7dbedf2072a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "847a314e-55af-4088-b6ba-cd759bcc70ea",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Verify Pin - Invalid PIN length",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44219715-e73f-4a6a-a76c-05ce830aab17",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"const responseData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has the required fields\", function () {\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist;\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.exist;\r",
											"    pm.expect(responseData.message).to.exist;\r",
											"    pm.expect(responseData.validationMessages).to.be.null;\r",
											"    pm.expect(responseData.successful).to.exist;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"The message field is present\", function () {\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The successful field is present\", function () {\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.successful).to.eq(false);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5b8ff116-c5e7-44d3-aca6-9d33b2a7cfff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pin\": \"a34\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/verify-pin"
							},
							"response": [
								{
									"id": "deb82efc-ee97-4f6b-9d19-5172fea0b8ab",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"pin\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/verify-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "8ccb6f98-edd5-4c0c-b88b-362eef3c2404"
				},
				{
					"name": "change-pin",
					"item": [
						{
							"name": "Change PIN - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3aa5610a-7312-4d91-8b9c-e2d71af3d83e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "03c5d8fd-4119-49f9-9d14-ee9be58a50b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"1111\",\n  \"newPin\": \"1111\",\n  \"oldPin\": \"8756\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "c213e66e-74c0-4c1e-81c8-9a915dfdc510",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN - Old=New PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"You can't use your previous PIN. Please use a different PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9d1cd465-60b1-49db-92d4-7e2f0c5be832",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"1111\",\n  \"newPin\": \"1111\",\n  \"oldPin\": \"1111\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "799bc4d2-007b-4b64-bc49-36bd9f229197",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN - Incorrect PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Incorrect PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "56419511-a54d-401d-97c2-e8ef8ce6e033",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"1111\",\n  \"newPin\": \"1111\",\n  \"oldPin\": \"1911\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "b6ba8874-3631-4246-898d-1d4ed9060c3b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN - Mismatched new PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Pin doesnt match\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b0740103-5d82-4b3b-840a-2f778eab9886",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2229\",\n  \"newPin\": \"2222\",\n  \"oldPin\": \"1111\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "9ee71d08-1415-4ead-8462-14173279d06c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change PIN -Blank old PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f2676f3-4d5c-4f40-9601-a301c2dda5bf",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"The OldPin field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f2c7907a-7581-43b2-ba91-fbb0d74d9c1e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2229\",\n  \"newPin\": \"2222\",\n  \"oldPin\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/change-pin"
							},
							"response": [
								{
									"id": "233baa0e-a1cf-4c13-b911-fd0b1922e714",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"3928\",\n  \"newPin\": \"1480\",\n  \"oldPin\": \"3547\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/change-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "7e766dbf-5c67-4196-96e5-73b15a4c3b67"
				},
				{
					"name": "forgot-pin",
					"item": [
						{
							"name": "Forgot PIN - Valid access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7702790e-2334-4916-b408-ff8438fcd196",
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "58f66c4b-9ccb-41fb-8871-249332b4c6a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/identity/api/v1/users/pin/forgot-pin"
							},
							"response": [
								{
									"id": "8637fb72-c7c1-4fa8-bf78-5d16ac8731cc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/users/pin/forgot-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot PIN - No access",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a2a234-94b7-49c5-90e5-1498f261131e",
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5742fb1-e457-444a-99f0-268e99b25996",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/identity/api/v1/users/pin/forgot-pin"
							},
							"response": [
								{
									"id": "6e52fc0d-47f5-4a4f-8c44-e32e42c45720",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/users/pin/forgot-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "d54344dc-a933-4c01-b442-b90651184b61"
				},
				{
					"name": "reset-pin",
					"item": [
						{
							"name": "Reset PIN - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result).to.have.property(\"message\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6370f484-8027-4da7-824e-1feb952223d2",
										"exec": [
											"var wand = Math.floor(Math.random()* (9999 -1000) + 100)\r",
											"var PIN = wand\r",
											"pm.environment.set(\"cust_PIN\",PIN)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4a9226a9-d0db-4671-9674-345eebd8c062",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"2363\",\n  \"newPin\": \"2363\",\n  \"otp\": \"661857\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "7e72f2e7-eb16-4525-bb1a-2bfe38993237",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Blank OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"The OTP field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8884c584-ecb4-461b-ad99-a18a5d0ecba1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6385\",\n  \"newPin\": \"6385\",\n  \"otp\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "75300767-a566-4404-9d29-45060f6ae7db",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Invalid OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"OTP can only be 6 digits\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d5e510ef-19f6-41e4-8143-1c641cf44ab2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6385\",\n  \"newPin\": \"6385\",\n  \"otp\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "27868e8e-c408-4277-a1bd-92ca45a9487e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Expired OTP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"OTP can only be 6 digits\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "247d0715-db5b-4829-abbb-0c2bc4444e0c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"6385\",\n  \"newPin\": \"6385\",\n  \"otp\": \"123456\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "55769252-c65d-41fb-85c5-59e576323eba",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Invalid PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"PIN can only be digits with a length of 4\",\r",
											"        \"Confirm PIN can only be digits with a length of 4\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "61ebb624-f256-40cc-94e9-6b0c30bdab78",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"85\",\n  \"newPin\": \"85\",\n  \"otp\": \"750235\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "52580805-8792-44e6-838a-078e8a2b9b4d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset PIN - Mismatched PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aec9c988-05d4-4827-b0e4-9bbafd5e2009",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\")\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is an object\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property has a message property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Pin and confirm pin don't match\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is a string\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a(\"boolean\");\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "21ac26dc-d5fe-4c00-9b78-6e67c071b3fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPin\": \"8501\",\n  \"newPin\": \"8500\",\n  \"otp\": \"750235\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/api/v1/users/pin/reset-pin"
							},
							"response": [
								{
									"id": "d3010e58-bf0e-4164-b03a-312f29142953",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPin\": \"6271\",\n  \"newPin\": \"3762\",\n  \"otp\": \"626481\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/users/pin/reset-pin"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "e79dd69a-5453-4dec-96bb-77ea0e894ec5"
				}
			],
			"id": "c5df4d03-f38b-4cf6-a6d4-60dcfe596b9a"
		},
		{
			"name": "Passwords (Business)",
			"item": [
				{
					"name": "forgot",
					"item": [
						{
							"name": "Forgot Password - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95d70e6c-2015-47a2-bb37-b79955eaeea2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resultType property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"Email address is invalid\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "72ff887e-7fc3-403f-ab2b-d6b5ad05d537",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/spreadsheets/d/1Q8d_SD6dFPWaozL7HKcbaNjV99rdlBPcorGm0VMEUuc/edit#gid=0\",\n  \"username\": \"abc@d\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "354525fa-21ad-41cd-88f2-2c5eac28280d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot Password - Blank email field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95d70e6c-2015-47a2-bb37-b79955eaeea2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resetTokenId property\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq(\"The Username field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7717e40a-ec08-4669-b46c-3863978f3861",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/spreadsheets/d/1Q8d_SD6dFPWaozL7HKcbaNjV99rdlBPcorGm0VMEUuc/edit#gid=0\",\n  \"username\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "4b4a59ad-d4cd-470d-84de-dc9a17374cd3",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot Password - Blank resetpasswordurl",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95d70e6c-2015-47a2-bb37-b79955eaeea2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response bodi is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validation is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"The ResetPasswordUrl field is required.\",\r",
											"        \"The ResetPasswordUrl field is not a valid fully-qualified http, https, or ftp URL.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "62d112a9-ceba-4d7e-919e-039cc795e8a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"\",\n  \"username\": \"{{userName}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "1cd12390-4bf2-4143-a48d-c56e48a8f204",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Forgot Password - Valid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0fc68154-f14f-455d-82f6-422a385fe32d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a result message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Recovery email sent successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains a resultType property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29533198-1fbc-4520-bb45-b502d45e5c26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/spreadsheets/d/1Q8d_SD6dFPWaozL7HKcbaNjV99rdlBPcorGm0VMEUuc/edit#gid=0\",\n  \"username\": \"{{bus_username}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/forgot"
							},
							"response": [
								{
									"id": "de1955ed-878e-4fbc-9dc7-559bebbab353",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/forgot"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"resetTokenId\": \"<string>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "bfe9f82d-3bb1-4279-9e95-d85388d74307"
				},
				{
					"name": "resendlink",
					"item": [
						{
							"name": "Resend link - Valid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Password Reset link resent\");\r",
											"});\r",
											"\r",
											"// pm.test(\"Result property contains a message property\", function () {\r",
											"//     pm.expect(jsonData.result.resetTokenId).to.be.a('string');\r",
											"//     pm.expect(jsonData.result.resetTokenId).to.eq(\"Password Reset link resent\");\r",
											"// });\r",
											"\r",
											"pm.test(\"Result property contains a resetTokenId property\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"ResultType is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "800bc185-275d-4f4b-8402-6389696e3115",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/document/d/1cO2JYPMIDxXq7HlavaRvyxucwMVkf6WFq_C4tNergj8/edit\",\n  \"username\": \"{{bus_username}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "6e782e0d-50c2-4635-a676-89a0a2d42bae",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resend link - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Email address is invalid');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f3e43637-3136-4878-adf5-813c579f20bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/document/d/1cO2JYPMIDxXq7HlavaRvyxucwMVkf6WFq_C4tNergj8/edit\",\n  \"username\": \"adr@fd\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "eca630fc-911f-4768-bebf-5dc09128630d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resend link - Blank resetpasswordurl",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response bodi is present\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validation is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an(\"array\");\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"The ResetPasswordUrl field is required.\",\r",
											"        \"The ResetPasswordUrl field is not a valid fully-qualified http, https, or ftp URL.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "142ef3d5-c78d-4628-bcac-e527f2cf8dfd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"\",\n  \"username\": \"{{bus_username}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "fce25b2b-8bb2-46da-8a83-c256fc944e36",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resend link -Blank email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70be0b22-b417-4079-a4e8-fda21d70188e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Username field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "63c446a9-d1c1-4e10-a314-53a3bb7908c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"resetPasswordUrl\": \"https://docs.google.com/document/d/1cO2JYPMIDxXq7HlavaRvyxucwMVkf6WFq_C4tNergj8/edit\",\n  \"username\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendlink"
							},
							"response": [
								{
									"id": "3d95b9a7-78a5-4098-afed-12d19bb99eb4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"resetPasswordUrl\": \"<uri>\",\n  \"username\": \"MbGsaHMTEH.WQAH-6q53Efv.sB@33c43hdrj3B-Es2Swsfn-NnartasH1Q.kqw.47VXldTEjeo.5-siD4_V.BX55rWY-lGpyiDmw8My.OSVagBz8_zg-E-0I-rmHXI8b-ojns6kl8Bi.Z1.avZh-VXgEn-B5x.TOylwf\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendlink"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "50b97185-94fa-48df-8929-e06c94b3b51a"
				},
				{
					"name": "resendotp",
					"item": [
						{
							"name": "Resendotp - Valid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef120bf4-0c47-45c4-9e8a-2efbbebd8256",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Password Reset Code sent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a resetTokenId property\", function () {\r",
											"    pm.expect(jsonData.result.resetTokenId).to.be.a('string');\r",
											"    pm.environment.set(\"bus_resetTokenId\", jsonData.result.resetTokenId);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType us present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "218892c5-b169-493d-a22b-ac4ea7139310",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{bus_username}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendotp"
							},
							"response": [
								{
									"id": "c61a8a9e-23a6-44c3-8388-6a08e684b91a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"mMV3S.KKr.F6n+Lg0h'18ymRAK-J0YvUk8+C'hs1-je8K05HQU'BqbDP5@WS0QmoD.HNp8.1-BuXsPBfP-jN-wyT4KR0GlVK.j.c7oA-RP-6AXj-vmX.nJqJ67h\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendotp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resendotp - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58846a7c-5f42-4de3-bd85-8c37e850c298",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Email address is invalid');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "670ab95a-af0f-4df9-89ed-7aeb7d90ec2a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"adv#hx\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendotp"
							},
							"response": [
								{
									"id": "78f3c5fb-b4c2-4ea6-a4e4-4468dbcf57bd",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"mMV3S.KKr.F6n+Lg0h'18ymRAK-J0YvUk8+C'hs1-je8K05HQU'BqbDP5@WS0QmoD.HNp8.1-BuXsPBfP-jN-wyT4KR0GlVK.j.c7oA-RP-6AXj-vmX.nJqJ67h\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendotp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Resendotp - Blank email field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58846a7c-5f42-4de3-bd85-8c37e850c298",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Username field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ba0a1233-15ae-4778-a556-7fcf437f1314",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/resendotp"
							},
							"response": [
								{
									"id": "905f833a-d292-4279-85fd-02a622af92d8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"mMV3S.KKr.F6n+Lg0h'18ymRAK-J0YvUk8+C'hs1-je8K05HQU'BqbDP5@WS0QmoD.HNp8.1-BuXsPBfP-jN-wyT4KR0GlVK.j.c7oA-RP-6AXj-vmX.nJqJ67h\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/resendotp"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"message\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "aa902124-c56b-465d-8ad1-d979a86753c6"
				},
				{
					"name": "reset",
					"item": [
						{
							"name": "Reset Password - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eq(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Result property contains a message property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.result.message).to.eq(\"Password reset successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"resultType us present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"   pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"   pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a3cd1920-117f-45e0-9540-f3830b108e2f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{bus_username}}\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"{{bus_resetTokenId}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "e33ef7c9-aecc-462b-bf25-0138c9aa44e0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Account does not exist\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "88776599-60ea-4b45-9682-614862f1a1df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"wed@dwew\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"b954d600-d439-42a8-93e0-2c0289307cde\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "90309a8f-d997-4ab9-bf42-5cab0e3d81aa",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Blank email field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Username field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b8bc1418-ecd6-4150-99e1-5fe1c1b4af4f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"6a7ddb28-947c-4127-895f-f4904750fc8e\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "35fc9733-ebac-473a-925e-912dfaab642d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Invalid reset token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present - Invalid password reset token. code is expired \", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Invalid password reset token. code is expired \");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9515fc85-95ee-48e3-8c83-58675e8f9f81",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{bus_username}}\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"30c87cb1-7be2-49e5-b847-873fb46b89d5\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "9fb55051-bb52-4187-bb32-0e036f97a6a7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Blank reset token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The Code field is required.');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3dd0f4f0-b8b2-47ad-9234-fa3d31a6c47c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{bus_username}}\",\n  \"password\": \"Tested@0981\",\n  \"confirmPassword\": \"Tested@0981\",\n  \"code\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "4fa27131-9f82-41c7-b8a6-b80607037e70",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"Passwords must be at least 8 characters.\",\r",
											"        \"Passwords must have at least one digit ('0'-'9').\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "620927a1-d63f-493c-b08a-22bdc508c167",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{bus_username}}\",\n  \"password\": \"Tested@\",\n  \"confirmPassword\": \"Tested@\",\n  \"code\": \"{{bus_resetTokenId}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "7a78a9e7-555d-4fae-af06-019f150afe26",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Mismatched password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Password and confirm password do not match\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "19080c82-5259-4a21-bb58-4e2efcac9edb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{bus_username}}\",\n  \"password\": \"Tested@\",\n  \"confirmPassword\": \"Tested@1234\",\n  \"code\": \"f9b00acf-87e5-4094-81b6-99ecd4179e75\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "bdcc060d-4dcd-4f6e-9855-6d45c46a9aa1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Reset Password - Blank password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89539cdd-a863-49fd-a7b1-21849f69fb25",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response has a result property\", function () {   \r",
											"    pm.expect(jsonData).to.exist;\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult property is present\", function () {   \r",
											"    pm.expect(jsonData.hasResult).to.be.a(\"boolean\");\r",
											"    pm.expect(jsonData.hasResult).to.eq(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result property is a non-empty object\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"resultType property is present\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a(\"number\");\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Message property is present\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.message).to.eq(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq\r",
											"    (\"The Password field is required.\",\r",
											"        \"The ConfirmPassword field is required.\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful property is a boolean - false\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"     pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "618cbf0f-f1ea-4626-93eb-edf330a6cf56",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{bus_username}}\",\n  \"password\": \"\",\n  \"confirmPassword\": \"\",\n  \"code\": \"68ab97ce-dc54-49fc-931a-3645df2ba49a\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/reset"
							},
							"response": [
								{
									"id": "0a59d362-186e-478e-821a-a6056d7b7718",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"password\": \"<string>\",\n  \"resetTokenId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "af6c3f87-6f77-42b0-bc95-23b1d3027a74"
				},
				{
					"name": "change",
					"item": [
						{
							"name": "Change Password - Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.have.property('message');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eq('Password Changed Successfully');\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "096b3094-f276-472b-b7f4-c02c6fb0e1e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0980\",\n  \"newPassword\": \"Tested@0980\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "416f5a7c-b35d-4d3d-9397-dad2f60c404d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Incorrect old password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Incorrect password.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "18cb532f-8434-49dd-8542-65fd0c76d96b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"Tested@0981\",\n  \"oldPassword\": \"Tested@0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "7165b8fd-f858-4bc2-b66c-451a3f746409",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Mismatched password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c2b0c5eb-3fca-4957-8f21-dccb2a5fc59d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"Te@0981\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "fd800aa6-130e-4be8-8c85-fc840d442e0d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Blank old password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The OldPassword field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c2037e03-916f-4f46-87f8-9106d72375f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"Tested@0981\",\n  \"oldPassword\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "64c6ce6f-5435-4a8a-adcd-97f8c4dfd5f9",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Blank new password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The NewPassword field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2a12c798-41fc-4d66-9b16-ee56c836be50",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0981\",\n  \"newPassword\": \"\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "b722394c-d261-4b61-8ef5-117870f3fd3f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Change Password - Blank confirm password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "592bb847-5430-4b33-9dd1-8bdf78448e5c",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is present\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a hasResult property\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"'result' object has 'message' property\", function () {\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"'resultType' property is a number\", function () {\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.resultType).to.eq(3);\r",
											"});\r",
											"\r",
											"pm.test(\"'message' property is a string\", function () {\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.eq('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"'validationMessages' property is an array\", function () {\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eq('The ConfirmPassword field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful property is a boolean\", function () {\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.successful).to.eq(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7728e02f-c793-467e-a8aa-1a8a06edc0c8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"\",\n  \"newPassword\": \"Tested@0981\",\n  \"oldPassword\": \"Tested@0981\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/passwords/change"
							},
							"response": [
								{
									"id": "b2c916d0-5281-40b0-b315-c19037903a30",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"e$Q6HQGb%q&gUTKEp\",\n  \"newPassword\": \"qkol8ls&\",\n  \"oldPassword\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/v1/accounts/passwords/change"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "910b5566-dc3f-4fbf-a400-7940bdfc2f70"
				}
			],
			"id": "f7970c3c-7e80-4a66-bf1e-666deb6506e8"
		},
		{
			"name": "Manage Team Member",
			"item": [
				{
					"name": "invite-team",
					"item": [
						{
							"name": "Invite team member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8af078da-8677-47df-b2b4-b094423b0ad9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Ok\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is true\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is Invite accepted successfully\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Invite successfully sent');\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is true\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9654b0b6-8aba-4cbb-8d5b-1032a32b4e8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailAddress\": \"bankuser2@dispostable.com\",\n  \"userName\": \"bankuser2@dispostable.com\",\n  \"roleId\": \"2\",\n  \"inviteUrl\": \"https://www.lover.com\",\n  \"firstName\": \"Frapo\",\n  \"lastName\": \"Ocep0\",\n  \"phoneNumber\": \"819489920\",\n  \"phoneNumberCountryCode\": \"+234\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/invite-team"
							},
							"response": [
								{
									"id": "6f7eecd3-cb3a-4629-9e3e-f17b5d61fef5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Blank fied",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8af078da-8677-47df-b2b4-b094423b0ad9",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is ValidationError\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Response has validation errors\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql( \"The model field is required.\",\r",
											"        \"Error converting value {null} to type 'System.Int32'. Path 'roleId', line 4, position 14.\");\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "43a37849-3cdf-4758-b90b-baa9e8ca3e40",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailAddress\": \"\",\n  \"userName\": \"\",\n  \"roleId\": \"\",\n  \"inviteUrl\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"phoneNumber\": \"\",\n  \"phoneNumberCountryCode\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/invite-team"
							},
							"response": [
								{
									"id": "11c2a323-6ac6-495d-a3ca-24b3e41a794b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate team member",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8af078da-8677-47df-b2b4-b094423b0ad9",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Email already exists\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Email already exists');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fb69a16a-d141-41b0-95bc-18957b7281ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailAddress\": \"bankusero@dispostable.com\",\n  \"userName\": \"bankusero@dispostable.com\",\n  \"roleId\": \"2\",\n  \"inviteUrl\": \"https://www.lover.com\",\n  \"firstName\": \"Fra\",\n  \"lastName\": \"Oce\",\n  \"phoneNumber\": \"819489991\",\n  \"phoneNumberCountryCode\": \"+234\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/invite-team"
							},
							"response": [
								{
									"id": "67e21681-d2f0-46ca-82fe-b78a008ecf73",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "a1b8bd4d-9e78-49d3-9069-7bb188d737bd"
				},
				{
					"name": "accept-team-invite",
					"item": [
						{
							"name": "Invite accepted",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "55d04265-856b-48cb-ae03-5c28a1225610",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"     pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is Invite accepted successfully\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Invite accepted successfully');\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "52936c75-402f-43f5-8253-6b9933c054a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0980\",\n  \"inviteId\": \"45e45abd-5918-49ef-bfc3-2b19cf395d22\",\n  \"password\": \"Tested@0980\",\n  \"phoneNumber\": \"{{number}}\",\n    \"phoneNumberCountryCode\": \"+234\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/accept-team-invite"
							},
							"response": [
								{
									"id": "b17acc94-92e9-4751-90b2-9b542d6dedf7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Mismatched password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cff6efa-564f-4892-bb6a-f25badd8c189",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.an('string');\r",
											"    pm.expect(jsonData.message).to.be.an('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is ValidationError\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(\"ValidationError\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Response has validation errors\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('Password do not match');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a209b0ba-263a-4dd6-87c0-1373e19a13da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Password!123\",\n  \"inviteId\": \"82d2cf6d-beb1-4c41-972f-ddf91418f10a\",\n  \"password\": \"Password!3\",\n  \"phoneNumber\": \"819489991\",\n  \"phoneNumberCountryCode\": \"+234\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/accept-team-invite"
							},
							"response": [
								{
									"id": "b76ecdf2-1d8e-4aae-8caf-efedfdf6a286",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Expired invite",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cff6efa-564f-4892-bb6a-f25badd8c189",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.an('string');\r",
											"    pm.expect(jsonData.message).to.be.an('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(\"Error\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Response has validation errors\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Invite has expired. Please contact administrator');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b3ef7f9d-783d-448c-bdda-0b23be810345",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Password!123\",\n  \"inviteId\": \"82d2cf6d-beb1-4c41-972f-ddf91418f10a\",\n  \"password\": \"Password!123\",\n  \"phoneNumber\": \"8194214321\",\n  \"phoneNumberCountryCode\": \"+234\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/accept-team-invite"
							},
							"response": [
								{
									"id": "f69a1924-78cd-4c68-a009-598067c55235",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Blank field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cff6efa-564f-4892-bb6a-f25badd8c189",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.an('string');\r",
											"    pm.expect(jsonData.message).to.be.an('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is ValidationError\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(\"ValidationError\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Response has validation errors\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"The Password field is required.\",\r",
											"        \"The PhoneNumber field is required.\",\r",
											"        \"The ConfirmPassword field is required.\",\r",
											"        \"The PhoneNumberCountryCode field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "79b3475e-c9b4-409d-acb6-15a17d362000",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"\",\n  \"inviteId\": \"82d2cf6d-beb1-4c41-972f-ddf91418f10a\",\n  \"password\": \"\",\n  \"phoneNumber\": \"\",\n  \"phoneNumberCountryCode\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/accept-team-invite"
							},
							"response": [
								{
									"id": "c8ccb0d7-db6c-4658-9253-e2cb291aca8a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Incorrect invite ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "195ed741-5666-4dc9-96ef-22257ed05429",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.an('string');\r",
											"    pm.expect(jsonData.message).to.be.an('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(\"Error\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Invite Id is in an incorrect format\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Invite Id is in an incorrect format');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "17391c47-908a-40d3-8703-d7b1fca7b2a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"confirmPassword\": \"Tested@0980\",\n  \"inviteId\": \"167788\",\n  \"password\": \"Tested@0980\",\n  \"phoneNumber\": \"{{number}}\",\n  \"phoneNumberCountryCode\": \"+234\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/accept-team-invite"
							},
							"response": [
								{
									"id": "ff76dc5c-0bae-4401-8d60-97fd62280e76",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"confirmPassword\": \"<string>\",\n  \"inviteId\": \"<string>\",\n  \"password\": \"YYwjV?FfHUeGI\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "d6dc0dc5-9c8b-41d3-883a-b1fb359a376e"
				},
				{
					"name": "resend-team-invite",
					"item": [
						{
							"name": "Resend invite",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "801d3af6-808d-4163-8855-34861172a9d9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"     pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is Invite accepted successfully\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Account Invite sent successfully');\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f12e243c-b0cf-4415-9788-a58680b6ace0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inviteUrl\": \"https://www.lover.com\",\n  \"id\": \"77\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/resend-team-invite"
							},
							"response": [
								{
									"id": "2db45f6f-6296-47dd-9e52-7d8eb465a3fb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inviteUrl\": \"<uri>\",\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/resend-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Record not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "516ead7b-b716-4be9-85f2-29c6e9e88656",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.an('string');\r",
											"    pm.expect(jsonData.message).to.be.an('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is ValidationError\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(\"ValidationError\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Response has validation errors\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"Could not convert string to integer: ow7. Path 'id', line 3, position 13.\",\r",
											"        \"The model field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e6ef2435-6b38-40a0-83cc-689d39b6218c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inviteUrl\": \"https://www.google.com\",\n  \"id\": \"ow7\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/resend-team-invite"
							},
							"response": [
								{
									"id": "4c7a819e-c2ae-476b-931f-8236b14f72c6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inviteUrl\": \"<uri>\",\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/resend-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "4dc610a4-e84e-42d1-96e5-1ed8551d0a88"
				},
				{
					"name": "revoke-team-invite",
					"item": [
						{
							"name": "Revoke invite",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9424e093-e55d-4e7a-a334-0dde24f07799",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"     pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is Invite accepted successfully\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Account Invite revoked successfully');\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Successful is present\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a0e20169-a137-4631-8cb4-a3fe872d23a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"224\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/revoke-team-invite"
							},
							"response": [
								{
									"id": "52d2537c-5907-4c27-b650-a0d2053df7d6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/revoke-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Record not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff7269c5-3818-4752-99f0-9e314b0bbffd",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.an('string');\r",
											"    pm.expect(jsonData.message).to.be.an('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(\"VError\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is BusinessTeam record not found\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('BusinessTeam record not found');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4bdff691-0d37-464d-a17a-ecaaff1602ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"1000\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/revoke-team-invite"
							},
							"response": [
								{
									"id": "e6b41577-c08b-4f7b-a1d2-781cec6d3214",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/revoke-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite already revoked",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0dd50650-fb38-4c98-bff9-93cfdc24df66",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.an('string');\r",
											"    pm.expect(jsonData.message).to.be.an('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(\"Error\");\r",
											"});\r",
											"\r",
											"pm.test(\"Message is BusinessTeam record not found\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('User invite already revoked');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "829ce7ea-7297-4fe0-bfb9-f7642fc94e63",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"57\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/revoke-team-invite"
							},
							"response": [
								{
									"id": "75d971a7-bfc4-4cc7-a222-662918b57dbe",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/revoke-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "56c8cd65-f8b4-4463-ba39-31563bdda067"
				},
				{
					"name": "Business Team",
					"item": [
						{
							"name": "View Business team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9faa6573-c9fa-4c07-8022-3693f2d51a6c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('array');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is true\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is true\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f27832c6-e029-497a-8627-0654b6b32463",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/business/team/RC8067446567"
							},
							"response": [
								{
									"id": "33f3d94c-98fd-4ab3-adc6-72c0e67505e2",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"vCQ+Nv_J7gCNE+r0zLweE5'oPjbSxX'sfb8HJd+ksddEkffU@k0-Elu1Ch-psPJPhOzFW-F2gLRmtB-DAyPPStD.T-U4dfpFpfa-l8GibmCN.qMsZjZ.CN5S4hEgaPw-NncbRqm-CfjDAt.79-YDRd\",\n  \"firstName\": \"<string>\",\n  \"inviteUrl\": \"<uri>\",\n  \"lastName\": \"<string>\",\n  \"roleId\": \"<integer>\",\n  \"userName\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/business/invite-team"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "05c2db52-dbb9-439f-951e-42e029cc1647"
				},
				{
					"name": "Activate/Deactivate User",
					"item": [
						{
							"name": "Activate/Deactivate user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f5a085ad-2116-4eef-b865-4c3e5d500156",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Ok\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body properties\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is true\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is Invite accepted successfully\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Team member succesfully Deactivated');\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is true\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "78d816a7-76b5-42d1-935d-bd805dc6547a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": "{{baseUrl}}/onboard/api/business/team/toggleStatus/RC8067446567/unyc23@mailinator.com"
							},
							"response": [
								{
									"id": "5378b983-ff62-4710-a7ff-0da33782f02e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/business/status/toggle?rcbnNumber=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"business",
												"status",
												"toggle"
											],
											"query": [
												{
													"key": "rcbnNumber",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"nullable\": true\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "c051e90b-e1d6-4ef9-b055-076d7c319ed7"
				}
			],
			"id": "a38921a4-06f5-4a4a-b03a-e9392db31d88"
		},
		{
			"name": "Director",
			"item": [
				{
					"name": "invite",
					"item": [
						{
							"name": "Invite stakeholder - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is not empty\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Invite successfully sent');\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is successful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1e683211-3d7f-4508-9fe7-8e41464e1c47",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Luke\",\n  \"lastName\": \"Dube\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \"lukydube@mailinator.com\",\n  \"phoneNumber\": \"08185597962\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "3aa4212b-6941-49a4-8817-864ea50c2e61",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Successful Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is not empty\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Invite successfully sent');\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is successful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e8f74529-fd45-491e-b86b-d05f6f70d3af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"Director\",\n  \"lastName\": \"Two\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \"unyc25@mailinator.com\",\n  \"phoneNumber\": \"08185597962\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "2f40af40-d5c8-49ac-a744-86a16dee4e72",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Number as name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is not empty\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Invite successfully sent');\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is successful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b0af7829-4935-4461-ab38-ba9e727672dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"1234\",\n  \"lastName\": \"1234\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \"unyc25@mailinator.com\",\n  \"phoneNumber\": \"08185597962\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "7d50c360-98e9-4c6e-b3ee-cea459ce12ed",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Blank name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is not empty\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Invite successfully sent');\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is successful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "98cdbc7d-2f02-4560-94e5-5da7312b0ef3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \"unyc25@mailinator.com\",\n  \"phoneNumber\": \"08185597962\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "24183f68-352d-4fda-ab08-5c2267f3b828",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Blank RC number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is False\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is not empty\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Business with the RC Number does not exist');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is unsuccessful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "99979600-b6bd-4600-a098-824e31b8433d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"1234\",\n  \"lastName\": \"1234\",\n  \"rcBnNumber\": \"\",\n  \"email\": \"unyc25@mailinator.com\",\n  \"phoneNumber\": \"08185597962\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "aa825647-b80f-4490-b891-aaf202f0534c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Blank email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is False\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is not empty\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Business with the RC Number does not exist');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is unsuccessful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1ed19fd3-12ed-4505-9b5e-0d0b3771ccf3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"1234\",\n  \"lastName\": \"1234\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \"\",\n  \"phoneNumber\": \"08185597962\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "c065ad17-ea32-49d0-be3a-ea799e1a250c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is False\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is not empty\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Business with the RC Number does not exist');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is unsuccessful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "85bb18b6-ab93-440f-9f02-f5f7a92dbbfb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"1234\",\n  \"lastName\": \"1234\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \".com\",\n  \"phoneNumber\": \"08185597962\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "f32f853a-7a53-44b2-81c4-190f2150e9cb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Blank phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is False\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is not empty\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Business with the RC Number does not exist');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is unsuccessful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "68631add-d91c-4d1e-803e-6c2d55c46b7e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"1234\",\n  \"lastName\": \"1234\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \"unyc25@mailinator.com\",\n  \"phoneNumber\": \"\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "9cc27d5e-e5c1-4cf8-b581-77858ff9c5cd",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Blank stakeholder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is False\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Error\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Error');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is not empty\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Business with the RC Number does not exist');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is unsuccessful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "409a5b55-357c-4eb7-b801-1253d6d3820d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"1234\",\n  \"lastName\": \"1234\",\n  \"rcBnNumber\": \"hdkakfnkwfnwlkl\",\n  \"email\": \"unyc25@mailinator.com\",\n  \"phoneNumber\": \"\",\n  \"phoneNumberCountryCode\": \"+234\",\n  \"stakeholderType\": \"Director\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "45e86053-ba34-4802-a415-0f82beacfb03",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Invite stakeholder - Blank details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0cff0bf-1dbd-4bf0-aa87-28bea1e88c4e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is False\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is not empty\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql(\"The model field is required.\",\r",
											"        \"Error converting value \\\"\\\" to type 'Library.Common.Models.StakeholderTypeEnum'. Path 'stakeholderType', line 8, position 23.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is ValidationError\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Response has validation errors\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is unsuccessful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "db1313db-522a-4597-b43c-1ab2ce78370e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"rcBnNumber\": \"\",\n  \"email\": \"\",\n  \"phoneNumber\": \"\",\n  \"phoneNumberCountryCode\": \"\",\n  \"stakeholderType\": \"\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/invite"
							},
							"response": [
								{
									"id": "e36a0999-2b15-40a9-8bd8-a8a15df4937a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"stakeholderType\": \"BeneficialOwner\",\n  \"wasInvited\": \"<boolean>\",\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"ownerhipPercentage\": \"<float>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "5ae76bcb-d79c-45e3-825a-945d4cbe2a10"
				},
				{
					"name": "accept-team-invite",
					"item": [
						{
							"name": "Accept invite - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e98379e7-fcf9-41df-b683-edefe3aa4f7b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.result.message).to.be.a('string');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Result is not empty\", function () {\r",
											"    pm.expect(jsonData.result.message).to.eql('Invite accepted successfully');\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is successful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "865e0e0c-6ec1-4d48-a9fd-60eddf1d7fe8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inviteId\": \"4e6fca64-1633-4d0a-b93b-ddb32b2f9fba\",\n  \"email\": \"bunchdillion_test4@mailinator.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/accept-invite"
							},
							"response": [
								{
									"id": "3763725c-ace1-4914-b71e-410fe02fc78a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inviteId\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Accept invite - Used link",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e98379e7-fcf9-41df-b683-edefe3aa4f7b",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"\r",
											"// pm.test(\"Response body is not empty\", function () {   \r",
											"//     pm.expect(jsonData).to.be.an('object');\r",
											"//     pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"//     pm.expect(jsonData.result).to.be.an('object');\r",
											"//     pm.expect(jsonData.result.message).to.be.a('string');\r",
											"//     pm.expect(jsonData.resultType).to.be.a('string');\r",
											"//     pm.expect(jsonData.message).to.be.a('string');\r",
											"//     pm.expect(jsonData.validationMessages).to.be.null;\r",
											"//     pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"// });\r",
											"\r",
											"// pm.test(\"hasResult is True\", function () {\r",
											"//     pm.expect(jsonData.hasResult).to.eql(true);\r",
											"// });\r",
											"\r",
											"// pm.test(\"Result is not empty\", function () {\r",
											"//     pm.expect(jsonData.result.message).to.eql('Invite accepted successfully');\r",
											"// });\r",
											"\r",
											"// pm.test(\"Result type is Success\", function () {\r",
											"//     pm.expect(jsonData.resultType).to.eql('Success');\r",
											"// });\r",
											"\r",
											"// pm.test(\"Message is Success\", function () {\r",
											"//     pm.expect(jsonData.message).to.eql('Success');\r",
											"// });\r",
											"\r",
											"// pm.test(\"Response is successful\", function () {\r",
											"//     pm.expect(jsonData.successful).to.eql(true);\r",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c737954c-68b9-4106-bfda-0bcea81de866",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inviteId\": \"bdecee4c-956b-4732-92dd-820a599db6bd\",\n  \"email\": \"unyc25@mailinator.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/accept-invite"
							},
							"response": [
								{
									"id": "097bc28d-44c9-4e85-970a-2202f79165be",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inviteId\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Accept invite - Blank link",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e98379e7-fcf9-41df-b683-edefe3aa4f7b",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body is not empty\", function () {   \r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is True\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is not empty\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('The InviteId field is required.');\r",
											"});\r",
											"\r",
											"pm.test(\"Result type is ValidationError\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('ValidationError');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is Response has validation errors\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"Response is successful\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0dcf2156-e08c-403b-98c1-afbd639d0263",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inviteId\": \"\",\n  \"email\": \"unyc25@mailinator.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/accept-invite"
							},
							"response": [
								{
									"id": "dc559f6c-5a1c-4ec8-8cc4-577cb5189950",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inviteId\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/accept-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "da671625-5630-4e3e-86b8-c4ff1f2f92e5"
				},
				{
					"name": "resend-team-invite",
					"item": [
						{
							"name": "Resend invite",
							"id": "8ef92ae0-6126-4d34-a70f-7fb2670a4d7c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"46\",\n  \"inviteUrl\": \"https://www.invitedirector.com\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/resend-team-invite"
							},
							"response": [
								{
									"id": "de098a9a-5dc5-4a3a-95d3-34f9dbd62a48",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"inviteUrl\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/resend-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "8c9baabd-71d9-4b45-b30f-097d3ac12043"
				},
				{
					"name": "revoke-team-invite",
					"item": [
						{
							"name": "Revoke invite",
							"id": "42789c32-5725-42f0-baa2-e3b0608778fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{business_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/stakeholder/revoke-team-invite"
							},
							"response": [
								{
									"id": "c39efd85-33a2-4e27-b7ae-8927acbbf00c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/stakeholder/revoke-team-invite"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": \"Warning\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "5d2490d1-265d-483d-810e-eb3e9a559105"
				},
				{
					"name": "getpaged",
					"item": [
						{
							"name": "{page}",
							"item": [
								{
									"name": "{pagesize}",
									"item": [
										{
											"name": "{whereCondition}",
											"item": [
												{
													"name": "Get stakeholder",
													"id": "62fb6e68-ebf8-4bf8-aba5-20e8917f74da",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{business_access_token}}"
															}
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															},
															{
																"key": "x-api-key",
																"value": "{{x-api-key}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/onboard/api/stakeholder/getpaged/:page/:pagesize/:whereCondition",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"onboard",
																"api",
																"stakeholder",
																"getpaged",
																":page",
																":pagesize",
																":whereCondition"
															],
															"variable": [
																{
																	"key": "page",
																	"value": "2",
																	"description": "(Required) "
																},
																{
																	"key": "pagesize",
																	"value": "10",
																	"description": "(Required) "
																},
																{
																	"key": "whereCondition",
																	"value": "{}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "7b50901f-e27c-4c54-9902-634818025e50",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/stakeholder/getpaged/:page/:pagesize/:whereCondition",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"stakeholder",
																		"getpaged",
																		":page",
																		":pagesize",
																		":whereCondition"
																	],
																	"variable": [
																		{
																			"key": "page"
																		},
																		{
																			"key": "pagesize"
																		},
																		{
																			"key": "whereCondition"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"items\": [\n      {\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"BeneficialOwner\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"businessUid\": \"<uuid>\",\n          \"email\": \"<string>\",\n          \"rcBnNumber\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"tin\": \"<string>\",\n          \"hasDirectors\": \"<boolean>\",\n          \"hasShareHolders\": \"<boolean>\",\n          \"hasBenficialOwners\": \"<boolean>\",\n          \"natureOfBusiness\": \"<string>\",\n          \"sourceOfRevenue\": \"<string>\",\n          \"sourceOfCapital\": \"<string>\",\n          \"taxCompliance\": \"<boolean>\",\n          \"evidenceOfCorporateGovernance\": \"<boolean>\",\n          \"dailyDeposit\": \"<double>\",\n          \"dailyTransfer\": \"<double>\",\n          \"lifetimeDeposit\": \"<double>\",\n          \"limitTransfer\": \"<double>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"status\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"customerNumber\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"Level2Approved\",\n          \"kycApprovedBy\": \"<string>\",\n          \"kycApprovedDate\": \"<dateTime>\",\n          \"kycDeclineReason\": \"<string>\",\n          \"blacklisted\": \"<boolean>\",\n          \"accounts\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n            }\n          ],\n          \"customerRelationships\": [\n            {\n              \"id\": \"<integer>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            }\n          ],\n          \"stakeholders\": [\n            {\n              \"id\": \"<integer>\",\n              \"rcBnNumber\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"financialId\": \"<string>\",\n              \"financialIdType\": \"BVN\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"stakeholderType\": \"Director\",\n              \"ownerhipPercentage\": \"<float>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVeriedAt\": \"<dateTime>\",\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateOfBirth\": \"<string>\",\n              \"stateOfOrigin\": \"<string>\",\n              \"lgaOfOrigin\": \"<string>\",\n              \"nationality\": \"<string>\",\n              \"photoOnBVN\": \"<string>\",\n              \"bvnLinkedNin\": \"<string>\",\n              \"livenesssPhoto\": \"<string>\",\n              \"photoOnMeansOfId\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level3Review\",\n              \"livenessCheck\": \"<boolean>\",\n              \"idVerified\": \"<boolean>\",\n              \"bvnVerified\": \"<boolean>\",\n              \"addressVerified\": \"<boolean>\",\n              \"wasInvited\": \"<boolean>\",\n              \"acceptedInvite\": \"<boolean>\",\n              \"acceptedInviteOn\": \"<dateTime>\",\n              \"inviteExpiresOn\": \"<dateTime>\",\n              \"inviteId\": \"<uuid>\",\n              \"idNumber\": \"<string>\",\n              \"inviteRevoked\": \"<boolean>\",\n              \"isDeleted\": \"<boolean>\",\n              \"meansOfId\": \"VNin\",\n              \"bvnMeansOfIdCompare\": \"<boolean>\",\n              \"bvnMeansOfIdCompareResult\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"rcBnNumber\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"financialId\": \"<string>\",\n              \"financialIdType\": \"BVN\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"stakeholderType\": \"Director\",\n              \"ownerhipPercentage\": \"<float>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVeriedAt\": \"<dateTime>\",\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateOfBirth\": \"<string>\",\n              \"stateOfOrigin\": \"<string>\",\n              \"lgaOfOrigin\": \"<string>\",\n              \"nationality\": \"<string>\",\n              \"photoOnBVN\": \"<string>\",\n              \"bvnLinkedNin\": \"<string>\",\n              \"livenesssPhoto\": \"<string>\",\n              \"photoOnMeansOfId\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level2Review\",\n              \"livenessCheck\": \"<boolean>\",\n              \"idVerified\": \"<boolean>\",\n              \"bvnVerified\": \"<boolean>\",\n              \"addressVerified\": \"<boolean>\",\n              \"wasInvited\": \"<boolean>\",\n              \"acceptedInvite\": \"<boolean>\",\n              \"acceptedInviteOn\": \"<dateTime>\",\n              \"inviteExpiresOn\": \"<dateTime>\",\n              \"inviteId\": \"<uuid>\",\n              \"idNumber\": \"<string>\",\n              \"inviteRevoked\": \"<boolean>\",\n              \"isDeleted\": \"<boolean>\",\n              \"meansOfId\": \"Passport\",\n              \"bvnMeansOfIdCompare\": \"<boolean>\",\n              \"bvnMeansOfIdCompareResult\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            }\n          ],\n          \"userBusinesses\": [\n            {\n              \"id\": \"<long>\",\n              \"userId\": \"<string>\",\n              \"user\": {\n                \"userId\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCode\": \"<string>\",\n                \"referralCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                \"emailVerifiedAt\": \"<dateTime>\",\n                \"dateOfBirth\": \"<dateTime>\",\n                \"hasTransactionPin\": \"<boolean>\",\n                \"primaryProfile\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"active\": \"<boolean>\",\n                \"blacklisted\": \"<boolean>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"userBusinesses\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  }\n                ],\n                \"createdBy\": \"<string>\",\n                \"dateCreated\": \"<dateTime>\",\n                \"updatedBy\": \"<string>\",\n                \"lastUpdateDate\": \"<dateTime>\",\n                \"isDeleted\": \"<boolean>\",\n                \"agreeToSignUpTandC\": \"<boolean>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              }\n            },\n            {\n              \"id\": \"<long>\",\n              \"userId\": \"<string>\",\n              \"user\": {\n                \"userId\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCode\": \"<string>\",\n                \"referralCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                \"emailVerifiedAt\": \"<dateTime>\",\n                \"dateOfBirth\": \"<dateTime>\",\n                \"hasTransactionPin\": \"<boolean>\",\n                \"primaryProfile\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"active\": \"<boolean>\",\n                \"blacklisted\": \"<boolean>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"userBusinesses\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  }\n                ],\n                \"createdBy\": \"<string>\",\n                \"dateCreated\": \"<dateTime>\",\n                \"updatedBy\": \"<string>\",\n                \"lastUpdateDate\": \"<dateTime>\",\n                \"isDeleted\": \"<boolean>\",\n                \"agreeToSignUpTandC\": \"<boolean>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              }\n            }\n          ],\n          \"isDeleted\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"kycVerified\": \"<boolean>\",\n          \"numberOfDirectorsInvited\": \"<integer>\",\n          \"numberOfDirectorsAddressVerified\": \"<integer>\",\n          \"boardResolutionFile\": \"<string>\",\n          \"cacForm2aFile\": \"<string>\",\n          \"cacForm7aFile\": \"<string>\",\n          \"mematFile\": \"<string>\",\n          \"companyTinFile\": \"<string>\",\n          \"proofOfAddressFile\": \"<string>\",\n          \"additionalDocument\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"agreeToAddDirectors\": \"<boolean>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\"\n      },\n      {\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"Director\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"businessUid\": \"<uuid>\",\n          \"email\": \"<string>\",\n          \"rcBnNumber\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"tin\": \"<string>\",\n          \"hasDirectors\": \"<boolean>\",\n          \"hasShareHolders\": \"<boolean>\",\n          \"hasBenficialOwners\": \"<boolean>\",\n          \"natureOfBusiness\": \"<string>\",\n          \"sourceOfRevenue\": \"<string>\",\n          \"sourceOfCapital\": \"<string>\",\n          \"taxCompliance\": \"<boolean>\",\n          \"evidenceOfCorporateGovernance\": \"<boolean>\",\n          \"dailyDeposit\": \"<double>\",\n          \"dailyTransfer\": \"<double>\",\n          \"lifetimeDeposit\": \"<double>\",\n          \"limitTransfer\": \"<double>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"status\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"customerNumber\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"Level2Approved\",\n          \"kycApprovedBy\": \"<string>\",\n          \"kycApprovedDate\": \"<dateTime>\",\n          \"kycDeclineReason\": \"<string>\",\n          \"blacklisted\": \"<boolean>\",\n          \"accounts\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n            }\n          ],\n          \"customerRelationships\": [\n            {\n              \"id\": \"<integer>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            }\n          ],\n          \"stakeholders\": [\n            {\n              \"id\": \"<integer>\",\n              \"rcBnNumber\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"financialId\": \"<string>\",\n              \"financialIdType\": \"BVN\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"stakeholderType\": \"Director\",\n              \"ownerhipPercentage\": \"<float>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVeriedAt\": \"<dateTime>\",\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateOfBirth\": \"<string>\",\n              \"stateOfOrigin\": \"<string>\",\n              \"lgaOfOrigin\": \"<string>\",\n              \"nationality\": \"<string>\",\n              \"photoOnBVN\": \"<string>\",\n              \"bvnLinkedNin\": \"<string>\",\n              \"livenesssPhoto\": \"<string>\",\n              \"photoOnMeansOfId\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Pending\",\n              \"livenessCheck\": \"<boolean>\",\n              \"idVerified\": \"<boolean>\",\n              \"bvnVerified\": \"<boolean>\",\n              \"addressVerified\": \"<boolean>\",\n              \"wasInvited\": \"<boolean>\",\n              \"acceptedInvite\": \"<boolean>\",\n              \"acceptedInviteOn\": \"<dateTime>\",\n              \"inviteExpiresOn\": \"<dateTime>\",\n              \"inviteId\": \"<uuid>\",\n              \"idNumber\": \"<string>\",\n              \"inviteRevoked\": \"<boolean>\",\n              \"isDeleted\": \"<boolean>\",\n              \"meansOfId\": \"VNin\",\n              \"bvnMeansOfIdCompare\": \"<boolean>\",\n              \"bvnMeansOfIdCompareResult\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"rcBnNumber\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"financialId\": \"<string>\",\n              \"financialIdType\": \"BVN\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"stakeholderType\": \"BeneficialOwner\",\n              \"ownerhipPercentage\": \"<float>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVeriedAt\": \"<dateTime>\",\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              },\n              \"dateOfBirth\": \"<string>\",\n              \"stateOfOrigin\": \"<string>\",\n              \"lgaOfOrigin\": \"<string>\",\n              \"nationality\": \"<string>\",\n              \"photoOnBVN\": \"<string>\",\n              \"bvnLinkedNin\": \"<string>\",\n              \"livenesssPhoto\": \"<string>\",\n              \"photoOnMeansOfId\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level1Review\",\n              \"livenessCheck\": \"<boolean>\",\n              \"idVerified\": \"<boolean>\",\n              \"bvnVerified\": \"<boolean>\",\n              \"addressVerified\": \"<boolean>\",\n              \"wasInvited\": \"<boolean>\",\n              \"acceptedInvite\": \"<boolean>\",\n              \"acceptedInviteOn\": \"<dateTime>\",\n              \"inviteExpiresOn\": \"<dateTime>\",\n              \"inviteId\": \"<uuid>\",\n              \"idNumber\": \"<string>\",\n              \"inviteRevoked\": \"<boolean>\",\n              \"isDeleted\": \"<boolean>\",\n              \"meansOfId\": \"VNin\",\n              \"bvnMeansOfIdCompare\": \"<boolean>\",\n              \"bvnMeansOfIdCompareResult\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            }\n          ],\n          \"userBusinesses\": [\n            {\n              \"id\": \"<long>\",\n              \"userId\": \"<string>\",\n              \"user\": {\n                \"userId\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCode\": \"<string>\",\n                \"referralCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                \"emailVerifiedAt\": \"<dateTime>\",\n                \"dateOfBirth\": \"<dateTime>\",\n                \"hasTransactionPin\": \"<boolean>\",\n                \"primaryProfile\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"active\": \"<boolean>\",\n                \"blacklisted\": \"<boolean>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"userBusinesses\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  }\n                ],\n                \"createdBy\": \"<string>\",\n                \"dateCreated\": \"<dateTime>\",\n                \"updatedBy\": \"<string>\",\n                \"lastUpdateDate\": \"<dateTime>\",\n                \"isDeleted\": \"<boolean>\",\n                \"agreeToSignUpTandC\": \"<boolean>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              }\n            },\n            {\n              \"id\": \"<long>\",\n              \"userId\": \"<string>\",\n              \"user\": {\n                \"userId\": \"<string>\",\n                \"userName\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCode\": \"<string>\",\n                \"referralCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                \"emailVerifiedAt\": \"<dateTime>\",\n                \"dateOfBirth\": \"<dateTime>\",\n                \"hasTransactionPin\": \"<boolean>\",\n                \"primaryProfile\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"active\": \"<boolean>\",\n                \"blacklisted\": \"<boolean>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"userBusinesses\": [\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  },\n                  {\n                    \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                  }\n                ],\n                \"createdBy\": \"<string>\",\n                \"dateCreated\": \"<dateTime>\",\n                \"updatedBy\": \"<string>\",\n                \"lastUpdateDate\": \"<dateTime>\",\n                \"isDeleted\": \"<boolean>\",\n                \"agreeToSignUpTandC\": \"<boolean>\"\n              },\n              \"businessId\": \"<integer>\",\n              \"business\": {\n                \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n              }\n            }\n          ],\n          \"isDeleted\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"kycVerified\": \"<boolean>\",\n          \"numberOfDirectorsInvited\": \"<integer>\",\n          \"numberOfDirectorsAddressVerified\": \"<integer>\",\n          \"boardResolutionFile\": \"<string>\",\n          \"cacForm2aFile\": \"<string>\",\n          \"cacForm7aFile\": \"<string>\",\n          \"mematFile\": \"<string>\",\n          \"companyTinFile\": \"<string>\",\n          \"proofOfAddressFile\": \"<string>\",\n          \"additionalDocument\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"agreeToAddDirectors\": \"<boolean>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\"\n      }\n    ],\n    \"total\": \"<integer>\",\n    \"info\": \"<double>\"\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
														}
													]
												}
											],
											"id": "36cb62dc-79c2-48c4-9b38-8d8a4431e6ae"
										}
									],
									"id": "cd6e27c2-b9bb-46cc-8331-4b10a4733501"
								}
							],
							"id": "d1c38094-1975-4bac-8a5d-d12b89bb1ae0"
						}
					],
					"id": "2510fd13-a4b0-4ab2-8ecb-2a1e4e2ae782"
				},
				{
					"name": "query",
					"item": [
						{
							"name": "{page}",
							"item": [
								{
									"name": "{pagesize}",
									"item": [
										{
											"name": "{whereCondition}",
											"item": [
												{
													"name": "/api/stakeholder/query/:page/:pagesize/:whereCondition",
													"id": "04fe05f9-022b-403d-b8bc-389046ce39d5",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{business_access_token}}"
															}
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															},
															{
																"key": "x-api-key",
																"value": "{{x-api-key}}",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/onboard/api/stakeholder/query/:page/:pagesize/:whereCondition",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"onboard",
																"api",
																"stakeholder",
																"query",
																":page",
																":pagesize",
																":whereCondition"
															],
															"variable": [
																{
																	"id": "bd35ab72-0db9-4164-8115-a42971181b1c",
																	"key": "page",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"id": "4a1491cd-96bf-44f9-8d2b-9a6e63790d77",
																	"key": "pagesize",
																	"value": "10",
																	"description": "(Required) "
																},
																{
																	"id": "d17cbbeb-54b0-45de-a4b2-4debbd4ea51e",
																	"key": "whereCondition",
																	"value": "{}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "f6e0fa91-04a6-484d-8b43-a812dc1c5b25",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Authorization",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/stakeholder/query/:page/:pagesize/:whereCondition",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"stakeholder",
																		"query",
																		":page",
																		":pagesize",
																		":whereCondition"
																	],
																	"variable": [
																		{
																			"key": "page"
																		},
																		{
																			"key": "pagesize"
																		},
																		{
																			"key": "whereCondition"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"email\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"financialId\": \"<string>\",\n      \"financialIdType\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"profileImage\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"stakeholderType\": \"BeneficialOwner\",\n      \"ownerhipPercentage\": \"<float>\",\n      \"phoneNumberVerifiedAt\": \"<dateTime>\",\n      \"emailVeriedAt\": \"<dateTime>\",\n      \"businessId\": \"<integer>\",\n      \"business\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"businessUid\": \"<uuid>\",\n        \"email\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"tin\": \"<string>\",\n        \"hasDirectors\": \"<boolean>\",\n        \"hasShareHolders\": \"<boolean>\",\n        \"hasBenficialOwners\": \"<boolean>\",\n        \"natureOfBusiness\": \"<string>\",\n        \"sourceOfRevenue\": \"<string>\",\n        \"sourceOfCapital\": \"<string>\",\n        \"taxCompliance\": \"<boolean>\",\n        \"evidenceOfCorporateGovernance\": \"<boolean>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"status\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level3Approved\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"kycDeclineReason\": \"<string>\",\n        \"blacklisted\": \"<boolean>\",\n        \"accounts\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          }\n        ],\n        \"customerRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"stakeholders\": [\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"BVN\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"BeneficialOwner\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateOfBirth\": \"<string>\",\n            \"stateOfOrigin\": \"<string>\",\n            \"lgaOfOrigin\": \"<string>\",\n            \"nationality\": \"<string>\",\n            \"photoOnBVN\": \"<string>\",\n            \"bvnLinkedNin\": \"<string>\",\n            \"livenesssPhoto\": \"<string>\",\n            \"photoOnMeansOfId\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Review\",\n            \"livenessCheck\": \"<boolean>\",\n            \"idVerified\": \"<boolean>\",\n            \"bvnVerified\": \"<boolean>\",\n            \"addressVerified\": \"<boolean>\",\n            \"wasInvited\": \"<boolean>\",\n            \"acceptedInvite\": \"<boolean>\",\n            \"acceptedInviteOn\": \"<dateTime>\",\n            \"inviteExpiresOn\": \"<dateTime>\",\n            \"inviteId\": \"<uuid>\",\n            \"idNumber\": \"<string>\",\n            \"inviteRevoked\": \"<boolean>\",\n            \"isDeleted\": \"<boolean>\",\n            \"meansOfId\": \"DriversLicense\",\n            \"bvnMeansOfIdCompare\": \"<boolean>\",\n            \"bvnMeansOfIdCompareResult\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"BVN\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"Director\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateOfBirth\": \"<string>\",\n            \"stateOfOrigin\": \"<string>\",\n            \"lgaOfOrigin\": \"<string>\",\n            \"nationality\": \"<string>\",\n            \"photoOnBVN\": \"<string>\",\n            \"bvnLinkedNin\": \"<string>\",\n            \"livenesssPhoto\": \"<string>\",\n            \"photoOnMeansOfId\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Declined\",\n            \"livenessCheck\": \"<boolean>\",\n            \"idVerified\": \"<boolean>\",\n            \"bvnVerified\": \"<boolean>\",\n            \"addressVerified\": \"<boolean>\",\n            \"wasInvited\": \"<boolean>\",\n            \"acceptedInvite\": \"<boolean>\",\n            \"acceptedInviteOn\": \"<dateTime>\",\n            \"inviteExpiresOn\": \"<dateTime>\",\n            \"inviteId\": \"<uuid>\",\n            \"idNumber\": \"<string>\",\n            \"inviteRevoked\": \"<boolean>\",\n            \"isDeleted\": \"<boolean>\",\n            \"meansOfId\": \"VNin\",\n            \"bvnMeansOfIdCompare\": \"<boolean>\",\n            \"bvnMeansOfIdCompareResult\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userBusinesses\": [\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\",\n              \"isDeleted\": \"<boolean>\",\n              \"agreeToSignUpTandC\": \"<boolean>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          },\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\",\n              \"isDeleted\": \"<boolean>\",\n              \"agreeToSignUpTandC\": \"<boolean>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          }\n        ],\n        \"isDeleted\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"kycVerified\": \"<boolean>\",\n        \"numberOfDirectorsInvited\": \"<integer>\",\n        \"numberOfDirectorsAddressVerified\": \"<integer>\",\n        \"boardResolutionFile\": \"<string>\",\n        \"cacForm2aFile\": \"<string>\",\n        \"cacForm7aFile\": \"<string>\",\n        \"mematFile\": \"<string>\",\n        \"companyTinFile\": \"<string>\",\n        \"proofOfAddressFile\": \"<string>\",\n        \"additionalDocument\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"agreeToAddDirectors\": \"<boolean>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      \"acceptedInvite\": \"<boolean>\",\n      \"acceptedInviteOn\": \"<dateTime>\",\n      \"inviteExpiresOn\": \"<dateTime>\",\n      \"inviteId\": \"<uuid>\",\n      \"idNumber\": \"<string>\",\n      \"inviteRevoked\": \"<boolean>\"\n    },\n    {\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"email\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"financialId\": \"<string>\",\n      \"financialIdType\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"profileImage\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"stakeholderType\": \"Director\",\n      \"ownerhipPercentage\": \"<float>\",\n      \"phoneNumberVerifiedAt\": \"<dateTime>\",\n      \"emailVeriedAt\": \"<dateTime>\",\n      \"businessId\": \"<integer>\",\n      \"business\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"businessUid\": \"<uuid>\",\n        \"email\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"tin\": \"<string>\",\n        \"hasDirectors\": \"<boolean>\",\n        \"hasShareHolders\": \"<boolean>\",\n        \"hasBenficialOwners\": \"<boolean>\",\n        \"natureOfBusiness\": \"<string>\",\n        \"sourceOfRevenue\": \"<string>\",\n        \"sourceOfCapital\": \"<string>\",\n        \"taxCompliance\": \"<boolean>\",\n        \"evidenceOfCorporateGovernance\": \"<boolean>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"status\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level3Approved\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"kycDeclineReason\": \"<string>\",\n        \"blacklisted\": \"<boolean>\",\n        \"accounts\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          }\n        ],\n        \"customerRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"stakeholders\": [\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"BVN\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"BeneficialOwner\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateOfBirth\": \"<string>\",\n            \"stateOfOrigin\": \"<string>\",\n            \"lgaOfOrigin\": \"<string>\",\n            \"nationality\": \"<string>\",\n            \"photoOnBVN\": \"<string>\",\n            \"bvnLinkedNin\": \"<string>\",\n            \"livenesssPhoto\": \"<string>\",\n            \"photoOnMeansOfId\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Level3Rejected\",\n            \"livenessCheck\": \"<boolean>\",\n            \"idVerified\": \"<boolean>\",\n            \"bvnVerified\": \"<boolean>\",\n            \"addressVerified\": \"<boolean>\",\n            \"wasInvited\": \"<boolean>\",\n            \"acceptedInvite\": \"<boolean>\",\n            \"acceptedInviteOn\": \"<dateTime>\",\n            \"inviteExpiresOn\": \"<dateTime>\",\n            \"inviteId\": \"<uuid>\",\n            \"idNumber\": \"<string>\",\n            \"inviteRevoked\": \"<boolean>\",\n            \"isDeleted\": \"<boolean>\",\n            \"meansOfId\": \"Passport\",\n            \"bvnMeansOfIdCompare\": \"<boolean>\",\n            \"bvnMeansOfIdCompareResult\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"BVN\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"BeneficialOwner\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateOfBirth\": \"<string>\",\n            \"stateOfOrigin\": \"<string>\",\n            \"lgaOfOrigin\": \"<string>\",\n            \"nationality\": \"<string>\",\n            \"photoOnBVN\": \"<string>\",\n            \"bvnLinkedNin\": \"<string>\",\n            \"livenesssPhoto\": \"<string>\",\n            \"photoOnMeansOfId\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Level3Review\",\n            \"livenessCheck\": \"<boolean>\",\n            \"idVerified\": \"<boolean>\",\n            \"bvnVerified\": \"<boolean>\",\n            \"addressVerified\": \"<boolean>\",\n            \"wasInvited\": \"<boolean>\",\n            \"acceptedInvite\": \"<boolean>\",\n            \"acceptedInviteOn\": \"<dateTime>\",\n            \"inviteExpiresOn\": \"<dateTime>\",\n            \"inviteId\": \"<uuid>\",\n            \"idNumber\": \"<string>\",\n            \"inviteRevoked\": \"<boolean>\",\n            \"isDeleted\": \"<boolean>\",\n            \"meansOfId\": \"Passport\",\n            \"bvnMeansOfIdCompare\": \"<boolean>\",\n            \"bvnMeansOfIdCompareResult\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userBusinesses\": [\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\",\n              \"isDeleted\": \"<boolean>\",\n              \"agreeToSignUpTandC\": \"<boolean>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          },\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"email\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\",\n              \"isDeleted\": \"<boolean>\",\n              \"agreeToSignUpTandC\": \"<boolean>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          }\n        ],\n        \"isDeleted\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"kycVerified\": \"<boolean>\",\n        \"numberOfDirectorsInvited\": \"<integer>\",\n        \"numberOfDirectorsAddressVerified\": \"<integer>\",\n        \"boardResolutionFile\": \"<string>\",\n        \"cacForm2aFile\": \"<string>\",\n        \"cacForm7aFile\": \"<string>\",\n        \"mematFile\": \"<string>\",\n        \"companyTinFile\": \"<string>\",\n        \"proofOfAddressFile\": \"<string>\",\n        \"additionalDocument\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"agreeToAddDirectors\": \"<boolean>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      \"acceptedInvite\": \"<boolean>\",\n      \"acceptedInviteOn\": \"<dateTime>\",\n      \"inviteExpiresOn\": \"<dateTime>\",\n      \"inviteId\": \"<uuid>\",\n      \"idNumber\": \"<string>\",\n      \"inviteRevoked\": \"<boolean>\"\n    }\n  ],\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
														}
													]
												}
											],
											"id": "8dc6f103-7a05-45e8-a901-c5a2c52cee20"
										}
									],
									"id": "0e841da9-5146-40f8-93ac-6f71040344bc"
								}
							],
							"id": "40433d78-f5db-469a-9776-16d086df0adb"
						}
					],
					"id": "6d556649-76fe-4520-9b8c-aa788b42dbbf"
				},
				{
					"name": "Get a Stakeholder",
					"id": "999899c3-7b17-4b00-830f-dc38103b321a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{business_access_token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/onboard/api/stakeholder?rcbnNumber=hdkakfnkwfnwlkl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"onboard",
								"api",
								"stakeholder"
							],
							"query": [
								{
									"key": "rcbnNumber",
									"value": "hdkakfnkwfnwlkl"
								}
							]
						}
					},
					"response": [
						{
							"id": "21027cd1-3a63-4dc4-94bc-1869c513fd37",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/stakeholder?rcbnNumber=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"stakeholder"
									],
									"query": [
										{
											"key": "rcbnNumber",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"financialId\": \"<string>\",\n    \"financialIdType\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"profileImage\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"stakeholderType\": \"BeneficialOwner\",\n    \"ownerhipPercentage\": \"<float>\",\n    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n    \"emailVeriedAt\": \"<dateTime>\",\n    \"businessId\": \"<integer>\",\n    \"business\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"businessUid\": \"<uuid>\",\n      \"email\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"tin\": \"<string>\",\n      \"hasDirectors\": \"<boolean>\",\n      \"hasShareHolders\": \"<boolean>\",\n      \"hasBenficialOwners\": \"<boolean>\",\n      \"natureOfBusiness\": \"<string>\",\n      \"sourceOfRevenue\": \"<string>\",\n      \"sourceOfCapital\": \"<string>\",\n      \"taxCompliance\": \"<boolean>\",\n      \"evidenceOfCorporateGovernance\": \"<boolean>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"status\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level1Rejected\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"kycDeclineReason\": \"<string>\",\n      \"blacklisted\": \"<boolean>\",\n      \"accounts\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        }\n      ],\n      \"customerRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"stakeholders\": [\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"Level2Review\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"NotStarted\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userBusinesses\": [\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        },\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        }\n      ],\n      \"isDeleted\": \"<boolean>\",\n      \"addressVerified\": \"<boolean>\",\n      \"kycVerified\": \"<boolean>\",\n      \"numberOfDirectorsInvited\": \"<integer>\",\n      \"numberOfDirectorsAddressVerified\": \"<integer>\",\n      \"boardResolutionFile\": \"<string>\",\n      \"cacForm2aFile\": \"<string>\",\n      \"cacForm7aFile\": \"<string>\",\n      \"mematFile\": \"<string>\",\n      \"companyTinFile\": \"<string>\",\n      \"proofOfAddressFile\": \"<string>\",\n      \"additionalDocument\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"agreeToAddDirectors\": \"<boolean>\",\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    },\n    \"acceptedInvite\": \"<boolean>\",\n    \"acceptedInviteOn\": \"<dateTime>\",\n    \"inviteExpiresOn\": \"<dateTime>\",\n    \"inviteId\": \"<uuid>\",\n    \"idNumber\": \"<string>\",\n    \"inviteRevoked\": \"<boolean>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Save Stakeholder",
					"id": "f2d90268-2250-49c9-8fcd-6f18fad545a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"financialId\": \"<string>\",\n  \"financialIdType\": \"<string>\",\n  \"stateProvince\": \"<string>\",\n  \"city\": \"<string>\",\n  \"streetAddress1\": \"<string>\",\n  \"streetAddress2\": \"<string>\",\n  \"nearestLandmark\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"profileImage\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"stakeholderType\": \"Director\",\n  \"ownerhipPercentage\": \"<float>\",\n  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n  \"emailVeriedAt\": \"<dateTime>\",\n  \"businessId\": \"<integer>\",\n  \"business\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"businessUid\": \"<uuid>\",\n    \"email\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"tin\": \"<string>\",\n    \"hasDirectors\": \"<boolean>\",\n    \"hasShareHolders\": \"<boolean>\",\n    \"hasBenficialOwners\": \"<boolean>\",\n    \"natureOfBusiness\": \"<string>\",\n    \"sourceOfRevenue\": \"<string>\",\n    \"sourceOfCapital\": \"<string>\",\n    \"taxCompliance\": \"<boolean>\",\n    \"evidenceOfCorporateGovernance\": \"<boolean>\",\n    \"dailyDeposit\": \"<double>\",\n    \"dailyTransfer\": \"<double>\",\n    \"lifetimeDeposit\": \"<double>\",\n    \"limitTransfer\": \"<double>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"status\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"customerNumber\": \"<string>\",\n    \"kycLevel\": \"<string>\",\n    \"kycStatus\": \"Level2Rejected\",\n    \"kycApprovedBy\": \"<string>\",\n    \"kycApprovedDate\": \"<dateTime>\",\n    \"kycDeclineReason\": \"<string>\",\n    \"blacklisted\": \"<boolean>\",\n    \"accounts\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      }\n    ],\n    \"customerRelationships\": [\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"stakeholders\": [\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"BeneficialOwner\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"VNin\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"Director\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Review\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"Passport\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"userBusinesses\": [\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      }\n    ],\n    \"isDeleted\": \"<boolean>\",\n    \"addressVerified\": \"<boolean>\",\n    \"kycVerified\": \"<boolean>\",\n    \"numberOfDirectorsInvited\": \"<integer>\",\n    \"numberOfDirectorsAddressVerified\": \"<integer>\",\n    \"boardResolutionFile\": \"<string>\",\n    \"cacForm2aFile\": \"<string>\",\n    \"cacForm7aFile\": \"<string>\",\n    \"mematFile\": \"<string>\",\n    \"companyTinFile\": \"<string>\",\n    \"proofOfAddressFile\": \"<string>\",\n    \"additionalDocument\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"agreeToAddDirectors\": \"<boolean>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"lastUpdatedOn\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"lastUpdatedBy\": \"<string>\"\n  },\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"idNumber\": \"<string>\",\n  \"inviteRevoked\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/stakeholder"
					},
					"response": [
						{
							"id": "a219cf0b-cc89-4e07-8df9-9b09e5f4cb87",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"financialId\": \"<string>\",\n  \"financialIdType\": \"<string>\",\n  \"stateProvince\": \"<string>\",\n  \"city\": \"<string>\",\n  \"streetAddress1\": \"<string>\",\n  \"streetAddress2\": \"<string>\",\n  \"nearestLandmark\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"profileImage\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"stakeholderType\": \"Director\",\n  \"ownerhipPercentage\": \"<float>\",\n  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n  \"emailVeriedAt\": \"<dateTime>\",\n  \"businessId\": \"<integer>\",\n  \"business\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"businessUid\": \"<uuid>\",\n    \"email\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"tin\": \"<string>\",\n    \"hasDirectors\": \"<boolean>\",\n    \"hasShareHolders\": \"<boolean>\",\n    \"hasBenficialOwners\": \"<boolean>\",\n    \"natureOfBusiness\": \"<string>\",\n    \"sourceOfRevenue\": \"<string>\",\n    \"sourceOfCapital\": \"<string>\",\n    \"taxCompliance\": \"<boolean>\",\n    \"evidenceOfCorporateGovernance\": \"<boolean>\",\n    \"dailyDeposit\": \"<double>\",\n    \"dailyTransfer\": \"<double>\",\n    \"lifetimeDeposit\": \"<double>\",\n    \"limitTransfer\": \"<double>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"status\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"customerNumber\": \"<string>\",\n    \"kycLevel\": \"<string>\",\n    \"kycStatus\": \"Level2Rejected\",\n    \"kycApprovedBy\": \"<string>\",\n    \"kycApprovedDate\": \"<dateTime>\",\n    \"kycDeclineReason\": \"<string>\",\n    \"blacklisted\": \"<boolean>\",\n    \"accounts\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      }\n    ],\n    \"customerRelationships\": [\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"stakeholders\": [\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"BeneficialOwner\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"VNin\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"Director\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Review\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"Passport\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"userBusinesses\": [\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      }\n    ],\n    \"isDeleted\": \"<boolean>\",\n    \"addressVerified\": \"<boolean>\",\n    \"kycVerified\": \"<boolean>\",\n    \"numberOfDirectorsInvited\": \"<integer>\",\n    \"numberOfDirectorsAddressVerified\": \"<integer>\",\n    \"boardResolutionFile\": \"<string>\",\n    \"cacForm2aFile\": \"<string>\",\n    \"cacForm7aFile\": \"<string>\",\n    \"mematFile\": \"<string>\",\n    \"companyTinFile\": \"<string>\",\n    \"proofOfAddressFile\": \"<string>\",\n    \"additionalDocument\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"agreeToAddDirectors\": \"<boolean>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"lastUpdatedOn\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"lastUpdatedBy\": \"<string>\"\n  },\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"idNumber\": \"<string>\",\n  \"inviteRevoked\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/stakeholder"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"financialId\": \"<string>\",\n    \"financialIdType\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"profileImage\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"stakeholderType\": \"BeneficialOwner\",\n    \"ownerhipPercentage\": \"<float>\",\n    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n    \"emailVeriedAt\": \"<dateTime>\",\n    \"businessId\": \"<integer>\",\n    \"business\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"businessUid\": \"<uuid>\",\n      \"email\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"tin\": \"<string>\",\n      \"hasDirectors\": \"<boolean>\",\n      \"hasShareHolders\": \"<boolean>\",\n      \"hasBenficialOwners\": \"<boolean>\",\n      \"natureOfBusiness\": \"<string>\",\n      \"sourceOfRevenue\": \"<string>\",\n      \"sourceOfCapital\": \"<string>\",\n      \"taxCompliance\": \"<boolean>\",\n      \"evidenceOfCorporateGovernance\": \"<boolean>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"status\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level1Rejected\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"kycDeclineReason\": \"<string>\",\n      \"blacklisted\": \"<boolean>\",\n      \"accounts\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        }\n      ],\n      \"customerRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"stakeholders\": [\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"Level2Review\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"NotStarted\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userBusinesses\": [\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        },\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        }\n      ],\n      \"isDeleted\": \"<boolean>\",\n      \"addressVerified\": \"<boolean>\",\n      \"kycVerified\": \"<boolean>\",\n      \"numberOfDirectorsInvited\": \"<integer>\",\n      \"numberOfDirectorsAddressVerified\": \"<integer>\",\n      \"boardResolutionFile\": \"<string>\",\n      \"cacForm2aFile\": \"<string>\",\n      \"cacForm7aFile\": \"<string>\",\n      \"mematFile\": \"<string>\",\n      \"companyTinFile\": \"<string>\",\n      \"proofOfAddressFile\": \"<string>\",\n      \"additionalDocument\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"agreeToAddDirectors\": \"<boolean>\",\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    },\n    \"acceptedInvite\": \"<boolean>\",\n    \"acceptedInviteOn\": \"<dateTime>\",\n    \"inviteExpiresOn\": \"<dateTime>\",\n    \"inviteId\": \"<uuid>\",\n    \"idNumber\": \"<string>\",\n    \"inviteRevoked\": \"<boolean>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Save Stakeholder Copy",
					"id": "bb3b60a3-d9a1-427a-8679-5df637c9b12c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{business_access_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							},
							{
								"key": "x-api-key",
								"value": "{{x-api-key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"financialId\": \"<string>\",\n  \"financialIdType\": \"<string>\",\n  \"stateProvince\": \"<string>\",\n  \"city\": \"<string>\",\n  \"streetAddress1\": \"<string>\",\n  \"streetAddress2\": \"<string>\",\n  \"nearestLandmark\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"profileImage\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"stakeholderType\": \"Director\",\n  \"ownerhipPercentage\": \"<float>\",\n  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n  \"emailVeriedAt\": \"<dateTime>\",\n  \"businessId\": \"<integer>\",\n  \"business\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"businessUid\": \"<uuid>\",\n    \"email\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"tin\": \"<string>\",\n    \"hasDirectors\": \"<boolean>\",\n    \"hasShareHolders\": \"<boolean>\",\n    \"hasBenficialOwners\": \"<boolean>\",\n    \"natureOfBusiness\": \"<string>\",\n    \"sourceOfRevenue\": \"<string>\",\n    \"sourceOfCapital\": \"<string>\",\n    \"taxCompliance\": \"<boolean>\",\n    \"evidenceOfCorporateGovernance\": \"<boolean>\",\n    \"dailyDeposit\": \"<double>\",\n    \"dailyTransfer\": \"<double>\",\n    \"lifetimeDeposit\": \"<double>\",\n    \"limitTransfer\": \"<double>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"status\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"customerNumber\": \"<string>\",\n    \"kycLevel\": \"<string>\",\n    \"kycStatus\": \"Level2Rejected\",\n    \"kycApprovedBy\": \"<string>\",\n    \"kycApprovedDate\": \"<dateTime>\",\n    \"kycDeclineReason\": \"<string>\",\n    \"blacklisted\": \"<boolean>\",\n    \"accounts\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      }\n    ],\n    \"customerRelationships\": [\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"stakeholders\": [\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"BeneficialOwner\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"VNin\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"Director\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Review\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"Passport\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"userBusinesses\": [\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      }\n    ],\n    \"isDeleted\": \"<boolean>\",\n    \"addressVerified\": \"<boolean>\",\n    \"kycVerified\": \"<boolean>\",\n    \"numberOfDirectorsInvited\": \"<integer>\",\n    \"numberOfDirectorsAddressVerified\": \"<integer>\",\n    \"boardResolutionFile\": \"<string>\",\n    \"cacForm2aFile\": \"<string>\",\n    \"cacForm7aFile\": \"<string>\",\n    \"mematFile\": \"<string>\",\n    \"companyTinFile\": \"<string>\",\n    \"proofOfAddressFile\": \"<string>\",\n    \"additionalDocument\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"agreeToAddDirectors\": \"<boolean>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"lastUpdatedOn\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"lastUpdatedBy\": \"<string>\"\n  },\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"idNumber\": \"<string>\",\n  \"inviteRevoked\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/onboard/api/stakeholder"
					},
					"response": [
						{
							"id": "4691ae4a-520c-4e55-9e9c-2b60eb341d03",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"financialId\": \"<string>\",\n  \"financialIdType\": \"<string>\",\n  \"stateProvince\": \"<string>\",\n  \"city\": \"<string>\",\n  \"streetAddress1\": \"<string>\",\n  \"streetAddress2\": \"<string>\",\n  \"nearestLandmark\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"profileImage\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"stakeholderType\": \"Director\",\n  \"ownerhipPercentage\": \"<float>\",\n  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n  \"emailVeriedAt\": \"<dateTime>\",\n  \"businessId\": \"<integer>\",\n  \"business\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"businessUid\": \"<uuid>\",\n    \"email\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"tin\": \"<string>\",\n    \"hasDirectors\": \"<boolean>\",\n    \"hasShareHolders\": \"<boolean>\",\n    \"hasBenficialOwners\": \"<boolean>\",\n    \"natureOfBusiness\": \"<string>\",\n    \"sourceOfRevenue\": \"<string>\",\n    \"sourceOfCapital\": \"<string>\",\n    \"taxCompliance\": \"<boolean>\",\n    \"evidenceOfCorporateGovernance\": \"<boolean>\",\n    \"dailyDeposit\": \"<double>\",\n    \"dailyTransfer\": \"<double>\",\n    \"lifetimeDeposit\": \"<double>\",\n    \"limitTransfer\": \"<double>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"status\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"customerNumber\": \"<string>\",\n    \"kycLevel\": \"<string>\",\n    \"kycStatus\": \"Level2Rejected\",\n    \"kycApprovedBy\": \"<string>\",\n    \"kycApprovedDate\": \"<dateTime>\",\n    \"kycDeclineReason\": \"<string>\",\n    \"blacklisted\": \"<boolean>\",\n    \"accounts\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      }\n    ],\n    \"customerRelationships\": [\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"stakeholders\": [\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"BeneficialOwner\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"VNin\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"Director\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Review\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"Passport\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"userBusinesses\": [\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      }\n    ],\n    \"isDeleted\": \"<boolean>\",\n    \"addressVerified\": \"<boolean>\",\n    \"kycVerified\": \"<boolean>\",\n    \"numberOfDirectorsInvited\": \"<integer>\",\n    \"numberOfDirectorsAddressVerified\": \"<integer>\",\n    \"boardResolutionFile\": \"<string>\",\n    \"cacForm2aFile\": \"<string>\",\n    \"cacForm7aFile\": \"<string>\",\n    \"mematFile\": \"<string>\",\n    \"companyTinFile\": \"<string>\",\n    \"proofOfAddressFile\": \"<string>\",\n    \"additionalDocument\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"agreeToAddDirectors\": \"<boolean>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"lastUpdatedOn\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"lastUpdatedBy\": \"<string>\"\n  },\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"idNumber\": \"<string>\",\n  \"inviteRevoked\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/stakeholder"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"financialId\": \"<string>\",\n    \"financialIdType\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"profileImage\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"stakeholderType\": \"BeneficialOwner\",\n    \"ownerhipPercentage\": \"<float>\",\n    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n    \"emailVeriedAt\": \"<dateTime>\",\n    \"businessId\": \"<integer>\",\n    \"business\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"businessUid\": \"<uuid>\",\n      \"email\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"tin\": \"<string>\",\n      \"hasDirectors\": \"<boolean>\",\n      \"hasShareHolders\": \"<boolean>\",\n      \"hasBenficialOwners\": \"<boolean>\",\n      \"natureOfBusiness\": \"<string>\",\n      \"sourceOfRevenue\": \"<string>\",\n      \"sourceOfCapital\": \"<string>\",\n      \"taxCompliance\": \"<boolean>\",\n      \"evidenceOfCorporateGovernance\": \"<boolean>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"status\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level1Rejected\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"kycDeclineReason\": \"<string>\",\n      \"blacklisted\": \"<boolean>\",\n      \"accounts\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        }\n      ],\n      \"customerRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"stakeholders\": [\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"Level2Review\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"NotStarted\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userBusinesses\": [\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        },\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        }\n      ],\n      \"isDeleted\": \"<boolean>\",\n      \"addressVerified\": \"<boolean>\",\n      \"kycVerified\": \"<boolean>\",\n      \"numberOfDirectorsInvited\": \"<integer>\",\n      \"numberOfDirectorsAddressVerified\": \"<integer>\",\n      \"boardResolutionFile\": \"<string>\",\n      \"cacForm2aFile\": \"<string>\",\n      \"cacForm7aFile\": \"<string>\",\n      \"mematFile\": \"<string>\",\n      \"companyTinFile\": \"<string>\",\n      \"proofOfAddressFile\": \"<string>\",\n      \"additionalDocument\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"agreeToAddDirectors\": \"<boolean>\",\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    },\n    \"acceptedInvite\": \"<boolean>\",\n    \"acceptedInviteOn\": \"<dateTime>\",\n    \"inviteExpiresOn\": \"<dateTime>\",\n    \"inviteId\": \"<uuid>\",\n    \"idNumber\": \"<string>\",\n    \"inviteRevoked\": \"<boolean>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Update Stakeholder",
					"id": "29a646e4-8c86-42aa-9d86-0d94c63fcc00",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"financialId\": \"<string>\",\n  \"financialIdType\": \"<string>\",\n  \"stateProvince\": \"<string>\",\n  \"city\": \"<string>\",\n  \"streetAddress1\": \"<string>\",\n  \"streetAddress2\": \"<string>\",\n  \"nearestLandmark\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"profileImage\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"stakeholderType\": \"Director\",\n  \"ownerhipPercentage\": \"<float>\",\n  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n  \"emailVeriedAt\": \"<dateTime>\",\n  \"businessId\": \"<integer>\",\n  \"business\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"businessUid\": \"<uuid>\",\n    \"email\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"tin\": \"<string>\",\n    \"hasDirectors\": \"<boolean>\",\n    \"hasShareHolders\": \"<boolean>\",\n    \"hasBenficialOwners\": \"<boolean>\",\n    \"natureOfBusiness\": \"<string>\",\n    \"sourceOfRevenue\": \"<string>\",\n    \"sourceOfCapital\": \"<string>\",\n    \"taxCompliance\": \"<boolean>\",\n    \"evidenceOfCorporateGovernance\": \"<boolean>\",\n    \"dailyDeposit\": \"<double>\",\n    \"dailyTransfer\": \"<double>\",\n    \"lifetimeDeposit\": \"<double>\",\n    \"limitTransfer\": \"<double>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"status\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"customerNumber\": \"<string>\",\n    \"kycLevel\": \"<string>\",\n    \"kycStatus\": \"Level2Rejected\",\n    \"kycApprovedBy\": \"<string>\",\n    \"kycApprovedDate\": \"<dateTime>\",\n    \"kycDeclineReason\": \"<string>\",\n    \"blacklisted\": \"<boolean>\",\n    \"accounts\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      }\n    ],\n    \"customerRelationships\": [\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"stakeholders\": [\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"BeneficialOwner\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"VNin\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"Director\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Review\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"Passport\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"userBusinesses\": [\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      }\n    ],\n    \"isDeleted\": \"<boolean>\",\n    \"addressVerified\": \"<boolean>\",\n    \"kycVerified\": \"<boolean>\",\n    \"numberOfDirectorsInvited\": \"<integer>\",\n    \"numberOfDirectorsAddressVerified\": \"<integer>\",\n    \"boardResolutionFile\": \"<string>\",\n    \"cacForm2aFile\": \"<string>\",\n    \"cacForm7aFile\": \"<string>\",\n    \"mematFile\": \"<string>\",\n    \"companyTinFile\": \"<string>\",\n    \"proofOfAddressFile\": \"<string>\",\n    \"additionalDocument\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"agreeToAddDirectors\": \"<boolean>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"lastUpdatedOn\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"lastUpdatedBy\": \"<string>\"\n  },\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"idNumber\": \"<string>\",\n  \"inviteRevoked\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/stakeholder"
					},
					"response": [
						{
							"id": "88c99ce2-1315-40e9-970b-2348865d3122",
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"rcBnNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"phoneNumberCountryCode\": \"<string>\",\n  \"countryCode\": \"<string>\",\n  \"financialId\": \"<string>\",\n  \"financialIdType\": \"<string>\",\n  \"stateProvince\": \"<string>\",\n  \"city\": \"<string>\",\n  \"streetAddress1\": \"<string>\",\n  \"streetAddress2\": \"<string>\",\n  \"nearestLandmark\": \"<string>\",\n  \"postalCode\": \"<string>\",\n  \"profileImage\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"stakeholderType\": \"Director\",\n  \"ownerhipPercentage\": \"<float>\",\n  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n  \"emailVeriedAt\": \"<dateTime>\",\n  \"businessId\": \"<integer>\",\n  \"business\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"businessUid\": \"<uuid>\",\n    \"email\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"tin\": \"<string>\",\n    \"hasDirectors\": \"<boolean>\",\n    \"hasShareHolders\": \"<boolean>\",\n    \"hasBenficialOwners\": \"<boolean>\",\n    \"natureOfBusiness\": \"<string>\",\n    \"sourceOfRevenue\": \"<string>\",\n    \"sourceOfCapital\": \"<string>\",\n    \"taxCompliance\": \"<boolean>\",\n    \"evidenceOfCorporateGovernance\": \"<boolean>\",\n    \"dailyDeposit\": \"<double>\",\n    \"dailyTransfer\": \"<double>\",\n    \"lifetimeDeposit\": \"<double>\",\n    \"limitTransfer\": \"<double>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"status\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"customerNumber\": \"<string>\",\n    \"kycLevel\": \"<string>\",\n    \"kycStatus\": \"Level2Rejected\",\n    \"kycApprovedBy\": \"<string>\",\n    \"kycApprovedDate\": \"<dateTime>\",\n    \"kycDeclineReason\": \"<string>\",\n    \"blacklisted\": \"<boolean>\",\n    \"accounts\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n      }\n    ],\n    \"customerRelationships\": [\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"stakeholders\": [\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"BeneficialOwner\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"VNin\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"rcBnNumber\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"stakeholderType\": \"Director\",\n        \"ownerhipPercentage\": \"<float>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        },\n        \"dateOfBirth\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Review\",\n        \"livenessCheck\": \"<boolean>\",\n        \"idVerified\": \"<boolean>\",\n        \"bvnVerified\": \"<boolean>\",\n        \"addressVerified\": \"<boolean>\",\n        \"wasInvited\": \"<boolean>\",\n        \"acceptedInvite\": \"<boolean>\",\n        \"acceptedInviteOn\": \"<dateTime>\",\n        \"inviteExpiresOn\": \"<dateTime>\",\n        \"inviteId\": \"<uuid>\",\n        \"idNumber\": \"<string>\",\n        \"inviteRevoked\": \"<boolean>\",\n        \"isDeleted\": \"<boolean>\",\n        \"meansOfId\": \"Passport\",\n        \"bvnMeansOfIdCompare\": \"<boolean>\",\n        \"bvnMeansOfIdCompareResult\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    ],\n    \"userBusinesses\": [\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\",\n          \"isDeleted\": \"<boolean>\",\n          \"agreeToSignUpTandC\": \"<boolean>\"\n        },\n        \"businessId\": \"<integer>\",\n        \"business\": {\n          \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n        }\n      }\n    ],\n    \"isDeleted\": \"<boolean>\",\n    \"addressVerified\": \"<boolean>\",\n    \"kycVerified\": \"<boolean>\",\n    \"numberOfDirectorsInvited\": \"<integer>\",\n    \"numberOfDirectorsAddressVerified\": \"<integer>\",\n    \"boardResolutionFile\": \"<string>\",\n    \"cacForm2aFile\": \"<string>\",\n    \"cacForm7aFile\": \"<string>\",\n    \"mematFile\": \"<string>\",\n    \"companyTinFile\": \"<string>\",\n    \"proofOfAddressFile\": \"<string>\",\n    \"additionalDocument\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"agreeToAddDirectors\": \"<boolean>\",\n    \"dateCreated\": \"<dateTime>\",\n    \"lastUpdatedOn\": \"<dateTime>\",\n    \"createdBy\": \"<string>\",\n    \"lastUpdatedBy\": \"<string>\"\n  },\n  \"acceptedInvite\": \"<boolean>\",\n  \"acceptedInviteOn\": \"<dateTime>\",\n  \"inviteExpiresOn\": \"<dateTime>\",\n  \"inviteId\": \"<uuid>\",\n  \"idNumber\": \"<string>\",\n  \"inviteRevoked\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/stakeholder"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"rcBnNumber\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"phoneNumberCountryCode\": \"<string>\",\n    \"countryCode\": \"<string>\",\n    \"financialId\": \"<string>\",\n    \"financialIdType\": \"<string>\",\n    \"stateProvince\": \"<string>\",\n    \"city\": \"<string>\",\n    \"streetAddress1\": \"<string>\",\n    \"streetAddress2\": \"<string>\",\n    \"nearestLandmark\": \"<string>\",\n    \"postalCode\": \"<string>\",\n    \"profileImage\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"stakeholderType\": \"BeneficialOwner\",\n    \"ownerhipPercentage\": \"<float>\",\n    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n    \"emailVeriedAt\": \"<dateTime>\",\n    \"businessId\": \"<integer>\",\n    \"business\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"businessUid\": \"<uuid>\",\n      \"email\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"tin\": \"<string>\",\n      \"hasDirectors\": \"<boolean>\",\n      \"hasShareHolders\": \"<boolean>\",\n      \"hasBenficialOwners\": \"<boolean>\",\n      \"natureOfBusiness\": \"<string>\",\n      \"sourceOfRevenue\": \"<string>\",\n      \"sourceOfCapital\": \"<string>\",\n      \"taxCompliance\": \"<boolean>\",\n      \"evidenceOfCorporateGovernance\": \"<boolean>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"status\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level1Rejected\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"kycDeclineReason\": \"<string>\",\n      \"blacklisted\": \"<boolean>\",\n      \"accounts\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        }\n      ],\n      \"customerRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"stakeholders\": [\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"Level2Review\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"BVN\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"BeneficialOwner\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateOfBirth\": \"<string>\",\n          \"stateOfOrigin\": \"<string>\",\n          \"lgaOfOrigin\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"photoOnBVN\": \"<string>\",\n          \"bvnLinkedNin\": \"<string>\",\n          \"livenesssPhoto\": \"<string>\",\n          \"photoOnMeansOfId\": \"<string>\",\n          \"kycLevel\": \"<string>\",\n          \"kycStatus\": \"NotStarted\",\n          \"livenessCheck\": \"<boolean>\",\n          \"idVerified\": \"<boolean>\",\n          \"bvnVerified\": \"<boolean>\",\n          \"addressVerified\": \"<boolean>\",\n          \"wasInvited\": \"<boolean>\",\n          \"acceptedInvite\": \"<boolean>\",\n          \"acceptedInviteOn\": \"<dateTime>\",\n          \"inviteExpiresOn\": \"<dateTime>\",\n          \"inviteId\": \"<uuid>\",\n          \"idNumber\": \"<string>\",\n          \"inviteRevoked\": \"<boolean>\",\n          \"isDeleted\": \"<boolean>\",\n          \"meansOfId\": \"Passport\",\n          \"bvnMeansOfIdCompare\": \"<boolean>\",\n          \"bvnMeansOfIdCompareResult\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userBusinesses\": [\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        },\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\",\n            \"isDeleted\": \"<boolean>\",\n            \"agreeToSignUpTandC\": \"<boolean>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        }\n      ],\n      \"isDeleted\": \"<boolean>\",\n      \"addressVerified\": \"<boolean>\",\n      \"kycVerified\": \"<boolean>\",\n      \"numberOfDirectorsInvited\": \"<integer>\",\n      \"numberOfDirectorsAddressVerified\": \"<integer>\",\n      \"boardResolutionFile\": \"<string>\",\n      \"cacForm2aFile\": \"<string>\",\n      \"cacForm7aFile\": \"<string>\",\n      \"mematFile\": \"<string>\",\n      \"companyTinFile\": \"<string>\",\n      \"proofOfAddressFile\": \"<string>\",\n      \"additionalDocument\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"agreeToAddDirectors\": \"<boolean>\",\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    },\n    \"acceptedInvite\": \"<boolean>\",\n    \"acceptedInviteOn\": \"<dateTime>\",\n    \"inviteExpiresOn\": \"<dateTime>\",\n    \"inviteId\": \"<uuid>\",\n    \"idNumber\": \"<string>\",\n    \"inviteRevoked\": \"<boolean>\"\n  },\n  \"resultType\": \"Success\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
						}
					]
				}
			],
			"id": "b7cef399-1e8b-492f-b517-c8d13e460b31"
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is present in the response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is a non-empty string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"business_access_token\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9be51361-21e6-4b7a-9332-f554a8262cb4",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "db8bbaf0-b76b-4696-9e42-b9b6dfda2317",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
											"key": "username",
											"value": "mary+babe@assurdly.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Assurdly01!"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "a641ff89-7517-4a0f-a12a-240d098007fc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "0a74c0fd-55d9-40a5-a767-79d119a08b9d"
				},
				{
					"name": "username",
					"item": [
						{
							"name": "{username}",
							"item": [
								{
									"name": "/api/account/username/:username",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f5ce8699-33d6-43fb-92f5-b687e648bad1",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Response code is 200 for success\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"The 'amount' field should be a number\", function () {",
													"    const responseData = pm.response.json();",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.result.amount).to.be.a('number');",
													"});",
													"",
													"pm.test(\"Response structure and properties for 200\", function () {",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);",
													"    pm.expect(pm.response.json()).to.have.property(\"result\");",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");",
													"});",
													"",
													"pm.test(\"Result object properties for 200\", function () {",
													"    var result = pm.response.json().result;",
													"    ",
													"    pm.expect(result).to.have.property(\"message\", \"Successful\");",
													"    pm.expect(result).to.have.property(\"status\", \"Success\");",
													"    pm.expect(result).to.have.property(\"billToken\").to.be.null;",
													"});",
													"",
													"",
													"pm.test(\"Check if transaction reference is present\", function () {",
													"    var responseBody = pm.response.json();",
													"    pm.expect(responseBody.result.reference).to.not.be.undefined;",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "bb45bdb0-9cb5-4994-b26c-0aad27743bf2",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c5fe2c49-4faa-4f46-a6d8-590db7f9109a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/account/username/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"account",
												"username",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "{{bus_username}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "641161b4-c1d3-4c65-b040-55c4b1c7e550",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/username/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"username",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"userName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"cardLimit\": \"<double>\",\n      \"customerId\": \"<integer>\",\n      \"businessId\": \"<integer>\",\n      \"customer\": {\n        \"id\": \"<integer>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"referralCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"previousNames\": \"<string>\",\n        \"meansOfId\": \"DriversLicense\",\n        \"dateOfBirth\": \"<string>\",\n        \"idNumber\": \"<string>\",\n        \"securityQuestion1\": \"<string>\",\n        \"securityAnswer1\": \"<string>\",\n        \"securityQuestion2\": \"<string>\",\n        \"securityAnswer2\": \"<string>\",\n        \"phoneNumberVerfiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"useKYCLevelLimit\": \"<boolean>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"income\": \"<double>\",\n        \"idFile\": \"<string>\",\n        \"proofOfAddressFile\": \"<string>\",\n        \"bankStatementFile\": \"<string>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level2Rejected\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"active\": \"<boolean>\",\n        \"status\": \"Phone_Verification_Pending\",\n        \"accounts\": [\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level2Rejected\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level1Approved\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"businessRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userId\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"blacklisted\": \"<boolean>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      \"business\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"email\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"tin\": \"<string>\",\n        \"hasDirectors\": \"<boolean>\",\n        \"hasShareHolders\": \"<boolean>\",\n        \"hasBenficialOwners\": \"<boolean>\",\n        \"natureOfBusiness\": \"<string>\",\n        \"sourceOfRevenue\": \"<string>\",\n        \"sourceOfCapital\": \"<string>\",\n        \"taxCompliance\": \"<boolean>\",\n        \"evidenceOfCorporateGovernance\": \"<boolean>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"status\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level1Pending\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"blackListed\": \"<boolean>\",\n        \"accounts\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          }\n        ],\n        \"customerRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"stakeholders\": [\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userBusinesses\": [\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          },\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          }\n        ],\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    },\n    {\n      \"userName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"accountType\": \"<string>\",\n      \"currencyCode\": \"<string>\",\n      \"cardLimit\": \"<double>\",\n      \"customerId\": \"<integer>\",\n      \"businessId\": \"<integer>\",\n      \"customer\": {\n        \"id\": \"<integer>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"referralCode\": \"<string>\",\n        \"financialId\": \"<string>\",\n        \"financialIdType\": \"BVN\",\n        \"profileImage\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"previousNames\": \"<string>\",\n        \"meansOfId\": \"Vnin\",\n        \"dateOfBirth\": \"<string>\",\n        \"idNumber\": \"<string>\",\n        \"securityQuestion1\": \"<string>\",\n        \"securityAnswer1\": \"<string>\",\n        \"securityQuestion2\": \"<string>\",\n        \"securityAnswer2\": \"<string>\",\n        \"phoneNumberVerfiedAt\": \"<dateTime>\",\n        \"emailVeriedAt\": \"<dateTime>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"useKYCLevelLimit\": \"<boolean>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"income\": \"<double>\",\n        \"idFile\": \"<string>\",\n        \"proofOfAddressFile\": \"<string>\",\n        \"bankStatementFile\": \"<string>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level2Rejected\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"active\": \"<boolean>\",\n        \"status\": \"KYC_Verification_Complete\",\n        \"accounts\": [\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level3Approved\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"userName\": \"<string>\",\n            \"accountNumber\": \"<string>\",\n            \"accountType\": \"<string>\",\n            \"currencyCode\": \"<string>\",\n            \"cardLimit\": \"<double>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"id\": \"<integer>\",\n              \"name\": \"<string>\",\n              \"email\": \"<string>\",\n              \"rcBnNumber\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCountryCode\": \"<string>\",\n              \"tin\": \"<string>\",\n              \"hasDirectors\": \"<boolean>\",\n              \"hasShareHolders\": \"<boolean>\",\n              \"hasBenficialOwners\": \"<boolean>\",\n              \"natureOfBusiness\": \"<string>\",\n              \"sourceOfRevenue\": \"<string>\",\n              \"sourceOfCapital\": \"<string>\",\n              \"taxCompliance\": \"<boolean>\",\n              \"evidenceOfCorporateGovernance\": \"<boolean>\",\n              \"dailyDeposit\": \"<double>\",\n              \"dailyTransfer\": \"<double>\",\n              \"lifetimeDeposit\": \"<double>\",\n              \"limitTransfer\": \"<double>\",\n              \"streetAddress1\": \"<string>\",\n              \"streetAddress2\": \"<string>\",\n              \"stateProvince\": \"<string>\",\n              \"city\": \"<string>\",\n              \"nearestLandmark\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"countryCode\": \"<string>\",\n              \"status\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"customerNumber\": \"<string>\",\n              \"kycLevel\": \"<string>\",\n              \"kycStatus\": \"Level3Rejected\",\n              \"kycApprovedBy\": \"<string>\",\n              \"kycApprovedDate\": \"<dateTime>\",\n              \"blackListed\": \"<boolean>\",\n              \"accounts\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n                }\n              ],\n              \"customerRelationships\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"stakeholders\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"rcBnNumber\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"email\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCountryCode\": \"<string>\",\n                  \"countryCode\": \"<string>\",\n                  \"financialId\": \"<string>\",\n                  \"financialIdType\": \"<string>\",\n                  \"stateProvince\": \"<string>\",\n                  \"city\": \"<string>\",\n                  \"streetAddress1\": \"<string>\",\n                  \"streetAddress2\": \"<string>\",\n                  \"nearestLandmark\": \"<string>\",\n                  \"postalCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"stakeholderType\": \"<string>\",\n                  \"ownerhipPercentage\": \"<float>\",\n                  \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                  \"emailVeriedAt\": \"<dateTime>\",\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  },\n                  \"dateCreated\": \"<dateTime>\",\n                  \"lastUpdatedOn\": \"<dateTime>\",\n                  \"createdBy\": \"<string>\",\n                  \"lastUpdatedBy\": \"<string>\"\n                }\n              ],\n              \"userBusinesses\": [\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                },\n                {\n                  \"id\": \"<long>\",\n                  \"userId\": \"<string>\",\n                  \"user\": {\n                    \"userId\": \"<string>\",\n                    \"userName\": \"<string>\",\n                    \"firstName\": \"<string>\",\n                    \"lastName\": \"<string>\",\n                    \"phoneNumber\": \"<string>\",\n                    \"phoneNumberCode\": \"<string>\",\n                    \"referralCode\": \"<string>\",\n                    \"profileImage\": \"<string>\",\n                    \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                    \"emailVerifiedAt\": \"<dateTime>\",\n                    \"dateOfBirth\": \"<dateTime>\",\n                    \"hasTransactionPin\": \"<boolean>\",\n                    \"primaryProfile\": \"<string>\",\n                    \"gender\": \"<string>\",\n                    \"active\": \"<boolean>\",\n                    \"blacklisted\": \"<boolean>\",\n                    \"customerId\": \"<integer>\",\n                    \"customer\": {\n                      \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                    },\n                    \"userBusinesses\": [\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      },\n                      {\n                        \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                      }\n                    ],\n                    \"createdBy\": \"<string>\",\n                    \"dateCreated\": \"<dateTime>\",\n                    \"updatedBy\": \"<string>\",\n                    \"lastUpdateDate\": \"<dateTime>\"\n                  },\n                  \"businessId\": \"<integer>\",\n                  \"business\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                  }\n                }\n              ],\n              \"dateCreated\": \"<dateTime>\",\n              \"lastUpdatedOn\": \"<dateTime>\",\n              \"createdBy\": \"<string>\",\n              \"lastUpdatedBy\": \"<string>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"businessRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userId\": \"<string>\",\n        \"stateOfOrigin\": \"<string>\",\n        \"lgaOfOrigin\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"livenesssPhoto\": \"<string>\",\n        \"photoOnMeansOfId\": \"<string>\",\n        \"photoOnBVN\": \"<string>\",\n        \"bvnLinkedNin\": \"<string>\",\n        \"blacklisted\": \"<boolean>\",\n        \"user\": {\n          \"userId\": \"<string>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCode\": \"<string>\",\n          \"referralCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"phoneNumberVerifiedAt\": \"<dateTime>\",\n          \"emailVerifiedAt\": \"<dateTime>\",\n          \"dateOfBirth\": \"<dateTime>\",\n          \"hasTransactionPin\": \"<boolean>\",\n          \"primaryProfile\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"active\": \"<boolean>\",\n          \"blacklisted\": \"<boolean>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"userBusinesses\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n            }\n          ],\n          \"createdBy\": \"<string>\",\n          \"dateCreated\": \"<dateTime>\",\n          \"updatedBy\": \"<string>\",\n          \"lastUpdateDate\": \"<dateTime>\"\n        },\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      },\n      \"business\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"email\": \"<string>\",\n        \"rcBnNumber\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCountryCode\": \"<string>\",\n        \"tin\": \"<string>\",\n        \"hasDirectors\": \"<boolean>\",\n        \"hasShareHolders\": \"<boolean>\",\n        \"hasBenficialOwners\": \"<boolean>\",\n        \"natureOfBusiness\": \"<string>\",\n        \"sourceOfRevenue\": \"<string>\",\n        \"sourceOfCapital\": \"<string>\",\n        \"taxCompliance\": \"<boolean>\",\n        \"evidenceOfCorporateGovernance\": \"<boolean>\",\n        \"dailyDeposit\": \"<double>\",\n        \"dailyTransfer\": \"<double>\",\n        \"lifetimeDeposit\": \"<double>\",\n        \"limitTransfer\": \"<double>\",\n        \"streetAddress1\": \"<string>\",\n        \"streetAddress2\": \"<string>\",\n        \"stateProvince\": \"<string>\",\n        \"city\": \"<string>\",\n        \"nearestLandmark\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"countryCode\": \"<string>\",\n        \"status\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"customerNumber\": \"<string>\",\n        \"kycLevel\": \"<string>\",\n        \"kycStatus\": \"Level2Rejected\",\n        \"kycApprovedBy\": \"<string>\",\n        \"kycApprovedDate\": \"<dateTime>\",\n        \"blackListed\": \"<boolean>\",\n        \"accounts\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n          }\n        ],\n        \"customerRelationships\": [\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"stakeholders\": [\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"rcBnNumber\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"email\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"financialId\": \"<string>\",\n            \"financialIdType\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"stakeholderType\": \"<string>\",\n            \"ownerhipPercentage\": \"<float>\",\n            \"phoneNumberVerfiedAt\": \"<dateTime>\",\n            \"emailVeriedAt\": \"<dateTime>\",\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            },\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          }\n        ],\n        \"userBusinesses\": [\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          },\n          {\n            \"id\": \"<long>\",\n            \"userId\": \"<string>\",\n            \"user\": {\n              \"userId\": \"<string>\",\n              \"userName\": \"<string>\",\n              \"firstName\": \"<string>\",\n              \"lastName\": \"<string>\",\n              \"phoneNumber\": \"<string>\",\n              \"phoneNumberCode\": \"<string>\",\n              \"referralCode\": \"<string>\",\n              \"profileImage\": \"<string>\",\n              \"phoneNumberVerifiedAt\": \"<dateTime>\",\n              \"emailVerifiedAt\": \"<dateTime>\",\n              \"dateOfBirth\": \"<dateTime>\",\n              \"hasTransactionPin\": \"<boolean>\",\n              \"primaryProfile\": \"<string>\",\n              \"gender\": \"<string>\",\n              \"active\": \"<boolean>\",\n              \"blacklisted\": \"<boolean>\",\n              \"customerId\": \"<integer>\",\n              \"customer\": {\n                \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n              },\n              \"userBusinesses\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                }\n              ],\n              \"createdBy\": \"<string>\",\n              \"dateCreated\": \"<dateTime>\",\n              \"updatedBy\": \"<string>\",\n              \"lastUpdateDate\": \"<dateTime>\"\n            },\n            \"businessId\": \"<integer>\",\n            \"business\": {\n              \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n            }\n          }\n        ],\n        \"dateCreated\": \"<dateTime>\",\n        \"lastUpdatedOn\": \"<dateTime>\",\n        \"createdBy\": \"<string>\",\n        \"lastUpdatedBy\": \"<string>\"\n      }\n    }\n  ],\n  \"resultType\": \"Empty\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
										}
									]
								}
							],
							"id": "34e98dec-afdc-4729-80f2-c5e4bb4d72d6"
						}
					],
					"id": "20023188-861a-4759-9505-f5dcb26bbc5e"
				},
				{
					"name": "Create account",
					"item": [
						{
							"name": "Create Account - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "098228cc-8aed-4918-9cf1-e30ae612f406",
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"// pm.test(\"Response body should Have id\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.id');\r",
											"// });\r",
											"// pm.test(\"Response body should Have walletGroupId\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.walletGroupId');\r",
											"// });\r",
											"// pm.test(\"Response body should Have customerId\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.customerId');\r",
											"// });\r",
											"// pm.test(\"Response body should Have availableBalance\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.availableBalance');\r",
											"// });\r",
											"// pm.test(\"Response body should Have ledgerBalance\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.ledgerBalance');\r",
											"// });\r",
											"// pm.test(\"Response body should Have accountNumber\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.virtualAccount.accountNumber');\r",
											"// });\r",
											"// pm.test(\"Response body should Have bankCode\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.virtualAccount.bankCode');\r",
											"// });\r",
											"// pm.test(\"Response body should Have bankName\", function () {\r",
											"//     pm.response.to.have.jsonBody('result.virtualAccount.bankName');\r",
											"// });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8e6aa36e-9dc0-41a6-a81b-e58a96e65b91",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "a73f5cdb-8645-47fd-b75a-92516ee4b914",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Invalid currency code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d14eff6-26e1-48de-891d-aef03389dec8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5c262c59-6346-4e00-bc3f-bf4bcc0f6225",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9d1f6174-ab86-4264-b815-7e2ea8cf851f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"WWendy123\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "07b8c9b4-489f-4b4c-8011-ecb94b23ab21",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Blank currency Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2673f0aa-1dd3-4d24-93de-de51eeb8ef0a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6649adf1-a9ec-45e9-8b22-2b63e19c5d51",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "db5cbd0a-b777-4e0a-829a-6819cf0a5e89",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "b71e914e-9ad8-4dc5-b539-ac1f124c01ca",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Blank name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0dc0c7f-2310-48b1-874a-1f3f92ba48a8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "623e2879-db32-446b-a4cc-e37051a12db5",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6751a122-b226-4286-92b9-2fb733ce3d18",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"\",\n  \"accountType\": \"Savings\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "ad4fd5ec-613f-4f09-8848-fbf7ae785888",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						},
						{
							"name": "Create Account - Blank account type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "650fcddb-0e6e-4ac3-a967-d81d60f4df00",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response body should Have validationMessages\", function () {\r",
											"    pm.response.to.have.jsonBody('validationMessages');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "abd0c52f-bc6f-4f6a-8f95-a0080d2312c9",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "a2a19b9e-96ee-47cc-92d9-223ec3f00502",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"Shopping\",\n  \"accountType\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/onboard/api/account"
							},
							"response": [
								{
									"id": "7fe9bf5d-96f0-405c-8f6b-f77f544b93f0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currencyCode\": \"USD\",\n  \"name\": \"<string>\",\n  \"accountType\": \"Savings\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"id\": \"<integer>\",\n    \"walletGroupId\": \"<integer>\",\n    \"customerId\": \"<integer>\",\n    \"availableBalance\": \"<double>\",\n    \"ledgerBalance\": \"<double>\",\n    \"walletRestrictionId\": \"<integer>\",\n    \"walletClassificationId\": \"<integer>\",\n    \"currencyId\": \"<integer>\",\n    \"isInternal\": \"<boolean>\",\n    \"isDefault\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"overdraft\": \"<double>\",\n    \"accountNumber\": \"<string>\"\n  },\n  \"resultType\": \"ValidationError\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "53894d39-b7ea-4a57-ba20-a46e0887b5a5"
				},
				{
					"name": "Get account",
					"item": [
						{
							"name": "Get Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c45fc11-6e42-458f-aa72-74e186930f04",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.environment.set(\"bus_account\", jsonData.result.profiles[0].accounts[0].accountNumber);\r",
											"pm.environment.set(\"sourceAccount\", jsonData.result.profiles[0].accounts[0].accountNumber);\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is true\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is Success\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"message is Success\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Success');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is true\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1ab0e7c7-bb2b-47a1-a10c-fc61b76e3c03",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1acaba8a-a170-438d-a0ef-3b7500d0d0ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/onboard/api/user/"
							},
							"response": [
								{
									"id": "b20fcd05-8384-4aff-ab79-d039bf95b801",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/account?accountNumber=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"account"
											],
											"query": [
												{
													"key": "accountNumber",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"userName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"accountType\": \"<string>\",\n    \"currencyCode\": \"<string>\",\n    \"cardLimit\": \"<double>\",\n    \"customerId\": \"<integer>\",\n    \"businessId\": \"<integer>\",\n    \"customer\": {\n      \"id\": \"<integer>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"email\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"referralCode\": \"<string>\",\n      \"financialId\": \"<string>\",\n      \"financialIdType\": \"BVN\",\n      \"profileImage\": \"<string>\",\n      \"gender\": \"<string>\",\n      \"previousNames\": \"<string>\",\n      \"meansOfId\": \"DriversLicense\",\n      \"dateOfBirth\": \"<string>\",\n      \"idNumber\": \"<string>\",\n      \"securityQuestion1\": \"<string>\",\n      \"securityAnswer1\": \"<string>\",\n      \"securityQuestion2\": \"<string>\",\n      \"securityAnswer2\": \"<string>\",\n      \"phoneNumberVerfiedAt\": \"<dateTime>\",\n      \"emailVeriedAt\": \"<dateTime>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"useKYCLevelLimit\": \"<boolean>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"income\": \"<double>\",\n      \"idFile\": \"<string>\",\n      \"proofOfAddressFile\": \"<string>\",\n      \"bankStatementFile\": \"<string>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level1Pending\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"active\": \"<boolean>\",\n      \"status\": \"Email_Verification_Pending\",\n      \"accounts\": [\n        {\n          \"id\": \"<integer>\",\n          \"userName\": \"<string>\",\n          \"accountNumber\": \"<string>\",\n          \"accountType\": \"<string>\",\n          \"currencyCode\": \"<string>\",\n          \"cardLimit\": \"<double>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"email\": \"<string>\",\n            \"rcBnNumber\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"tin\": \"<string>\",\n            \"hasDirectors\": \"<boolean>\",\n            \"hasShareHolders\": \"<boolean>\",\n            \"hasBenficialOwners\": \"<boolean>\",\n            \"natureOfBusiness\": \"<string>\",\n            \"sourceOfRevenue\": \"<string>\",\n            \"sourceOfCapital\": \"<string>\",\n            \"taxCompliance\": \"<boolean>\",\n            \"evidenceOfCorporateGovernance\": \"<boolean>\",\n            \"dailyDeposit\": \"<double>\",\n            \"dailyTransfer\": \"<double>\",\n            \"lifetimeDeposit\": \"<double>\",\n            \"limitTransfer\": \"<double>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"status\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"customerNumber\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Level2Approved\",\n            \"kycApprovedBy\": \"<string>\",\n            \"kycApprovedDate\": \"<dateTime>\",\n            \"blackListed\": \"<boolean>\",\n            \"accounts\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              }\n            ],\n            \"customerRelationships\": [\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"stakeholders\": [\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"userBusinesses\": [\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              },\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              }\n            ],\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"userName\": \"<string>\",\n          \"accountNumber\": \"<string>\",\n          \"accountType\": \"<string>\",\n          \"currencyCode\": \"<string>\",\n          \"cardLimit\": \"<double>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"id\": \"<integer>\",\n            \"name\": \"<string>\",\n            \"email\": \"<string>\",\n            \"rcBnNumber\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCountryCode\": \"<string>\",\n            \"tin\": \"<string>\",\n            \"hasDirectors\": \"<boolean>\",\n            \"hasShareHolders\": \"<boolean>\",\n            \"hasBenficialOwners\": \"<boolean>\",\n            \"natureOfBusiness\": \"<string>\",\n            \"sourceOfRevenue\": \"<string>\",\n            \"sourceOfCapital\": \"<string>\",\n            \"taxCompliance\": \"<boolean>\",\n            \"evidenceOfCorporateGovernance\": \"<boolean>\",\n            \"dailyDeposit\": \"<double>\",\n            \"dailyTransfer\": \"<double>\",\n            \"lifetimeDeposit\": \"<double>\",\n            \"limitTransfer\": \"<double>\",\n            \"streetAddress1\": \"<string>\",\n            \"streetAddress2\": \"<string>\",\n            \"stateProvince\": \"<string>\",\n            \"city\": \"<string>\",\n            \"nearestLandmark\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"countryCode\": \"<string>\",\n            \"status\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"customerNumber\": \"<string>\",\n            \"kycLevel\": \"<string>\",\n            \"kycStatus\": \"Level3Approved\",\n            \"kycApprovedBy\": \"<string>\",\n            \"kycApprovedDate\": \"<dateTime>\",\n            \"blackListed\": \"<boolean>\",\n            \"accounts\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n              }\n            ],\n            \"customerRelationships\": [\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"customerId\": \"<integer>\",\n                \"customer\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"stakeholders\": [\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"rcBnNumber\": \"<string>\",\n                \"firstName\": \"<string>\",\n                \"lastName\": \"<string>\",\n                \"email\": \"<string>\",\n                \"phoneNumber\": \"<string>\",\n                \"phoneNumberCountryCode\": \"<string>\",\n                \"countryCode\": \"<string>\",\n                \"financialId\": \"<string>\",\n                \"financialIdType\": \"<string>\",\n                \"stateProvince\": \"<string>\",\n                \"city\": \"<string>\",\n                \"streetAddress1\": \"<string>\",\n                \"streetAddress2\": \"<string>\",\n                \"nearestLandmark\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"profileImage\": \"<string>\",\n                \"gender\": \"<string>\",\n                \"stakeholderType\": \"<string>\",\n                \"ownerhipPercentage\": \"<float>\",\n                \"phoneNumberVerfiedAt\": \"<dateTime>\",\n                \"emailVeriedAt\": \"<dateTime>\",\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                },\n                \"dateCreated\": \"<dateTime>\",\n                \"lastUpdatedOn\": \"<dateTime>\",\n                \"createdBy\": \"<string>\",\n                \"lastUpdatedBy\": \"<string>\"\n              }\n            ],\n            \"userBusinesses\": [\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              },\n              {\n                \"id\": \"<long>\",\n                \"userId\": \"<string>\",\n                \"user\": {\n                  \"userId\": \"<string>\",\n                  \"userName\": \"<string>\",\n                  \"firstName\": \"<string>\",\n                  \"lastName\": \"<string>\",\n                  \"phoneNumber\": \"<string>\",\n                  \"phoneNumberCode\": \"<string>\",\n                  \"referralCode\": \"<string>\",\n                  \"profileImage\": \"<string>\",\n                  \"phoneNumberVerifiedAt\": \"<dateTime>\",\n                  \"emailVerifiedAt\": \"<dateTime>\",\n                  \"dateOfBirth\": \"<dateTime>\",\n                  \"hasTransactionPin\": \"<boolean>\",\n                  \"primaryProfile\": \"<string>\",\n                  \"gender\": \"<string>\",\n                  \"active\": \"<boolean>\",\n                  \"blacklisted\": \"<boolean>\",\n                  \"customerId\": \"<integer>\",\n                  \"customer\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n                  },\n                  \"userBusinesses\": [\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    },\n                    {\n                      \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n                    }\n                  ],\n                  \"createdBy\": \"<string>\",\n                  \"dateCreated\": \"<dateTime>\",\n                  \"updatedBy\": \"<string>\",\n                  \"lastUpdateDate\": \"<dateTime>\"\n                },\n                \"businessId\": \"<integer>\",\n                \"business\": {\n                  \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n                }\n              }\n            ],\n            \"dateCreated\": \"<dateTime>\",\n            \"lastUpdatedOn\": \"<dateTime>\",\n            \"createdBy\": \"<string>\",\n            \"lastUpdatedBy\": \"<string>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"businessRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userId\": \"<string>\",\n      \"stateOfOrigin\": \"<string>\",\n      \"lgaOfOrigin\": \"<string>\",\n      \"nationality\": \"<string>\",\n      \"livenesssPhoto\": \"<string>\",\n      \"photoOnMeansOfId\": \"<string>\",\n      \"photoOnBVN\": \"<string>\",\n      \"bvnLinkedNin\": \"<string>\",\n      \"blacklisted\": \"<boolean>\",\n      \"user\": {\n        \"userId\": \"<string>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"phoneNumber\": \"<string>\",\n        \"phoneNumberCode\": \"<string>\",\n        \"referralCode\": \"<string>\",\n        \"profileImage\": \"<string>\",\n        \"phoneNumberVerifiedAt\": \"<dateTime>\",\n        \"emailVerifiedAt\": \"<dateTime>\",\n        \"dateOfBirth\": \"<dateTime>\",\n        \"hasTransactionPin\": \"<boolean>\",\n        \"primaryProfile\": \"<string>\",\n        \"gender\": \"<string>\",\n        \"active\": \"<boolean>\",\n        \"blacklisted\": \"<boolean>\",\n        \"customerId\": \"<integer>\",\n        \"customer\": {\n          \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n        },\n        \"userBusinesses\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n          }\n        ],\n        \"createdBy\": \"<string>\",\n        \"dateCreated\": \"<dateTime>\",\n        \"updatedBy\": \"<string>\",\n        \"lastUpdateDate\": \"<dateTime>\"\n      },\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    },\n    \"business\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"rcBnNumber\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"phoneNumberCountryCode\": \"<string>\",\n      \"tin\": \"<string>\",\n      \"hasDirectors\": \"<boolean>\",\n      \"hasShareHolders\": \"<boolean>\",\n      \"hasBenficialOwners\": \"<boolean>\",\n      \"natureOfBusiness\": \"<string>\",\n      \"sourceOfRevenue\": \"<string>\",\n      \"sourceOfCapital\": \"<string>\",\n      \"taxCompliance\": \"<boolean>\",\n      \"evidenceOfCorporateGovernance\": \"<boolean>\",\n      \"dailyDeposit\": \"<double>\",\n      \"dailyTransfer\": \"<double>\",\n      \"lifetimeDeposit\": \"<double>\",\n      \"limitTransfer\": \"<double>\",\n      \"streetAddress1\": \"<string>\",\n      \"streetAddress2\": \"<string>\",\n      \"stateProvince\": \"<string>\",\n      \"city\": \"<string>\",\n      \"nearestLandmark\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"countryCode\": \"<string>\",\n      \"status\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"customerNumber\": \"<string>\",\n      \"kycLevel\": \"<string>\",\n      \"kycStatus\": \"Level3Pending\",\n      \"kycApprovedBy\": \"<string>\",\n      \"kycApprovedDate\": \"<dateTime>\",\n      \"blackListed\": \"<boolean>\",\n      \"accounts\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Account detected>\"\n        }\n      ],\n      \"customerRelationships\": [\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"customerId\": \"<integer>\",\n          \"customer\": {\n            \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"stakeholders\": [\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"<string>\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"<string>\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerfiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"rcBnNumber\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"email\": \"<string>\",\n          \"phoneNumber\": \"<string>\",\n          \"phoneNumberCountryCode\": \"<string>\",\n          \"countryCode\": \"<string>\",\n          \"financialId\": \"<string>\",\n          \"financialIdType\": \"<string>\",\n          \"stateProvince\": \"<string>\",\n          \"city\": \"<string>\",\n          \"streetAddress1\": \"<string>\",\n          \"streetAddress2\": \"<string>\",\n          \"nearestLandmark\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"profileImage\": \"<string>\",\n          \"gender\": \"<string>\",\n          \"stakeholderType\": \"<string>\",\n          \"ownerhipPercentage\": \"<float>\",\n          \"phoneNumberVerfiedAt\": \"<dateTime>\",\n          \"emailVeriedAt\": \"<dateTime>\",\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          },\n          \"dateCreated\": \"<dateTime>\",\n          \"lastUpdatedOn\": \"<dateTime>\",\n          \"createdBy\": \"<string>\",\n          \"lastUpdatedBy\": \"<string>\"\n        }\n      ],\n      \"userBusinesses\": [\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        },\n        {\n          \"id\": \"<long>\",\n          \"userId\": \"<string>\",\n          \"user\": {\n            \"userId\": \"<string>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"phoneNumber\": \"<string>\",\n            \"phoneNumberCode\": \"<string>\",\n            \"referralCode\": \"<string>\",\n            \"profileImage\": \"<string>\",\n            \"phoneNumberVerifiedAt\": \"<dateTime>\",\n            \"emailVerifiedAt\": \"<dateTime>\",\n            \"dateOfBirth\": \"<dateTime>\",\n            \"hasTransactionPin\": \"<boolean>\",\n            \"primaryProfile\": \"<string>\",\n            \"gender\": \"<string>\",\n            \"active\": \"<boolean>\",\n            \"blacklisted\": \"<boolean>\",\n            \"customerId\": \"<integer>\",\n            \"customer\": {\n              \"value\": \"<Circular reference to #/components/schemas/Customer detected>\"\n            },\n            \"userBusinesses\": [\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              },\n              {\n                \"value\": \"<Circular reference to #/components/schemas/UserBusiness detected>\"\n              }\n            ],\n            \"createdBy\": \"<string>\",\n            \"dateCreated\": \"<dateTime>\",\n            \"updatedBy\": \"<string>\",\n            \"lastUpdateDate\": \"<dateTime>\"\n          },\n          \"businessId\": \"<integer>\",\n          \"business\": {\n            \"value\": \"<Circular reference to #/components/schemas/Business detected>\"\n          }\n        }\n      ],\n      \"dateCreated\": \"<dateTime>\",\n      \"lastUpdatedOn\": \"<dateTime>\",\n      \"createdBy\": \"<string>\",\n      \"lastUpdatedBy\": \"<string>\"\n    }\n  },\n  \"resultType\": \"Error\",\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\"\n}"
								}
							]
						}
					],
					"id": "267ffbbb-0b95-4de5-a7b0-1e5589192fd9"
				}
			],
			"id": "56c04efe-cf25-457d-8192-ec4229c3cf74",
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{business_access_token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "af248806-99e1-4d9f-ad52-b7ab6cc2c66d",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f5660594-b2e4-4c03-8cba-23bba2186903",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Bill Payment",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is present in the response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is a non-empty string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"business_access_token\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9be51361-21e6-4b7a-9332-f554a8262cb4",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "2b53642a-49a6-4883-8f50-5fc3c65b6082",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
											"key": "username",
											"value": "mary+babe@assurdly.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Assurdly01!"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "3ea0f4b9-c329-4e23-b05b-27ca1529cf29",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "67908f6e-6297-478b-be2e-ab42fd1faa81"
				},
				{
					"name": "Buy Data",
					"item": [
						{
							"name": "Successful Data Purchase",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "12040e9b-2d1f-4d26-9f97-743c6d27603a",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2500\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0688d75f-2490-401c-87b9-734d79858238",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e1967a78-a926-4479-b430-007a80a40bff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"112\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "e1c79f0c-2c25-4d22-b31e-f6b97c96ade0",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful Data Purchase Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "12040e9b-2d1f-4d26-9f97-743c6d27603a",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2500\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0688d75f-2490-401c-87b9-734d79858238",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1ddea99d-6f53-4e3e-8001-aea26115c076",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"112\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "f38d9b11-f2c6-4e31-8f3b-7a2f95972e99",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2500\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6380\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1dbc1a7c-f029-4eb2-8bc7-5da93796cf32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6380\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "7030b3b5-2962-4935-be4a-1655c795b916",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate Transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Duplicate Transaction with ref buydata1335\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1013);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says duplicate transadtion\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Duplicate Transaction with ref buydata1335\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "04d618e0-a540-4509-a505-cf9e7a1455d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"112\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "7b80291e-1cff-4e1a-8983-df9ea09b8971",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Wrong bundle amount (Less than)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message Invalid amount paid. Amount passed is lesser than the bill package amount\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Fixed package amount: Invalid amount paid. Amount passed is lesser than the bill package amount\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2499\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "5bccf0e6-5640-4bf5-b01c-ecaab2339d2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2499\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "6fe8d744-cb14-42bb-a2ae-92be9183fd6c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Wrong bundle amount (More than)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Amount must be 2500\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BX0003\");\r",
											"});\r",
											"\r",
											"// pm.test(\"Error message Invalid amount paid. Amount passed is lesser than the bill package amount\", function () {\r",
											"//     var validationMessages = pm.response.json().validationMessages;\r",
											"//     pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Fixed package amount: Invalid amount paid. Amount passed is lesser than the bill package amount\");\r",
											"// });\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2600\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"08185597979\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8d498cca-6950-4e90-941a-b21d7ec39108",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2550\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"112\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "a861b808-363a-4372-b894-fa69677b6fdc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Phone number can only be digits with a length of 11 \", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Phone number can only be digits with a length of 11\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"\r",
											"//   \"amount\": \"2500\",\r",
											"//   \"billId\": \"9\",\r",
											"//   \"channel\": \"1\",\r",
											"//   \"clientRequestId\": randomClientId,\r",
											"//   \"packageId\": \"47\",\r",
											"//   \"phoneNumber\": \"0818559797i\",\r",
											"//   \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//   \"transactionPin\": \"6383\",\r",
											"//   \"narration\": \"Buy data bundle\",\r",
											"//   \"saveBeneficiary\": \"True\",\r",
											"//   \"deviceId\": \"pixel phone\",\r",
											"//   \"beneficiaryName\": \"Bryan Ek\",\r",
											"//   \"beneficiaryPhone\": \"08185597979\",\r",
											"//   \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "aa5bd718-bd67-46b9-8a73-f236aced4d12",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "e3ee540f-e55b-4557-93ed-76d93bdc1468",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid beneficiary phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "542ad0a1-db8e-499a-aa24-5850592b538f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Phone number can only be digits with a length of 11 \", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Phone number can only be digits with a length of 11\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "33345de5-c219-44c8-a743-a18743d736c5",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"\r",
											"  \"amount\": \"2500\",\r",
											"  \"billId\": \"9\",\r",
											"  \"channel\": \"1\",\r",
											"  \"clientRequestId\": randomClientId,\r",
											"  \"packageId\": \"47\",\r",
											"  \"phoneNumber\": \"0818559797i\",\r",
											"  \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"  \"transactionPin\": \"6383\",\r",
											"  \"narration\": \"Buy data bundle\",\r",
											"  \"saveBeneficiary\": \"True\",\r",
											"  \"deviceId\": \"pixel phone\",\r",
											"  \"beneficiaryName\": \"Bryan Ek\",\r",
											"  \"beneficiaryPhone\": \"08185597979\",\r",
											"  \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "233afece-c45e-4f47-80af-c6d4b8c3c969",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"2500\",\n  \"billId\": \"9\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buydata1335\",\n  \"packageId\": \"47\",\n  \"phoneNumber\": \"08185597979\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy data bundle\",\n  \"saveBeneficiary\": \"True\",\n  \"deviceId\": \"pixel phone\",\n  \"beneficiaryName\": \"Bryan Ek\",\n  \"beneficiaryPhone\": \"08185\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/bills-payment/api/v1/BillsPayment/data"
							},
							"response": [
								{
									"id": "47ebe040-5d16-48dd-8482-91e7c918bb0b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"phoneNumber\": \"83027014417\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"5206\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "55682695-8156-4ee2-8a32-483782538de1",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{business_access_token}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2228bfc7-d93e-409f-96bf-c43c5c0f962c",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7100fa27-f2d5-444e-bed6-0ad4828f11f7",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Buy Electricity tokens",
					"item": [
						{
							"name": "Successful prepaid token purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Check if billToken is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    // Check if the \"billToken\" field exists in the response\r",
											"    pm.expect(responseBody.result.billToken).to.not.be.undefined;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"The 'reference' field is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.be.a('string').and.to.have.lengthOf.at.least(1, \"'reference' field should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"123456695049\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "53106b34-fce9-4103-b4f8-212a91b3f718",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"25\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"99\",\n  \"sourceAccountNumber\": {{sourceAccount}},\n  \"transactionPin\": \"6543\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "1b7e8da6-0bf5-43c2-bc54-da4851b5a83b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful prepaid token purchase with negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('Kindly specify an amount greater than 0');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"123456695049\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "633f49e7-1627-4a52-90ec-0928e784ab86",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": {{sourceAccount}},\n  \"transactionPin\": \"6543\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "5a88bf80-31bc-4f38-80ed-3d50aea87041",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful post paid purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Check if billToken is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    // Check if the \"billToken\" field exists in the response\r",
											"    pm.expect(responseBody.result.billToken).to.not.be.undefined;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"The 'reference' field is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.be.a('string').and.to.have.lengthOf.at.least(1, \"'reference' field should not be empty\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"1000\",\r",
											"    \"billId\": \"28\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"meterNumber\": \"123456695049\",\r",
											"    \"packageId\": \"105\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"buy elec\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"meter1\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "cf529bfa-7098-48e4-89e7-ed33c07a9965",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "087d915d-2758-4e69-b83b-510f2724ac0b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"123456695049\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6385\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "994ff77b-50c4-4aeb-9fcf-ae04c129cc83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6303\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "d9be5075-0298-4f57-9abf-7c86f80b096a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Blank meter number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says The MeterNumber field is required\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"The MeterNumber field is required.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4cebcc09-b6bf-4019-92a3-7f56337a5041",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "a11a6acc-1952-4d77-96af-7ed0f61c141d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid meter number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says The MeterNumber field is required\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"The MeterNumber field is required.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											"// Generate a random string function\r",
											"// function generateRandomString(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"1000\",\r",
											"//     \"billId\": \"28\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"meterNumber\": \"\",\r",
											"//     \"packageId\": \"104\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"buy elec\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"meter1\",\r",
											"//     \"beneficiaryName\": \"bryan\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a8997778-cfe7-4b13-b775-0300e0848ac2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"25\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"hffjsknyrhgfkfk\",\n  \"meterNumber\": \"s@.dfgre\",\n  \"packageId\": \"99\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "4cafa349-8d25-43b7-9296-5248cd27cebc",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb5574d-35ab-4f4a-82b9-a8df659fa474",
										"exec": [
											"pm.test(\"Response code is 200 \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// pm.test(\"Response structure and properties for 400\", function () {\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"message\", \"Duplicate Transaction with ref buyelect\");\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1013);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"// });\r",
											"\r",
											"// pm.test(\"Error message says duplicate transadtion\", function () {\r",
											"//     pm.expect(pm.response.json().message).to.equal(\"Duplicate Transaction with ref buyelect\");\r",
											"// });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14ce85cb-41ed-4f0f-8a8f-7fde563c4ec5",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "03ca33fc-a483-4539-9a0e-bb3916c765fa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"1000\",\n  \"billId\": \"28\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buyelect\",\n  \"meterNumber\": \"123456695049\",\n  \"packageId\": \"104\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"buy elec\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"meter1\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/electricity"
							},
							"response": [
								{
									"id": "29edcaa0-e78e-49aa-896a-3c9f3d3f8b9c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"meterNumber\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"0878\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/electricity"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "36a8911b-ebd5-468a-8384-22c845e30ca6",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{business_access_token}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1df7d8f7-a482-4ee3-ab3c-510c99aa42be",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5480d17a-0692-4cbc-87c1-18506f1a4514",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Buy Cable package",
					"item": [
						{
							"name": "Successful cable bundle purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Cable TV Subscription successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Cable TV Subscription successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"// const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"// const requestBody = {\r",
											"//     \"amount\": \"7200\",\r",
											"//     \"billId\": \"6\",\r",
											"//     \"channel\": \"1\",\r",
											"//     \"clientRequestId\": randomClientId,\r",
											"//     \"decoder\": \"123445678890\",\r",
											"//     \"packageId\": \"1\",\r",
											"//     \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"//     \"transactionPin\": \"6383\",\r",
											"//     \"narration\": \"Buy Cable bundle\",\r",
											"//     \"saveBeneficiary\": \"false\",\r",
											"//     \"deviceId\": \"xphone\",\r",
											"//     \"beneficiaryName\": \"Paul\",\r",
											"//     \"beneficiaryPhone\": \"08185597979\",\r",
											"//     \"beneficiaryEmail\": \"12345\"\r",
											"// };\r",
											"\r",
											"//pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "f90912ad-9fb8-43ef-a0ea-85cb58c84129",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"13\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"72\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "3c70897f-ff2d-462c-afd8-515b1d5fc4d2",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"7200\",\r",
											"    \"billId\": \"6\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"decoder\": \"123445678890\",\r",
											"    \"packageId\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6389\",\r",
											"    \"narration\": \"Buy Cable bundle\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"xphone\",\r",
											"    \"beneficiaryName\": \"Paul\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"12345\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "58467322-4fb4-48b2-9d0a-55ee5cf7bf45",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "91a99d1f-11f6-4e71-8c9f-444ebac55907",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"  //  pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is returned\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1d533504-7041-4bef-86aa-26b21d73bff9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"buycable\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"72\", \n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "ed9df329-0526-4a5e-84fe-0ed6757dcc01",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "No decoder number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says decoder field is required\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"The Decoder field is required.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"7200\",\r",
											"    \"billId\": \"6\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"decoder\": \"\",\r",
											"    \"packageId\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6389\",\r",
											"    \"narration\": \"Buy Cable bundle\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"xphone\",\r",
											"    \"beneficiaryName\": \"Paul\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"12345\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "55fa8ac4-f162-4c84-b0d0-dd615da2755d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "bd049783-fa49-491d-a380-660a28d90c8b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Wrong bundle amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message Invalid amount paid. Amount passed is lesser than the bill package amount\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Fixed package amount: Invalid amount paid. Amount passed is lesser than the bill package amount\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"720\",\r",
											"    \"billId\": \"6\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"decoder\": \"123445678890\",\r",
											"    \"packageId\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6389\",\r",
											"    \"narration\": \"Buy Cable bundle\",\r",
											"    \"saveBeneficiary\": \"false\",\r",
											"    \"deviceId\": \"xphone\",\r",
											"    \"beneficiaryName\": \"Paul\",\r",
											"    \"beneficiaryPhone\": \"08185597979\",\r",
											"    \"beneficiaryEmail\": \"12345\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ca206d89-219e-4a22-acaf-c99e20486a08",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"7200\",\n  \"billId\": \"6\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"payforcabletv123\",\n  \"decoder\": \"123445678890\",\n  \"packageId\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Buy Cable bundle\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaryName\": \"Paul\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"12345\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/cable-tv"
							},
							"response": [
								{
									"id": "cf34384e-e31c-45ff-8682-8e8faa4accd6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "30cbe559-7c29-4421-b75d-40089ae1b703",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{business_access_token}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a278e55d-4d98-4ce7-8c4d-6873939ba5e0",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "697a77e0-674d-4616-9658-030792ccfd08",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Buy Educational content",
					"item": [
						{
							"name": "Successful epin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36f5a182-cdf3-4d56-b57e-b6ff59f446f9",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"   // pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											" //   pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"  //  pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8532034d-4a8b-4814-8334-5d816e6abecb",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "66f668ed-bed2-4759-8ac2-23e34f315210",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "// \n\n\n\n{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Pay Epin\",\n  \"channel\": \"3\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"1284903\",\n  \"beneficiaryName\": \"Jamb\",\n  \"beneficiaryPhone\": \"08185597979\",\n  \"beneficiaryEmail\": \"test8033@mailinator.com\",\n  \"billId\": \"30\",\n  \"packageId\": \"109\",\n  \"amount\": \"4700\",\n  \"numberOfPins\": \"1\",\n  \"phone\" : \"07035361770\",\n  \"accountNumber\": \"1111111111\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/education-pins"
							},
							"response": [
								{
									"id": "92503451-99fe-443f-9044-566baf61580d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"decoder\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"6701\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/cable-tv"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "084f325f-6751-4d1e-a15d-88faca4af994",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{business_access_token}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3d2ae364-eb6f-4dc4-babc-cd83062f33cc",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "75001a20-a1cb-4029-b248-e768e5235834",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Schedule bill",
					"item": [],
					"id": "29dac410-abda-4c3f-bf1c-f079d66f93ce",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{business_access_token}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e432b070-6bbc-4411-aeca-f25016b0091e",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e7b2adcb-0a2a-4c71-b118-1da7d5fcc79c",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Bet Funding",
					"item": [
						{
							"name": "Successful Bet Account Funding",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ce439637-2185-4412-92d6-81a142216978",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a24488f2-3c03-48b1-8eb2-1325bcf7bbc5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010001719\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"10\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "ca393e78-64dc-46d7-9890-ccad40f5652a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Bet Account Funding with negative amount",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c4d12c9e-9646-4534-9500-feadc0883f5f",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2e328aa1-8f5f-48e3-8bf0-7d365a841db1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"-100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "a0cb7c17-1194-4fe6-ae3a-0ccea2a15c60",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6385\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "80c6e65b-b180-4216-9157-3d2604167548",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d15b9a2a-5fc3-4af0-9657-0821abe114fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "7ddd6130-1ea1-468f-9b7e-514ea656b3ed",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Amount (-Negative Value)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"-500\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "907721f5-f36f-407b-b310-4e2303a48b96",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Kindly specify an amount greater than 0\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Kindly specify an amount greater than 0\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b8091a13-05d5-4db8-a4a1-7fe7144074bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "6a427256-63e6-49c7-99dc-484c9c9c34b4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account Number",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20049788-10fe-493a-9043-005005bc10df",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"payment\",\r",
											"    \"channel\": \"1\",\r",
											"    \"sourceAccountNumber\": \"1010000rhh\",\r",
											"    \"saveBeneficiary\": true,\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"deviceId\": \"iphone\",\r",
											"    \"beneficiaryName\": \"bryan\",\r",
											"    \"beneficiaryPhone\": \"0815597979\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly.com\",\r",
											"    \"packageId\": \"107\",\r",
											"    \"billId\": \"29\",\r",
											"    \"amount\": \"100\",\r",
											"    \"beneficiary\": \"bryan\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "79a55630-1d68-442c-9354-4f0174cf39a6",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Source Account: Account does not exist\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\",  \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Source Account: Account does not exist\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2b1d303b-a539-4635-a362-ec252185ca58",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transactionPin\": \"6383\",\n  \"narration\": \"payment\",\n  \"channel\": \"1\",\n  \"sourceAccountNumber\": \"101000171b\",\n  \"saveBeneficiary\": true,\n  \"clientRequestId\": \"fundbet\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaryName\": \"bryan\",\n  \"beneficiaryPhone\": \"0815597979\",\n  \"beneficiaryEmail\": \"bryan@assurdly.com\",\n  \"packageId\": \"107\",\n  \"billId\": \"29\",\n  \"amount\": \"100\",\n  \"beneficiary\": \"bryan\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment"
							},
							"response": [
								{
									"id": "4b802307-b748-45fc-ab16-a892b0612b4b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiary\": \"<string>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"1620\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\",\n  \"packageId\": \"<integer>\",\n  \"amount\": \"<double>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "68ca4fe5-ee3f-411c-9728-e2091bc2a90a",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{business_access_token}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5ffdfc06-b4cd-4c05-a7f8-2ccacf58a66d",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ae927d54-6843-45bd-8225-b2e1a2faf2be",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Buy Airtime",
					"item": [
						{
							"name": "Successful Airtime purchase with valid payload",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code is 200 for success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'amount' field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result.amount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    \r",
											"    pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"    pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"    pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Check if transaction reference is present\", function () {\r",
											"    var responseBody = pm.response.json();\r",
											"    pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"07062765437\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "982111ff-7946-47e1-90b6-4ec2c62c5fef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"anyportrrrr\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "42a7d2bd-b291-47f7-a29a-a6cbdce2458e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Airtime purchase with negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"\r",
											"// pm.test(\"The 'amount' field should be a number\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"//     pm.expect(responseData).to.be.an('object');\r",
											"//     pm.expect(responseData.result.amount).to.be.a('number');\r",
											"// });\r",
											"\r",
											"// pm.test(\"Response structure and properties for 200\", function () {\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"message\", \"Successful\");\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"200\");\r",
											"// });\r",
											"\r",
											"// pm.test(\"Result object properties for 200\", function () {\r",
											"//     var result = pm.response.json().result;\r",
											"    \r",
											"//     pm.expect(result).to.have.property(\"message\", \"Successful\");\r",
											"//     pm.expect(result).to.have.property(\"status\", \"Success\");\r",
											"//     pm.expect(result).to.have.property(\"billToken\").to.be.null;\r",
											"// });\r",
											"\r",
											"\r",
											"// pm.test(\"Check if transaction reference is present\", function () {\r",
											"//     var responseBody = pm.response.json();\r",
											"//     pm.expect(responseBody.result.reference).to.not.be.undefined;\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"07062765437\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6383\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b60244d4-e42a-4103-b2bb-f6cf4e502c77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"anyportrrrr\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "af322322-4b18-4840-85b5-a0603dd9b67c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid pin input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Invalid Transaction PIN\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1003);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01002\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message says Invalid Transaction PIN\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"07062765437\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6381\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "76d23d00-7c69-46ea-956d-37c178c82ec2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"anyportrrrr\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6381\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "4f766e65-8c9f-4685-98cf-9ac50fa6ff89",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Duplicate Transaction Message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response code is 200 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// pm.test(\"Response structure and properties for 400\", function () {\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"message\", \"Duplicate Transaction with ref idnumber\");\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"errorCode\", 1013);\r",
											"//     pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78BP01012\");\r",
											"// });\r",
											"\r",
											"// pm.test(\"Error message says duplicate transadtion\", function () {\r",
											"//     pm.expect(pm.response.json().message).to.equal(\"Duplicate Transaction with ref idnumber\");\r",
											"// });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e4820e8e-8ddf-49ec-8520-d121cb42c1f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"idnumber\",\n  \"phoneNumber\": \"07062765437\",\n  \"sourceAccountNumber\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"29847059374\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "93eeb477-3908-4173-8f07-c99ebb15f342",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e6f901d-e320-45d2-8d6b-1dd4ae245c7f",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message says Phone number can only be digits with a length of 11 \", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Phone number can only be digits with a length of 11\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3924026c-bc6d-4756-9006-cced1c5628d1",
										"exec": [
											"// Generate a random string function\r",
											"function generateRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Update the requestBody with a random clientRequestId\r",
											"const randomClientId = generateRandomString(10); // Change 10 to the desired length\r",
											"const requestBody = {\r",
											"    \"amount\": \"100\",\r",
											"    \"billId\": \"1\",\r",
											"    \"channel\": \"1\",\r",
											"    \"clientRequestId\": randomClientId,\r",
											"    \"phoneNumber\": \"0706276543p\",\r",
											"    \"sourceAccountNumber\": \"{{sourceAccount}}\",\r",
											"    \"transactionPin\": \"6381\",\r",
											"    \"narration\": \"Buy the airtime\",\r",
											"    \"saveBeneficiary\": \"true\",\r",
											"    \"deviceId\": \"postman\",\r",
											"    \"beneficiaryName\": \"Bryan\",\r",
											"    \"beneficiaryPhone\": \"29847059374\",\r",
											"    \"beneficiaryEmail\": \"bryan@assurdly\"\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b3c9468a-c31a-4554-8929-566d8cae4a61",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"billId\": \"1\",\n  \"channel\": \"1\",\n  \"clientRequestId\": \"idnumber12345\",\n  \"phoneNumber\": \"0706276543p\",\n  \"sourceAccountNumber\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Buy the airtime\",\n  \"saveBeneficiary\": \"true\",\n  \"deviceId\": \"postman\",\n  \"beneficiaryName\": \"Bryan\",\n  \"beneficiaryPhone\": \"07062765437\",\n  \"beneficiaryEmail\": \"bryan@assurdly\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrlb}}/api/v1/BillsPayment/airtime"
							},
							"response": [
								{
									"id": "dbbb4775-4427-4d37-9a73-79c134f01b54",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"billId\": \"<integer>\",\n  \"channel\": null,\n  \"clientRequestId\": \"<string>\",\n  \"phoneNumber\": \"29847059374\",\n  \"sourceAccountId\": \"<long>\",\n  \"transactionPin\": \"4769\",\n  \"narration\": \"<string>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaryName\": \"<string>\",\n  \"beneficiaryPhone\": \"<string>\",\n  \"beneficiaryEmail\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/BillsPayment/airtime"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"beneficiary\": \"<string>\",\n    \"message\": \"<string>\",\n    \"status\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\",\n    \"beneficiaryName\": \"<string>\",\n    \"billToken\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "d16db1c0-6bca-415b-aa4a-e09b3ec35d85",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{business_access_token}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a1b40813-90e9-408e-95a4-ed5227b62957",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "16177fa7-55c8-4754-9c2b-9edb1adaee42",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"id": "8f5cbba7-40db-4555-9f24-38fc9f6bce92"
		},
		{
			"name": "Transfers",
			"item": [
				{
					"name": "Beneficiaries",
					"item": [
						{
							"name": "Add Beneficiary",
							"item": [
								{
									"name": "New Beneficiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5af92fd5-fc1d-4aa8-89fd-6af6725c1a82",
												"exec": [
													"// Verify that the response has a result object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object has the expected 'message' property\r",
													"pm.test(\"Result object has 'message' property with value 'Beneficiary successfully added'\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.have.property(\"message\", \"Beneficiary successfully added\");\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 1\r",
													"pm.test(\"Result type is 1 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(1);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is null\r",
													"pm.test(\"'message' property is null (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property is null\r",
													"pm.test(\"'validationMessages' property is null (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is true\r",
													"pm.test(\"'successful' property is true (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.true;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "87f3fe34-4336-44de-953b-a61339a92fe3",
												"exec": [
													"// Function to generate a random 10-digit accountNumber\r",
													"function generateRandomAccountNumber() {\r",
													"    return Math.floor(Math.random() * 9000000000) + 1000000000;\r",
													"}\r",
													"\r",
													"// Function to generate a random email address\r",
													"function generateRandomEmail() {\r",
													"    const emailDomain = \"example.com\"; // You can replace this with your desired domain\r",
													"    const randomString = Math.random().toString(36).substring(7);\r",
													"    return `random_${randomString}@${emailDomain}`;\r",
													"}\r",
													"\r",
													"// Function to generate random alphabetic characters\r",
													"function generateRandomAlphabets(length) {\r",
													"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
													"    let result = '';\r",
													"    for (let i = 0; i < length; i++) {\r",
													"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
													"        result += characters.charAt(randomIndex);\r",
													"    }\r",
													"    return result;\r",
													"}\r",
													"\r",
													"// Generate random values\r",
													"// const randomAccountNumber = generateRandomAccountNumber();\r",
													"// const randomEmail = generateRandomEmail();\r",
													"// const randomAlphabets = generateRandomAlphabets(10); // Generate 10 random alphabetic characters\r",
													"\r",
													"// // Update the requestBody with random values\r",
													"// const requestBody = {\r",
													"//     \"beneficiaryName\": randomAlphabets,\r",
													"//     \"bankName\": \"Providus\",\r",
													"//     \"accountName\": randomAlphabets,\r",
													"//     \"accountNumber\": randomAccountNumber.toString(), // Convert to string\r",
													"//     \"emailAddress\": randomEmail,\r",
													"//     \"countryCode\": \"+234\",\r",
													"//     \"address\": \"Lagos\",\r",
													"//     \"currencyRequirement\": {\r",
													"//         \"name\": \"NGN\",\r",
													"//         \"value\": \"100\",\r",
													"//         \"forms\": [\r",
													"//             {\r",
													"//                 \"dataLabel\": \"new beneficiary\",\r",
													"//                 \"dataValue\": \"Save\"\r",
													"//             }\r",
													"//         ]\r",
													"//     }\r",
													"// };\r",
													"\r",
													"// pm.request.body.raw = JSON.stringify(requestBody);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d9433015-3be3-4826-955a-8d2f735e0369",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "// \n\n{\n  \"beneficiaryName\": \"Udem Chi\",\n  \"bankName\": \"Bababdus\",\n  \"accountName\": \"Udeme Chi\",\n  \"accountNumber\": \"{{$randomBankAccount}}\",\n  \"emailAddress\": \"udeme@assurdly.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Lagos\",\n  \"bankRequirementId\": 1,\n  \"CurrencyCode\": \"NGN\",\n  \"BankRequirementValue\": \"110072\",\n  \"nameEnquiryId\": 1680,\n  \"bankId\": 335\n  \n    \n  }",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "577f42ea-927c-49ed-8a7e-737785364100",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Beneficiary Already Exists",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
												"exec": [
													"// Verify that the response has a 'result' object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object is null\r",
													"pm.test(\"'result' object is null (Expected)\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 2\r",
													"pm.test(\"Result type is 2 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(2);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is \"Beneficiary details already exists\"\r",
													"pm.test(\"'message' property is 'Beneficiary details already exists' (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.equal(\"Beneficiary details already exists\");\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property is null\r",
													"pm.test(\"'validationMessages' property is null (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"//\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5cfab3c3-61df-463e-a778-70b683020d4f",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c9d5d704-c9aa-499d-b399-4089a866ca7c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"Abdel Abdufa\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001422\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"CurrencyCode\": \"nil\",\n  \"BankRequirementValue\": \"nil\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "ab23b429-ec3f-44d2-84dc-ac71ac173baf",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid Account number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e16b8c02-e97e-4858-b62e-f9b976b5b9df",
												"exec": [
													"// Verify that the response has a 'validationMessages' array\r",
													"pm.test(\"Response has a 'validationMessages' array\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"validationMessages\").that.is.an(\"array\");\r",
													"});\r",
													"\r",
													"// Verify that the 'validationMessages' array contains the expected error message\r",
													"pm.test(\"Validation error message is 'Account Number can only contain digits' (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.include(\"Account Number can only contain digits\");\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'resultType' is 3\r",
													"pm.test(\"Result type is 3 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(3);\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "844f9c36-d914-46d2-9e7b-e2ea8a9c23a3",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "de42c14b-1d77-4e67-ab8d-4e97c84eeeb8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"Abdel Abdufa\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001fhj\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"CurrencyCode\": \"nil\",\n  \"BankRequirementValue\": \"nil\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "bbfe6283-895a-4c0b-9f9f-93723d2d0ce1",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid Beneficiary Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
												"exec": [
													"// Verify that the response has a 'result' object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object is null\r",
													"pm.test(\"'result' object is null (Expected)\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 3\r",
													"pm.test(\"Result type is 3 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(3);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is \"Response has validation errors\"\r",
													"pm.test(\"'message' property is 'Response has validation errors' (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.equal(\"Response has validation errors\");\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property contains \"Beneficiary Name can only contain alphabets\"\r",
													"pm.test(\"Validation error message is 'Beneficiary Name can only contain alphabets' (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.include(\"Beneficiary Name can only contain alphabets\");\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "16bfa9ac-4cd0-4b42-b398-fb8d4eab15a5",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "64576d4b-42b8-4cfd-bbb4-c74d4cc1f2c2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"Abdel123 Lover\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001422\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"CurrencyCode\": \"nil\",\n  \"BankRequirementValue\": \"nil\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "a61d3793-a75b-4805-9828-ed6dc82392e4",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Blank - Beneficiary name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
												"exec": [
													"// Verify that the response has a 'result' object\r",
													"pm.test(\"Response has a 'result' object\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    pm.expect(responseBody).to.have.property(\"result\");\r",
													"});\r",
													"\r",
													"// Verify that the 'result' object is null\r",
													"pm.test(\"'result' object is null (Expected)\", function () {\r",
													"    const result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.null;\r",
													"});\r",
													"\r",
													"// Verify that the 'resultType' is 3\r",
													"pm.test(\"Result type is 3 (Expected)\", function () {\r",
													"    const resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.equal(3);\r",
													"});\r",
													"\r",
													"// Verify that the 'message' property is \"Response has validation errors\"\r",
													"pm.test(\"'message' property is 'Response has validation errors' (Expected)\", function () {\r",
													"    const message = pm.response.json().message;\r",
													"    pm.expect(message).to.equal(\"Response has validation errors\");\r",
													"});\r",
													"\r",
													"// Verify that 'validationMessages' property contains \"Beneficiary Name can only contain alphabets\"\r",
													"pm.test(\"Validation error message is 'Beneficiary Name is required' (Expected)\", function () {\r",
													"    const validationMessages = pm.response.json().validationMessages;\r",
													"    pm.expect(validationMessages).to.include(\"Beneficiary Name is required\");\r",
													"});\r",
													"\r",
													"// Verify that 'successful' property is false\r",
													"pm.test(\"'successful' property is false (Expected)\", function () {\r",
													"    const successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.false;\r",
													"});\r",
													"\r",
													"// Verify that 'errorCode' property is 0\r",
													"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
													"    const errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.equal(0);\r",
													"});\r",
													"\r",
													"// Verify that 'responseCode' property is null\r",
													"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
													"    const responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a804bcb4-e00e-431b-bd1d-fe7b4d342cad",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "cffd3ceb-da90-4fdf-8bc2-7fc5943f4a49",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"beneficiaryName\": \"\",\n  \"bankName\": \"Providus\",\n  \"accountName\": \"Abdel Abdufa\",\n  \"accountNumber\": \"1010001422\",\n  \"emailAddress\": \"abdel@email.com\",\n  \"countryCode\": \"+234\",\n  \"address\": \"Abuja\",\n  \"CurrencyCode\": \"nil\",\n  \"BankRequirementValue\": \"nil\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"100\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Money\",\n        \"dataValue\": \"Save Money\"\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "296ecf7e-7100-48eb-8a7d-4eeeac591582",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e5ab889e-d1d1-48c5-8501-13f88ce9116d"
						},
						{
							"name": "Single Beneficiary",
							"item": [
								{
									"name": "Get Single beneficiary details",
									"id": "47a736ad-7e75-45b0-966e-260341225138",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries/22"
									},
									"response": [
										{
											"id": "fb2b9b37-6c05-47c5-897e-6f23451a4dc1",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/transfers/beneficiaries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"transfers",
														"beneficiaries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"accountName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"nameEnquiryId\": \"<integer>\",\n    \"accountId\": \"<long>\",\n    \"bankId\": \"<integer>\",\n    \"transferType\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "a92d8d5d-f536-415f-be77-062e335c21b9"
						},
						{
							"name": "List All Beneficiaries",
							"item": [
								{
									"name": "List all beneficiaries by page",
									"id": "54d02969-a9a3-41e3-8bdb-680a709d374a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries/get-paged/1/20/%7B%7D"
									},
									"response": [
										{
											"id": "33a2fe9c-f735-4920-9ae0-3d1f72dbf707",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/transfers/beneficiaries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"transfers",
														"beneficiaries",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"accountName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"nameEnquiryId\": \"<integer>\",\n    \"accountId\": \"<long>\",\n    \"bankId\": \"<integer>\",\n    \"transferType\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "c335e947-fc4f-455e-9c76-94a41e398c6b"
						},
						{
							"name": "Edit details of a benficiary",
							"item": [
								{
									"name": "/api/v1/transfers/beneficiaries Copy 2",
									"id": "25ecb405-dfcd-4588-a9fd-9e1d12b8c226",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"22\",\n  \"beneficiaryName\": \"Golden Boy\",\n  \"bankName\": \"GoMoney\",\n  \"accountName\": \"Gold Launderrrrrrr\",\n  \"accountNumber\": \"9402762900\",\n  \"emailAddress\": \"user22@example.com\",\n  \"countryCode\": \"+234\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"200\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Save\",\n        \"dataValue\": \"Money\"\n      }\n    ]\n  },\n  \"address\": \"Port Harcourt\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "https://transfer-dev.bank78.co/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "f533ed38-4aeb-4b39-a49c-5b1377c9a82b",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "001968b0-161c-4cd7-b27f-da315391eed2"
						}
					],
					"id": "cb199f11-5dff-423a-a22f-2bf034f9a23c"
				},
				{
					"name": "Intra Transfer",
					"item": [
						{
							"name": "Successful Intra Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b345c7bc-4c5f-4b2c-8a02-7064b4b789f1",
										"exec": [
											"// Validate the response status code is 200 (OK)\r",
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate the response structure and properties\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.amount).to.exist.and.to.be.a('number');\r",
											"    pm.expect(responseData.result.amount).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Reference is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"// Assert that the \"reference\" field is present in the response body\r",
											"pm.test(\"Verify 'reference' field is present\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"reference\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bbe34eff-1afd-4a8f-a3f9-5450118c291b",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "a9b9b1fd-eabb-43f7-98e2-d54eddd05902",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Transfer this particualr amount\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"false\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-09-05T14:50:46.856Z\",\n    \"scheduledEndDate\": \"2023-01-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"5\",\n    \"repeatWeekDay\": \"1\",\n    \"repeatMonthDay\": \"10\",\n    \"repeatCount\": \"5\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/Transfer"
							},
							"response": [
								{
									"id": "97a86f2f-da95-4b7b-8c14-2c3a2ddd7e28",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful Intra Transfer - Negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b345c7bc-4c5f-4b2c-8a02-7064b4b789f1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('The field Amount must be between 1 and 2147483647.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ed9748e7-59ae-4180-86ce-3108b3b8bc62",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "ae8a54ca-f866-47d3-b283-3e9ad5a166d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-100\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Transfer this particualr amount\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"false\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-09-05T14:50:46.856Z\",\n    \"scheduledEndDate\": \"2023-01-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"5\",\n    \"repeatWeekDay\": \"1\",\n    \"repeatMonthDay\": \"10\",\n    \"repeatCount\": \"5\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/Transfer"
							},
							"response": [
								{
									"id": "3c05a0b5-99d8-4626-ba7a-46fc938cd11e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96193c86-f583-48eb-97a2-308d022dec71",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'hasResult' field is present and has a boolean value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist.and.to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'message' field is present and has a string value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Assert the 'message' field is 'Invalid Transaction PIN'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'resultType' field is present and has a value of 2\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist.and.to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'result' field is present and has a null value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "15272c8e-7212-4ba5-ba2f-1d147e6e76f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6381\",\n  \"narration\": \"Invalid\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": false,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "da989687-e4c5-4131-aa99-faeedd3a60b6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Name Enquiry Request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c3262e9-f807-4a5a-a2a9-7e40f9a66f11",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "23fcd2af-d3d1-43f3-8bbd-42ef9005df6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Invalid\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"false\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"13h00\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/"
							},
							"response": [
								{
									"id": "7f4800dc-2b7e-495e-8bad-8f6fc8705059",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f66719ee-da77-4892-98ff-1f4511c79ed8",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages array and content for 400\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Account Number can only be digits with a length of 10\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b4bf8796-9564-4843-b308-eac460c28ae0",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e9aba2e2-b6bf-40be-8a2d-9f220ed3136b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6543\",\n  \"narration\": \"Transfer now\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2023-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2023-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"124959400-3\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "3b5e49ab-d161-48f5-aef2-756e9395d583",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Send without validating scheduling details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea1ea26a-4458-4e93-a510-d0d514031670",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"ValidationMessages array and content for 400\", function () {\r",
											"    var validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an(\"array\").that.includes(\"Please specify schedule info for your transfer\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c923fdb5-a36d-4006-891b-013f6880fe1b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Wronng Schedule\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"true\",\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "2b7a2956-a83f-4487-9f99-fb3b9db7cea6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Schedule a transfer directly",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a8918a2-39d6-4e49-8476-e418efc25530",
										"exec": [
											"// Validate the response status code is 200 (OK)\r",
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate the response structure and properties\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.amount).to.exist.and.to.be.a('number');\r",
											"    pm.expect(responseData.result.amount).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Reference is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"//     pm.expect(responseData.result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"// Assert that the \"reference\" field is present in the response body\r",
											"pm.test(\"Verify 'reference' field is present\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"reference\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "67233b58-4ec0-498d-8a71-39ae75d40f9e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Schedule Transfer\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2025-09-04T18:00:46.856Z\",\n    \"scheduledEndDate\": \"2023-09-04T18:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1010001367\",\n  \"nameEnquiryRequestId\": \"15\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "a036d476-3e4f-4196-af27-c416579d1d65",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"beneficiaryAccountNo\": \"<string>\",\n  \"channel\": null,\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"2850\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 2,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/intra-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "1fd8b988-445c-4b27-b10a-09e468cb48b3"
				},
				{
					"name": "Inter Transfer",
					"item": [
						{
							"name": "Successful Inter Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c49b4e2-71af-4f52-bc97-8eded9583ccd",
										"exec": [
											"// Validate the response status code is 200 (OK)\r",
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Validate the response structure and properties\r",
											"pm.test(\"Response structure and properties\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"   // pm.expect(pm.response.json()).to.have.property(\"message\", \"Approved or completed successfully\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"  //  pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"00\");\r",
											"});\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.amount).to.exist.and.to.be.a('number');\r",
											"    pm.expect(responseData.result.amount).to.be.at.least(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Reference is a non-empty string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
											"});\r",
											"\r",
											"// Assert that the \"reference\" field is present in the response body\r",
											"pm.test(\"Verify 'reference' field is present\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"reference\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "386f7d83-d3e2-4b14-b823-dbca83c704ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Transfer now\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": {{sourceAccount}},\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": false,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2024-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2024-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"8168519515\",\n  \"nameEnquiryRequestId\": \"1680\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "06fa6739-d84c-4667-bdc8-59ac2d87ab7e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Name Equiry Request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ddf00522-90e1-49ec-bcb9-4e369e274e51",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Name enquiry record not found\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Name enquiry record not found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "0c5dc87c-2918-4063-9f4b-5e3eb2bfb6e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Transfer overseas\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2024-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2024-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1780004070\",\n  \"nameEnquiryRequestId\": \"7006\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "3b91b699-ea32-4a75-8a46-af4b236cf8e5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Send transfer without validating schedule details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b83f8d5d-5100-4e95-a909-8e25a7337304",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"   // pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78TF01017\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages[0]).to.equal(\"Please specify schedule info for your transfer\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code for failed request is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a1c7699d-8b13-44dd-94dc-20127459afa4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Good Transfer\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": \"true\",\n  \"accountNumber\": \"1780004070\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "caef9d71-bc9a-4d71-8cb2-9b486cc0378c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0029b6d3-3850-47fa-9901-c9ae27bf2add",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Request account number and name enquiry request account number mismatch\");\r",
											"  //  pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"   // pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"07\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Request account number and name enquiry request account number mismatch\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15790793-3d06-48b9-bac6-37d3bf01550f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6383\",\n  \"narration\": \"Invalid account number\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2024-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2024-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1780001233\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "183b26c2-c165-43e7-ad15-80c6fdba9ad1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33b8de08-136d-4dd1-a8c3-228a67f9013f",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'hasResult' field is present and has a boolean value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist.and.to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'message' field is present and has a string value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Assert the 'message' field is 'Invalid Transaction PIN'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'resultType' field is present and has a value of 2\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist.and.to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'result' field is present and has a null value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "de8b1610-54e2-4e8d-882b-0c05d52a1b0a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"transactionPin\": \"6385\",\n  \"narration\": \"Transfer overseas\",\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"saveBeneficiary\": true,\n  \"deviceId\": \"phoneX\",\n  \"canSchedule\": true,\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"2024-08-30T16:10:46.856Z\",\n    \"scheduledEndDate\": \"2024-08-30T16:10:46.856Z\",\n    \"repeatFrequency\": \"0\",\n    \"repeatWeekDay\": \"0\",\n    \"repeatMonthDay\": \"0\",\n    \"repeatCount\": \"0\"\n  },\n  \"accountNumber\": \"1780004070\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer"
							},
							"response": [
								{
									"id": "4211ed1a-6f19-4856-9751-d1f251b27c26",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"7891994389\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"4083\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"canSchedule\": \"<boolean>\",\n  \"scheduleInfo\": {\n    \"scheduledStartDate\": \"<dateTime>\",\n    \"scheduledEndDate\": \"<dateTime>\",\n    \"repeatFrequency\": null,\n    \"repeatWeekDay\": 3,\n    \"repeatMonthDay\": \"<integer>\",\n    \"repeatCount\": \"<integer>\"\n  },\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "0294a7c7-0a75-499d-993d-4792b9c7ea58"
				},
				{
					"name": "Schedule",
					"item": [
						{
							"name": "Successful Schedule",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e43b2278-6f30-40c0-ab46-360dcf63ac1e",
										"exec": [
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    pm.expect(result).to.have.property(\"amount\", 0.0);\r",
											"    pm.expect(result).to.have.property(\"reference\", null);\r",
											"    pm.expect(result).to.have.property(\"accountNumber\", null);\r",
											"    pm.expect(result).to.have.property(\"message\", \"Transfer scheduled successfully\");\r",
											"    pm.expect(result).to.have.property(\"bankName\", null);\r",
											"    pm.expect(result).to.have.property(\"accountName\", null);\r",
											"    pm.expect(result).to.have.property(\"status\", null);\r",
											"    pm.expect(result).to.have.property(\"sessionId\", null);\r",
											"    pm.expect(result).to.have.property(\"senderName\", null);\r",
											"    pm.expect(result).to.have.property(\"senderAccountNumber\", null);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f9ad2de4-2224-4a19-97ba-f794290b4244",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "91c2a144-c0d1-4114-9a7d-3e5ebb0ee7bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1010001626\",\n  \"amount\": \"5000\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule for 9 in the morning Sharp\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-10-20T09:00:00.942Z\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-10-25T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "68444fa8-2f1e-4a49-80c6-b66e95920bf5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Successful Schedule - Negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e43b2278-6f30-40c0-ab46-360dcf63ac1e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.an('array');\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 3\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(3);\r",
											"});\r",
											"\r",
											"pm.test(\"message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Response has validation errors');\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages is present\", function () {\r",
											"    pm.expect(jsonData.validationMessages[0]).to.eql('The field Amount must be between 1 and 2147483647.');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a8b829d8-464d-4796-936d-18dc09d35ba0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1010001626\",\n  \"amount\": \"-5000\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule for 9 in the morning Sharp\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-10-20T09:00:00.942Z\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-10-25T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "74008d78-9905-4fbf-8245-af57fde160c1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Automate Recurring Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e43b2278-6f30-40c0-ab46-360dcf63ac1e",
										"exec": [
											"pm.test(\"Response code is 200 (OK)\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 200\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Result object properties for 200\", function () {\r",
											"    var result = pm.response.json().result;\r",
											"    pm.expect(result).to.have.property(\"amount\", 0.0);\r",
											"    pm.expect(result).to.have.property(\"reference\", null);\r",
											"    pm.expect(result).to.have.property(\"accountNumber\", null);\r",
											"    pm.expect(result).to.have.property(\"message\", \"Transfer scheduled successfully\");\r",
											"    pm.expect(result).to.have.property(\"bankName\", null);\r",
											"    pm.expect(result).to.have.property(\"accountName\", null);\r",
											"    pm.expect(result).to.have.property(\"status\", null);\r",
											"    pm.expect(result).to.have.property(\"sessionId\", null);\r",
											"    pm.expect(result).to.have.property(\"senderName\", null);\r",
											"    pm.expect(result).to.have.property(\"senderAccountNumber\", null);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8ef487cc-7f75-4b82-9f22-94989822987b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1780004070\",\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule for 9 in the morning Sharp\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "6d8820ad-5f0f-4f46-b3ab-a00d97925af3",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Insufficient balance for a scheduled transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e03973b-2610-48e8-b6ae-c115cdfcc60f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "737d0982-16bd-4d0e-8ff1-b4f1905f5586",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1780004070\",\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"SCH\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T10:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone19\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "2486633a-3b7f-4fbe-9472-2dd1a9876ac4",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Name  Equiry request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb870769-338b-412d-8562-8f8c7b98f766",
										"exec": [
											"pm.test(\"Response code is 400 (Bad Request)\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response structure and properties for 400\", function () {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\");\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"    pm.expect(pm.response.json()).to.not.have.property(\"responseCode\", \"null\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error message matches the expected value for 400\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Error code is 0 for failed request\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6f3fe7c5-8a36-4244-a798-b5ec6fbf100a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1010001719\",\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"100j0\",\n  \"narration\": \"New Schedule\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2023-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T09:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "3fa4120f-5e9c-42c5-b9d7-e3ff6ff3ffcd",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Date in the past",
							"id": "bffe8819-0c95-4269-969b-c31c03f240df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountNumber\": \"1780004070\",\n  \"amount\": \"700\",\n  \"channel\": \"1\",\n  \"nameEnquiryRequestId\": \"10\",\n  \"narration\": \"New Schedule\",\n  \"repeatFrequency\": \"1\",\n  \"scheduledStartDate\": \"2022-09-01T09:00:00.942Z\",\n  \"sourceAccountNo\": \"1010000712\",\n  \"transactionPin\": \"6383\",\n  \"scheduledEndDate\": \"2023-09-02T09:00:00.942Z\",\n  \"repeatWeekDay\": \"1\",\n  \"repeatCount\": \"1\",\n  \"saveBeneficiary\": \"false\",\n  \"deviceId\": \"iphone\",\n  \"repeatMonthDay\": \"0\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/schedule"
							},
							"response": [
								{
									"id": "70d1884f-f87a-40bf-b9c9-07061b354116",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"3995166362\",\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"nameEnquiryRequestId\": \"<integer>\",\n  \"narration\": \"<string>\",\n  \"repeatFrequency\": null,\n  \"scheduledStartDate\": \"<dateTime>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9869\",\n  \"scheduledEndDate\": \"<dateTime>\",\n  \"repeatWeekDay\": 6,\n  \"repeatCount\": \"<integer>\",\n  \"saveBeneficiary\": \"<boolean>\",\n  \"deviceId\": \"<string>\",\n  \"repeatMonthDay\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/schedule"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"amount\": \"<double>\",\n    \"reference\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"message\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"accountName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"sessionId\": \"<string>\",\n    \"senderName\": \"<string>\",\n    \"senderAccountNumber\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "7d3e46a8-8ec6-4c60-9d67-59857de44a16"
				},
				{
					"name": "Bulk Transfer",
					"item": [
						{
							"name": "Successful Bulk transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ddaa178b-31dd-45b8-993c-6c2be34bc48b",
										"exec": [
											"pm.test(\"Response code is 200 (OK)\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response hasResult property is a boolean\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Response result property is an array\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Response resultType property is a number or null\", function () {",
											"    pm.expect(pm.response.json().resultType).to.satisfy(function(value) {",
											"        return typeof value === 'number' || value === null;",
											"    });",
											"});",
											"",
											"pm.test(\"Response message property is a string or null\", function () {",
											"    pm.expect(pm.response.json().message).to.satisfy(function(value) {",
											"        return typeof value === 'string' || value === null;",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"Response successful property is a boolean or null\", function () {",
											"    pm.expect(pm.response.json().successful).to.satisfy(function(value) {",
											"        return typeof value === 'boolean' || value === null;",
											"    });",
											"});",
											"",
											"pm.test(\"Response errorCode property is a number or null\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.satisfy(function(value) {",
											"        return typeof value === 'number' || value === null;",
											"    });",
											"});",
											"",
											"pm.test(\"Response responseCode property is a string or null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.satisfy(function(value) {",
											"        return typeof value === 'string' || value === null;",
											"    });",
											"});",
											"",
											"// pm.test(\"At least one success message is present\", function () {",
											"//     const results = pm.response.json().result;",
											"    ",
											"//     // Use a flag to track if a success message is found",
											"//     let successFound = false;",
											"",
											"//     // Iterate through the results array",
											"//     results.forEach(function (result) {",
											"//         if (result.message === \"Successful\") {",
											"//             successFound = true;",
											"//             return; // Exit the loop once a success message is found",
											"//         }",
											"//     });",
											"//     pm.expect(successFound).to.equal(true, \"No success message found in the response\");",
											"// });",
											"",
											"// pm.test(\"At least one 'Transfer in processing' message is present\", function () {",
											"//     const results = pm.response.json().result;",
											"",
											"//     const hasProcessingMessage = results.some(function (result) {",
											"//         return result.message === \"Transfer in processing\";",
											"//     });",
											"",
											"//    // pm.expect(hasProcessingMessage).to.be.true;",
											"// });",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ac0608fb-a42a-4e8e-a96a-887fe4a612da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001729\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "c2435ab4-54dc-4106-b51e-d6c7b9451857",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin in all transfers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5041b496-bbb7-4aa9-adac-780ff603f807",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'hasResult' field is present and has a boolean value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.hasResult).to.exist.and.to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the 'message' field is present and has a string value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.message).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Assert the 'message' field is 'Invalid Transaction PIN'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'resultType' field is present and has a value of 2\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.resultType).to.exist.and.to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate the 'result' field is present and has a null value\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5f16b0c-aa9e-4177-91f6-644cb694f04d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6381\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001729\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "b305ba29-6b00-4eac-903a-7d8a907618b7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account Details for one transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86ac9ee3-19af-4ee8-84bf-a3a92fd0cfce",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Response is an object with properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('hasResult', 'result', 'resultType', 'message', 'validationMessages', 'successful', 'errorCode', 'responseCode');",
											"});",
											"",
											"pm.test(\"Test response properties for data types\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"",
											"    // Check the data types of individual properties",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');",
											"    pm.expect(responseData.result).to.be.null;",
											"    pm.expect(responseData.resultType).to.be.a('number');",
											"    pm.expect(responseData.message).to.be.a('string');",
											"    pm.expect(responseData.validationMessages).to.be.an('array');",
											"    pm.expect(responseData.successful).to.be.a('boolean');",
											"    pm.expect(responseData.errorCode).to.be.a('number');",
											"    pm.expect(responseData.responseCode).to.be.null;",
											"});",
											"",
											"",
											"pm.test(\"Response contains the expected validation message\", function () {",
											"    var jsonData = pm.response.json();",
											"    var validationMessages = jsonData.validationMessages;",
											"    pm.expect(validationMessages).to.include(\"Account Number can only be digits with a length of 10\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "902ba145-63b3-4282-990c-645a20fec6c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001dgjhd\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "bae72ecb-dd1a-4515-b2e5-134dfa3d5231",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account details for all transfers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80cfc383-6e28-4c8f-b600-fbc5676138fb",
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an object with properties\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('hasResult', 'result', 'resultType', 'message', 'validationMessages', 'successful', 'errorCode', 'responseCode');\r",
											"});\r",
											"\r",
											"pm.test(\"Test response properties for data types\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"\r",
											"    // Check the data types of individual properties\r",
											"    pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(responseData.result).to.be.null;\r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.validationMessages).to.be.an('array');\r",
											"    pm.expect(responseData.successful).to.be.a('boolean');\r",
											"    pm.expect(responseData.errorCode).to.be.a('number');\r",
											"    pm.expect(responseData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response contains the expected validation message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var validationMessages = jsonData.validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Account Number can only be digits with a length of 10\",\r",
											"        \"Account Number can only be digits with a length of 10\",\r",
											"        \"Account Number can only be digits with a length of 10\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fe20fd8b-6516-4df9-ac5e-95e2ed88e6fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"10100013fh\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"17800040we\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001dy\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "8c44c1d3-1f93-4a97-8f9a-a681a895ca95",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Schedule Bulk Transfer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9245232c-a571-43a3-9d19-ec295f5d74ef",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that successful status returns true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Amount is a non-negative number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.result).to.be.an('array');\r",
											"    \r",
											"    responseData.result.forEach(function (result) {\r",
											"        pm.expect(result.amount).to.be.a('number');\r",
											"        pm.expect(result.amount).to.be.at.least(0);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											"// pm.test(\"Reference is a non-empty string\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"    \r",
											"//     pm.expect(responseData).to.be.an('object');\r",
											"//     pm.expect(responseData.result).to.exist.and.to.be.an('array');\r",
											"    \r",
											"//     responseData.result.forEach(function (result) {\r",
											"//         pm.expect(result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Reference should not be empty\");\r",
											"//     });\r",
											"// });\r",
											"\r",
											"\r",
											"// pm.test(\"Each result object has an accountNumber property\", function () {\r",
											"//     const responseData = pm.response.json();\r",
											"    \r",
											"//     pm.expect(responseData).to.be.an('object');\r",
											"//     pm.expect(responseData.result).to.exist.and.to.be.an('array');\r",
											"    \r",
											"//     responseData.result.forEach(function (result) {\r",
											"//         pm.expect(result.accountNumber).to.exist.and.to.be.a('string');\r",
											"//     });\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e2db8bc1-3da6-4a43-a4cb-3d45ed8f90e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"iphone\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"1010001367\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1780004070\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"10\",\n      \"narration\": \"My sister\",\n      \"saveBeneficiary\": \"true\"\n    },\n    {\n      \"accountNumber\": \"1010001729\",\n      \"amount\": \"100\",\n      \"NameEnquiryRequestId\": \"15\",\n      \"narration\": \"Have fun\",\n      \"saveBeneficiary\": \"true\"\n    }\n  \n  ],\n  \"currency\": \"NGN\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://transfer-dev.bank78.co/api/v1/Transfer/bulk"
							},
							"response": [
								{
									"id": "d33a3c18-230c-4b3e-9e18-ccd040bf5026",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9526\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"accountNumber\": \"5968349419\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    },\n    {\n      \"accountNumber\": \"1518438025\",\n      \"amount\": \"<double>\",\n      \"nameEnquiryRequestId\": \"<integer>\",\n      \"narration\": \"<string>\",\n      \"saveBeneficiary\": \"<boolean>\"\n    }\n  ],\n  \"currency\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/Transfer/inter-bank/bulk"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    },\n    {\n      \"amount\": \"<double>\",\n      \"reference\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"message\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"accountName\": \"<string>\",\n      \"status\": \"<string>\",\n      \"sessionId\": \"<string>\",\n      \"senderName\": \"<string>\",\n      \"senderAccountNumber\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "194b7c8b-344b-42f0-b6d9-2a19422828fd"
				},
				{
					"name": "File Bulk Transfer",
					"item": [
						{
							"name": "process-transfer",
							"item": [
								{
									"name": "Sucessful transfer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c85b4d0b-b635-49f0-910f-8b645a6b4a49",
												"exec": [
													"// Test for response status code\r",
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Test for response body properties\r",
													"pm.test(\"Response body has all expected properties\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"hasResult\");\r",
													"    pm.expect(jsonData).to.have.property(\"result\");\r",
													"    pm.expect(jsonData).to.have.property(\"resultType\");\r",
													"    pm.expect(jsonData).to.have.property(\"message\");\r",
													"    pm.expect(jsonData).to.have.property(\"validationMessages\");\r",
													"    pm.expect(jsonData).to.have.property(\"successful\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorCode\");\r",
													"    pm.expect(jsonData).to.have.property(\"responseCode\");\r",
													"});\r",
													"\r",
													"// Test for specific property values\r",
													"pm.test(\"hasResult property is a boolean\", function () {\r",
													"    var hasResult = pm.response.json().hasResult;\r",
													"    pm.expect(hasResult).to.be.a(\"boolean\");\r",
													"});\r",
													"\r",
													"pm.test(\"result property is an object\", function () {\r",
													"    var result = pm.response.json().result;\r",
													"    pm.expect(result).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"resultType property is a number\", function () {\r",
													"    var resultType = pm.response.json().resultType;\r",
													"    pm.expect(resultType).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validate 'result' object with 'message'\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    pm.expect(responseData.result).to.be.an('object');\r",
													"    pm.expect(responseData.result).to.have.property('message');\r",
													"    pm.expect(responseData.result.message).to.equal(\"Bulk process has started. Please check notification center for result\");\r",
													"});\r",
													"\r",
													"pm.test(\"successful property is a boolean\", function () {\r",
													"    var successful = pm.response.json().successful;\r",
													"    pm.expect(successful).to.be.a(\"boolean\");\r",
													"});\r",
													"\r",
													"pm.test(\"errorCode property is a number\", function () {\r",
													"    var errorCode = pm.response.json().errorCode;\r",
													"    pm.expect(errorCode).to.be.a(\"number\");\r",
													"});\r",
													"\r",
													"pm.test(\"responseCode property is null\", function () {\r",
													"    var responseCode = pm.response.json().responseCode;\r",
													"    pm.expect(responseCode).to.be.null;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3c4d80be-bc3c-49f9-a820-ba95bf9bb69c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaries\": [\n    {\n            \"accountName\": \"Reece Koch\",\n            \"accountNumber\": \"1010001719\",\n            \"nameEnquiryId\": 600,\n            \"amount\": \"100\",\n            \"narration\": \"First Salary\"\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8045013161\",\n            \"amount\": \"110\",\n            \"narration\": \"Second Salary\",\n            \"nameEnquiryId\": 601\n        },\n        {\n            \"accountName\": \"Chi Chi\",\n            \"accountNumber\": \"8198765432\",\n            \"amount\": \"120\",\n            \"narration\": \"Third Salary\",\n            \"nameEnquiryId\": 602\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8055584568\",\n            \"amount\": \"130\",\n            \"narration\": \"Fourth Salary\",\n            \"nameEnquiryId\": 603\n        },\n        {\n            \"accountName\": \"Bunch Dillon\",\n            \"accountNumber\": \"9373494343\",\n            \"amount\": \"140\",\n            \"narration\": \"Fift Salary\",\n            \"nameEnquiryId\": 604\n        }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/process-transfer"
									},
									"response": [
										{
											"id": "0075b605-9117-4f77-a03e-6c073a8ab66a",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"3555\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/process-transfer"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid pin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c85b4d0b-b635-49f0-910f-8b645a6b4a49",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
													"   \r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
													"   // pm.expect(pm.response.json()).to.have.property(\"responseCode\", \"BANK78TF01002\");\r",
													"});\r",
													"\r",
													"pm.test(\"Veriy that reponse has a validation message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.validationMessages[0]).to.eql(\"Transaction PIN can only be digits with a length of 4\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "cfb71942-4429-49a8-9716-10bf269deebf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": \"1\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"638\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaries\": [\n    {\n            \"accountName\": \"Reece Koch\",\n            \"accountNumber\": \"1010001719\",\n            \"nameEnquiryId\": 600,\n            \"amount\": \"100\",\n            \"narration\": \"Salary\"\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8045013161\",\n            \"amount\": \"110\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 601\n        },\n        {\n            \"accountName\": \"Chi Chi\",\n            \"accountNumber\": \"8198765432\",\n            \"amount\": \"120\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 602\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8055584568\",\n            \"amount\": \"130\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 603\n        },\n        {\n            \"accountName\": \"Bunch Dillon\",\n            \"accountNumber\": \"9373494343\",\n            \"amount\": \"140\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 604\n        }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/process-transfer"
									},
									"response": [
										{
											"id": "2c270ba5-a5f5-4c23-94fe-327c9911e36c",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"3555\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/process-transfer"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invalid channel",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c85b4d0b-b635-49f0-910f-8b645a6b4a49",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\").to.be.an('array').that.includes(\"The field Channel is invalid.\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "9f4f6312-381f-4f1b-a40a-91fd633c100c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{customer_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": \"1000\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"transactionPin\": \"6383\",\n  \"deviceId\": \"xphone\",\n  \"beneficiaries\": [\n    {\n            \"accountName\": \"Reece Koch\",\n            \"accountNumber\": \"1010001719\",\n            \"nameEnquiryId\": 600,\n            \"amount\": \"100\",\n            \"narration\": \"Salary\"\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8045013161\",\n            \"amount\": \"110\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 601\n        },\n        {\n            \"accountName\": \"Chi Chi\",\n            \"accountNumber\": \"8198765432\",\n            \"amount\": \"120\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 602\n        },\n        {\n            \"accountName\": \"John Doe\",\n            \"accountNumber\": \"8055584568\",\n            \"amount\": \"130\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 603\n        },\n        {\n            \"accountName\": \"Bunch Dillon\",\n            \"accountNumber\": \"9373494343\",\n            \"amount\": \"140\",\n            \"narration\": \"Salary\",\n            \"nameEnquiryId\": 604\n        }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/process-transfer"
									},
									"response": [
										{
											"id": "85acd1ea-5d72-4286-bad7-4aed962f7b7f",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"channel\": null,\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"3555\",\n  \"deviceId\": \"<string>\",\n  \"beneficiaries\": [\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"nameEnquiryId\": \"<integer>\",\n      \"amount\": \"<double>\",\n      \"narration\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/process-transfer"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "4771c0b4-80a4-4f70-88a9-1ee686c40a42"
						},
						{
							"name": "validate-upload",
							"item": [
								{
									"name": "Valid entry",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e41a53a3-f097-4e25-aced-28de7cf7cf89",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response is an object with properties\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('hasResult', 'result', 'resultType', 'message', 'validationMessages', 'successful', 'errorCode', 'responseCode');\r",
													"});\r",
													"\r",
													"pm.test(\"hasResult property is a boolean\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
													"});\r",
													"\r",
													"pm.test(\"result property is an array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.result).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Each element in the result array has the required properties\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    jsonData.result.forEach(function(element) {\r",
													"        pm.expect(element).to.be.an('object').that.has.all.keys('accountName', 'accountNumber', 'isValid', 'bankCode', 'bankName', 'nameEnquiryId', 'message', 'amount', 'narration', 'isLocal', 'vat', 'charges');\r",
													"    });\r",
													"});\r",
													"\r",
													"pm.test(\"resultType property is a number\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.resultType).to.be.a('number');\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"successful property is a boolean\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
													"});\r",
													"\r",
													"pm.test(\"errorCode property is a number\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
													"});\r",
													"\r",
													"pm.test(\"responseCode property is null or a string\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.responseCode).to.be.oneOf([null, 'string']);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8ef46340-d46b-47d1-8ac8-5b17a7202b15",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://bank78-dev-file-uploads.s3.eu-west-1.amazonaws.com/638344605583717455-Buktrans.csv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/validate-upload"
									},
									"response": [
										{
											"id": "e8b9baad-9519-4eff-ba6e-b161cf16094e",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/validate-upload"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Invald entry",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e41a53a3-f097-4e25-aced-28de7cf7cf89",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Error occured while processing some records: Input string was not in a correct format.\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ce2bfb39-e707-4106-b369-82128d6d024d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://bank78-dev-file-uploads.s3.eu-west-1.amazonaws.com/638345482533170516-Buktrans1.csv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/validate-upload"
									},
									"response": [
										{
											"id": "75f32421-5674-4604-b254-825c0f486c5f",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/validate-upload"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Missing column",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e41a53a3-f097-4e25-aced-28de7cf7cf89",
												"exec": [
													"pm.test(\"Status code is 400 Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Response has expected structure\", function () {\r",
													"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"result\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 2);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Error occured while processing some records: Input string was not in a correct format.\");\r",
													"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
													"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2db409e3-efce-4c6c-9d1f-b31fa146d7e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://bank78-dev-file-uploads.s3.eu-west-1.amazonaws.com/638345484657715591-Buktrans2.csv\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/validate-upload"
									},
									"response": [
										{
											"id": "3fa83e8e-e7f9-4f8c-a2cb-d9fcf2f604a3",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfer/bulk/validate-upload"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"accountName\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"isValid\": \"<boolean>\",\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\",\n      \"nameEnquiryId\": \"<integer>\",\n      \"message\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "dbdf55f8-1505-4695-ba8b-0b1b7ef17029"
						},
						{
							"name": "download-template",
							"item": [
								{
									"name": "/api/v1/transfer/bulk/download-template",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5be01008-1d0f-445b-b014-31927688e0d5",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate CSV Headers\", function () {\r",
													"    // Parse the response as text\r",
													"    const responseText = pm.response.text();\r",
													"\r",
													"    // Split the response text into lines\r",
													"    const lines = responseText.split('\\n');\r",
													"\r",
													"    // Extract the header line (assuming it's the first line)\r",
													"    const headerLine = lines[0];\r",
													"\r",
													"    // Split the header line into individual headers\r",
													"    const headers = headerLine.split(',');\r",
													"\r",
													"    // Define the expected headers\r",
													"    const expectedHeaders = [\"BankCode\", \"AccountNumber\", \"Amount\", \"Narration\"];\r",
													"\r",
													"    // Check if all the expected headers are present in the response\r",
													"    expectedHeaders.forEach(function (header) {\r",
													"        pm.expect(headers).to.include(header);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "7308dac3-af01-4c17-ac49-56931550ddc6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/download-template"
									},
									"response": [
										{
											"id": "39db69d9-bd96-4093-b6d0-0404a5b498a1",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/transfer/bulk/download-template"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"bankCode\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"amount\": \"<string>\",\n      \"narration\": \"<string>\"\n    },\n    {\n      \"bankCode\": \"<string>\",\n      \"accountNumber\": \"<string>\",\n      \"amount\": \"<string>\",\n      \"narration\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "17e9f863-8d7a-4407-9d4f-cb76c7e2b9b3"
						},
						{
							"name": "download-bank-codes",
							"item": [
								{
									"name": "/api/v1/transfer/bulk/download-bank-codes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0cb39bbe-e21e-4721-9d99-2de5639923b3",
												"exec": [
													"pm.test(\"Response status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "98feeae6-1d8b-47d4-bde9-ec8c1f37e66f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_access_token}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"url": "{{baseUrl}}/transfer/api/v1/transfer/bulk/download-bank-codes"
									},
									"response": [
										{
											"id": "dbbd4852-b44b-4f03-ab87-e77c01bb54f5",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": "{{baseUrl}}/api/v1/transfer/bulk/download-bank-codes"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\"\n    },\n    {\n      \"bankCode\": \"<string>\",\n      \"bankName\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "db42b431-0b27-4d04-a618-8b9603bac444"
						}
					],
					"id": "36c4ac6c-e659-405f-8ed1-69f3618228e3"
				}
			],
			"id": "97f979c6-95bf-467e-90b6-ffff5d5484fc"
		},
		{
			"name": "Beneficiaries",
			"item": [
				{
					"name": "Add Beneficiary",
					"item": [
						{
							"name": "New Beneficiary Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5af92fd5-fc1d-4aa8-89fd-6af6725c1a82",
										"exec": [
											"// Verify that the response has a result object\r",
											"pm.test(\"Response has a 'result' object\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"// Verify that the 'result' object has the expected 'message' property\r",
											"pm.test(\"Result object has 'message' property with value 'Beneficiary successfully added'\", function () {\r",
											"    const result = pm.response.json().result;\r",
											"    pm.expect(result).to.have.property(\"message\", \"Beneficiary successfully added\");\r",
											"});\r",
											"\r",
											"// Verify that the 'resultType' is 1\r",
											"pm.test(\"Result type is 1 (Expected)\", function () {\r",
											"    const resultType = pm.response.json().resultType;\r",
											"    pm.expect(resultType).to.equal(1);\r",
											"});\r",
											"\r",
											"// Verify that the 'message' property is null\r",
											"pm.test(\"'message' property is null (Expected)\", function () {\r",
											"    const message = pm.response.json().message;\r",
											"    pm.expect(message).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that 'validationMessages' property is null\r",
											"pm.test(\"'validationMessages' property is null (Expected)\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that 'successful' property is true\r",
											"pm.test(\"'successful' property is true (Expected)\", function () {\r",
											"    const successful = pm.response.json().successful;\r",
											"    pm.expect(successful).to.be.true;\r",
											"});\r",
											"\r",
											"// Verify that 'errorCode' property is 0\r",
											"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
											"    const errorCode = pm.response.json().errorCode;\r",
											"    pm.expect(errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"// Verify that 'responseCode' property is null\r",
											"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
											"    const responseCode = pm.response.json().responseCode;\r",
											"    pm.expect(responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "87f3fe34-4336-44de-953b-a61339a92fe3",
										"exec": [
											"// Function to generate a random 10-digit accountNumber\r",
											"function generateRandomAccountNumber() {\r",
											"    return Math.floor(Math.random() * 9000000000) + 1000000000;\r",
											"}\r",
											"\r",
											"// Function to generate a random email address\r",
											"function generateRandomEmail() {\r",
											"    const emailDomain = \"example.com\"; // You can replace this with your desired domain\r",
											"    const randomString = Math.random().toString(36).substring(7);\r",
											"    return `random_${randomString}@${emailDomain}`;\r",
											"}\r",
											"\r",
											"// Function to generate random alphabetic characters\r",
											"function generateRandomAlphabets(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Generate random values\r",
											"const randomAccountNumber = generateRandomAccountNumber();\r",
											"const randomEmail = generateRandomEmail();\r",
											"const randomAlphabets = generateRandomAlphabets(10); // Generate 10 random alphabetic characters\r",
											"\r",
											"// Update the requestBody with random values\r",
											"const requestBody = {\r",
											"    \"beneficiaryName\": randomAlphabets,\r",
											"    \"bankName\": \"Providus\",\r",
											"    \"accountName\": randomAlphabets,\r",
											"    \"accountNumber\": randomAccountNumber.toString(), // Convert to string\r",
											"    \"emailAddress\": randomEmail,\r",
											"    \"countryCode\": \"+234\",\r",
											"    \"address\": \"Lagos\",\r",
											"    \"currencyRequirement\": {\r",
											"        \"name\": \"NGN\",\r",
											"        \"value\": \"100\",\r",
											"        \"forms\": [\r",
											"            {\r",
											"                \"dataLabel\": \"new beneficiary\",\r",
											"                \"dataValue\": \"Save\"\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.request.body.raw = JSON.stringify(requestBody);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5f99ef96-fbf3-45e1-8db1-86362cb62079",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries/bank-requirements"
							},
							"response": [
								{
									"id": "c9772e76-e6a5-4f08-9ba4-567837d7fafd",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "New Beneficiary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5af92fd5-fc1d-4aa8-89fd-6af6725c1a82",
										"exec": [
											"// Verify that the response has a result object\r",
											"pm.test(\"Response has a 'result' object\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"// Verify that the 'result' object has the expected 'message' property\r",
											"pm.test(\"Result object has 'message' property with value 'Beneficiary successfully added'\", function () {\r",
											"    const result = pm.response.json().result;\r",
											"    pm.expect(result).to.have.property(\"message\", \"Beneficiary successfully added\");\r",
											"});\r",
											"\r",
											"// Verify that the 'resultType' is 1\r",
											"pm.test(\"Result type is 1 (Expected)\", function () {\r",
											"    const resultType = pm.response.json().resultType;\r",
											"    pm.expect(resultType).to.equal(1);\r",
											"});\r",
											"\r",
											"// Verify that the 'message' property is null\r",
											"pm.test(\"'message' property is null (Expected)\", function () {\r",
											"    const message = pm.response.json().message;\r",
											"    pm.expect(message).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that 'validationMessages' property is null\r",
											"pm.test(\"'validationMessages' property is null (Expected)\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that 'successful' property is true\r",
											"pm.test(\"'successful' property is true (Expected)\", function () {\r",
											"    const successful = pm.response.json().successful;\r",
											"    pm.expect(successful).to.be.true;\r",
											"});\r",
											"\r",
											"// Verify that 'errorCode' property is 0\r",
											"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
											"    const errorCode = pm.response.json().errorCode;\r",
											"    pm.expect(errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"// Verify that 'responseCode' property is null\r",
											"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
											"    const responseCode = pm.response.json().responseCode;\r",
											"    pm.expect(responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "87f3fe34-4336-44de-953b-a61339a92fe3",
										"exec": [
											"// // Function to generate a random 10-digit accountNumber\r",
											"// function generateRandomAccountNumber() {\r",
											"//     return Math.floor(Math.random() * 9000000000) + 1000000000;\r",
											"// }\r",
											"\r",
											"// // Function to generate a random email address\r",
											"// function generateRandomEmail() {\r",
											"//     const emailDomain = \"example.com\"; // You can replace this with your desired domain\r",
											"//     const randomString = Math.random().toString(36).substring(7);\r",
											"//     return `random_${randomString}@${emailDomain}`;\r",
											"// }\r",
											"\r",
											"// // Function to generate random alphabetic characters\r",
											"// function generateRandomAlphabets(length) {\r",
											"//     const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
											"//     let result = '';\r",
											"//     for (let i = 0; i < length; i++) {\r",
											"//         const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"//         result += characters.charAt(randomIndex);\r",
											"//     }\r",
											"//     return result;\r",
											"// }\r",
											"\r",
											"// // Generate random values\r",
											"// const randomAccountNumber = generateRandomAccountNumber();\r",
											"// const randomEmail = generateRandomEmail();\r",
											"// const randomAlphabets = generateRandomAlphabets(10); // Generate 10 random alphabetic characters\r",
											"\r",
											"// // Update the requestBody with random values\r",
											"// const requestBody = {\r",
											"//     \"beneficiaryName\": randomAlphabets,\r",
											"//     \"bankName\": \"Providus\",\r",
											"//     \"accountName\": randomAlphabets,\r",
											"//     \"accountNumber\": randomAccountNumber.toString(), // Convert to string\r",
											"//     \"emailAddress\": randomEmail,\r",
											"//     \"countryCode\": \"+234\",\r",
											"//     \"address\": \"Lagos\",\r",
											"//     \"currencyRequirement\": {\r",
											"//         \"name\": \"NGN\",\r",
											"//         \"value\": \"100\",\r",
											"//         \"forms\": [\r",
											"//             {\r",
											"//                 \"dataLabel\": \"new beneficiary\",\r",
											"//                 \"dataValue\": \"Save\"\r",
											"//             }\r",
											"//         ]\r",
											"//     }\r",
											"// };\r",
											"\r",
											"// pm.request.body.raw = JSON.stringify(requestBody);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f469015f-3d36-429d-a6ad-be6c4ee94884",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"beneficiaryName\": \"Reece Koch\",\n  \"bankName\": \"Bank 78\",\n  \"accountName\": \"Reece Koch\",\n  \"accountNumber\": \"1010001719\",\n  \"emailAddress\": \"test8033@mailinator.com\",\n  \"countryCode\": \"+234\",\n  \"currencyCode\": \"NGN\",\n  \"address\": \"string\",\n  \"bankRequirementId\": \"1\",\n  \"bankRequirementValue\": \"BankCode\",\n  \"nameEnquiryId\": 963,\n  \"bankId\": 110072\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries"
							},
							"response": [
								{
									"id": "3e06f0ad-8f15-4305-bda5-a560951e3e47",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Beneficiary Already Exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
										"exec": [
											"// Verify that the response has a 'result' object\r",
											"pm.test(\"Response has a 'result' object\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"// Verify that the 'result' object is null\r",
											"pm.test(\"'result' object is null (Expected)\", function () {\r",
											"    const result = pm.response.json().result;\r",
											"    pm.expect(result).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that the 'resultType' is 2\r",
											"pm.test(\"Result type is 2 (Expected)\", function () {\r",
											"    const resultType = pm.response.json().resultType;\r",
											"    pm.expect(resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"// Verify that the 'message' property is \"Beneficiary details already exists\"\r",
											"pm.test(\"'message' property is 'Beneficiary details already exists' (Expected)\", function () {\r",
											"    const message = pm.response.json().message;\r",
											"    pm.expect(message).to.equal(\"Beneficiary details already exists\");\r",
											"});\r",
											"\r",
											"// Verify that 'validationMessages' property is null\r",
											"pm.test(\"'validationMessages' property is null (Expected)\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that 'successful' property is false\r",
											"pm.test(\"'successful' property is false (Expected)\", function () {\r",
											"    const successful = pm.response.json().successful;\r",
											"    pm.expect(successful).to.be.false;\r",
											"});\r",
											"\r",
											"// Verify that 'errorCode' property is 0\r",
											"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
											"    const errorCode = pm.response.json().errorCode;\r",
											"    pm.expect(errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"//\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ee76dd92-e96c-4b8f-80ea-2a71f9ecd5ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"beneficiaryName\": \"Reece Koch\",\n  \"bankName\": \"Bank 78\",\n  \"accountName\": \"Reece Koch\",\n  \"accountNumber\": \"1010001719\",\n  \"emailAddress\": \"test8033@mailinator.com\",\n  \"countryCode\": \"+234\",\n  \"currencyCode\": \"NGN\",\n  \"address\": \"string\",\n  \"bankRequirementId\": \"1\",\n  \"bankRequirementValue\": \"BankCode\",\n  \"nameEnquiryId\": 963,\n  \"bankId\": 110072\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries"
							},
							"response": [
								{
									"id": "afafdbd3-62c0-4c68-ba88-893a2ffae455",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e16b8c02-e97e-4858-b62e-f9b976b5b9df",
										"exec": [
											"// Verify that the response has a 'validationMessages' array\r",
											"pm.test(\"Response has a 'validationMessages' array\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody).to.have.property(\"validationMessages\").that.is.an(\"array\");\r",
											"});\r",
											"\r",
											"// Verify that the 'validationMessages' array contains the expected error message\r",
											"pm.test(\"Validation error message is 'Account Number can only contain digits' (Expected)\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Account Number can only contain digits\");\r",
											"});\r",
											"\r",
											"// Verify that 'successful' property is false\r",
											"pm.test(\"'successful' property is false (Expected)\", function () {\r",
											"    const successful = pm.response.json().successful;\r",
											"    pm.expect(successful).to.be.false;\r",
											"});\r",
											"\r",
											"// Verify that 'resultType' is 3\r",
											"pm.test(\"Result type is 3 (Expected)\", function () {\r",
											"    const resultType = pm.response.json().resultType;\r",
											"    pm.expect(resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"// Verify that 'errorCode' property is 0\r",
											"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
											"    const errorCode = pm.response.json().errorCode;\r",
											"    pm.expect(errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"// Verify that 'responseCode' property is null\r",
											"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
											"    const responseCode = pm.response.json().responseCode;\r",
											"    pm.expect(responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6976e35a-1120-4373-893d-f91b8af34b96",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"beneficiaryName\": \"Reece Koch\",\n  \"bankName\": \"Bank 78\",\n  \"accountName\": \"Reece Koch\",\n  \"accountNumber\": \"1010001\",\n  \"emailAddress\": \"test8033@mailinator.com\",\n  \"countryCode\": \"+234\",\n  \"currencyCode\": \"NGN\",\n  \"address\": \"string\",\n  \"bankRequirementId\": \"1\",\n  \"bankRequirementValue\": \"BankCode\",\n  \"nameEnquiryId\": 963,\n  \"bankId\": 110072\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries"
							},
							"response": [
								{
									"id": "e64108d4-4d25-4935-b92d-e1ceba4fd696",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Beneficiary Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
										"exec": [
											"// Verify that the response has a 'result' object\r",
											"pm.test(\"Response has a 'result' object\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"// Verify that the 'result' object is null\r",
											"pm.test(\"'result' object is null (Expected)\", function () {\r",
											"    const result = pm.response.json().result;\r",
											"    pm.expect(result).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that the 'resultType' is 3\r",
											"pm.test(\"Result type is 3 (Expected)\", function () {\r",
											"    const resultType = pm.response.json().resultType;\r",
											"    pm.expect(resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"// Verify that the 'message' property is \"Response has validation errors\"\r",
											"pm.test(\"'message' property is 'Response has validation errors' (Expected)\", function () {\r",
											"    const message = pm.response.json().message;\r",
											"    pm.expect(message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"// Verify that 'validationMessages' property contains \"Beneficiary Name can only contain alphabets\"\r",
											"pm.test(\"Validation error message is 'Beneficiary Name can only contain alphabets' (Expected)\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Beneficiary Name can only contain alphabets\");\r",
											"});\r",
											"\r",
											"// Verify that 'successful' property is false\r",
											"pm.test(\"'successful' property is false (Expected)\", function () {\r",
											"    const successful = pm.response.json().successful;\r",
											"    pm.expect(successful).to.be.false;\r",
											"});\r",
											"\r",
											"// Verify that 'errorCode' property is 0\r",
											"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
											"    const errorCode = pm.response.json().errorCode;\r",
											"    pm.expect(errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"// Verify that 'responseCode' property is null\r",
											"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
											"    const responseCode = pm.response.json().responseCode;\r",
											"    pm.expect(responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5f9d3592-cda1-420c-88d7-e449b488d4ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"beneficiaryName\": \"123Koch\",\n  \"bankName\": \"Bank 78\",\n  \"accountName\": \"Reece Koch\",\n  \"accountNumber\": \"1010001719\",\n  \"emailAddress\": \"test8033@mailinator.com\",\n  \"countryCode\": \"+234\",\n  \"currencyCode\": \"NGN\",\n  \"address\": \"string\",\n  \"bankRequirementId\": \"1\",\n  \"bankRequirementValue\": \"BankCode\",\n  \"nameEnquiryId\": 963,\n  \"bankId\": 110072\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries"
							},
							"response": [
								{
									"id": "cfff6dac-1ae1-446d-9f1b-90f4580a1557",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Blank field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "918113a2-0257-4c46-abd8-c19c4ebcaa1a",
										"exec": [
											"// Verify that the response has a 'result' object\r",
											"pm.test(\"Response has a 'result' object\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    pm.expect(responseBody).to.have.property(\"result\");\r",
											"});\r",
											"\r",
											"// Verify that the 'result' object is null\r",
											"pm.test(\"'result' object is null (Expected)\", function () {\r",
											"    const result = pm.response.json().result;\r",
											"    pm.expect(result).to.be.null;\r",
											"});\r",
											"\r",
											"// Verify that the 'resultType' is 3\r",
											"pm.test(\"Result type is 3 (Expected)\", function () {\r",
											"    const resultType = pm.response.json().resultType;\r",
											"    pm.expect(resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"// Verify that the 'message' property is \"Response has validation errors\"\r",
											"pm.test(\"'message' property is 'Response has validation errors' (Expected)\", function () {\r",
											"    const message = pm.response.json().message;\r",
											"    pm.expect(message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"// Verify that 'validationMessages' property contains \"Beneficiary Name can only contain alphabets\"\r",
											"pm.test(\"Validation error message is 'Beneficiary Name can only contain alphabets' (Expected)\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Beneficiary Name can only contain alphabets\");\r",
											"});\r",
											"\r",
											"// Verify that 'successful' property is false\r",
											"pm.test(\"'successful' property is false (Expected)\", function () {\r",
											"    const successful = pm.response.json().successful;\r",
											"    pm.expect(successful).to.be.false;\r",
											"});\r",
											"\r",
											"// Verify that 'errorCode' property is 0\r",
											"pm.test(\"'errorCode' property is 0 (Expected)\", function () {\r",
											"    const errorCode = pm.response.json().errorCode;\r",
											"    pm.expect(errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"// Verify that 'responseCode' property is null\r",
											"pm.test(\"'responseCode' property is null (Expected)\", function () {\r",
											"    const responseCode = pm.response.json().responseCode;\r",
											"    pm.expect(responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9b5d77b9-6f95-429f-97a1-710ab21da1f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"beneficiaryName\": \"\",\n  \"bankName\": \"\",\n  \"accountName\": \"\",\n  \"accountNumber\": \"\",\n  \"emailAddress\": \"\",\n  \"countryCode\": \"\",\n  \"currencyCode\": \"\",\n  \"address\": \"\",\n  \"bankRequirementId\": \"\",\n  \"bankRequirementValue\": \"\",\n  \"nameEnquiryId\": \"\",\n  \"bankId\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries"
							},
							"response": [
								{
									"id": "d8b006f3-5d77-4f18-a7b3-30e758cb2e9d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "6defa482-9fd1-4401-a0de-9714a8db3d6c"
				},
				{
					"name": "Single Beneficiary",
					"item": [
						{
							"name": "Invalid ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78747a61-71f6-4701-b7ea-94ebe6464738",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is Bad Request\", function () {\r",
											"    pm.response.to.have.status('Bad Request');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Request Body Property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.null;\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is false\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 2\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(2);\r",
											"});\r",
											"\r",
											"pm.test(\"message is Beneficiary record not found\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Beneficiary record not found');\r",
											"});\r",
											"\r",
											"pm.test(\"successful is false\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"errorCode is 0\", function () {\r",
											"    pm.expect(jsonData.errorCode).to.eql(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b28d170e-12a7-4905-bd98-85b5279320f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries/94"
							},
							"response": [
								{
									"id": "8f69bfb8-8c88-4846-b98c-0d1215be0c84",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/transfers/beneficiaries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"transfers",
												"beneficiaries",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"accountName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"nameEnquiryId\": \"<integer>\",\n    \"accountId\": \"<long>\",\n    \"bankId\": \"<integer>\",\n    \"transferType\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Valid ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78747a61-71f6-4701-b7ea-94ebe6464738",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"// pm.test(\"Request Body Property\", function () {\r",
											"//     pm.expect(jsonData).to.be.an('object');\r",
											"//     pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"//     pm.expect(jsonData.result).to.be.null;\r",
											"//     pm.expect(jsonData.resultType).to.be.a('number');\r",
											"//     pm.expect(jsonData.message).to.be.a('string');\r",
											"//     pm.expect(jsonData.validationMessages).to.be.null;\r",
											"//     pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"//     pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"//     pm.expect(jsonData.responseCode).to.be.null;\r",
											"// });\r",
											"\r",
											"// pm.test(\"hasResult is false\", function () {\r",
											"//     pm.expect(jsonData.hasResult).to.eql(false);\r",
											"// });\r",
											"\r",
											"// pm.test(\"resultType is 2\", function () {\r",
											"//     pm.expect(jsonData.resultType).to.eql(2);\r",
											"// });\r",
											"\r",
											"// pm.test(\"message is Beneficiary record not found\", function () {\r",
											"//     pm.expect(jsonData.message).to.eql('Beneficiary record not found');\r",
											"// });\r",
											"\r",
											"// pm.test(\"successful is false\", function () {\r",
											"//     pm.expect(jsonData.successful).to.eql(false);\r",
											"// });\r",
											"\r",
											"// pm.test(\"errorCode is 0\", function () {\r",
											"//     pm.expect(jsonData.errorCode).to.eql(0);\r",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e3d0960a-785d-4dfa-b3f9-b5a008529b88",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries/177"
							},
							"response": [
								{
									"id": "af57e205-537c-4d9b-be97-8161468aaa82",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/transfers/beneficiaries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"transfers",
												"beneficiaries",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"accountName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"nameEnquiryId\": \"<integer>\",\n    \"accountId\": \"<long>\",\n    \"bankId\": \"<integer>\",\n    \"transferType\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "ff8e4a1b-f688-456d-8646-1cf61f1a1ac9"
				},
				{
					"name": "List All Beneficiaries",
					"item": [
						{
							"name": "List all beneficiaries by page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "003e7a63-5e14-4a58-981f-75050220ddb4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Request Body Property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
											"    pm.expect(jsonData.result).to.be.an('object');\r",
											"    pm.expect(jsonData.resultType).to.be.a('number');\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"    pm.expect(jsonData.validationMessages).to.be.null;\r",
											"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
											"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
											"    pm.expect(jsonData.responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"hasResult is true\", function () {\r",
											"    pm.expect(jsonData.hasResult).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType is 1\", function () {\r",
											"    pm.expect(jsonData.resultType).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"successful is true\", function () {\r",
											"    pm.expect(jsonData.successful).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"errorCode is 0\", function () {\r",
											"    pm.expect(jsonData.errorCode).to.eql(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7ab554a0-87ed-479e-a8da-81504e80586b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries/get-paged/1/20/%7B%7D"
							},
							"response": [
								{
									"id": "26330526-ecd4-42f8-97f3-f9580483b939",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/transfers/beneficiaries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"transfers",
												"beneficiaries",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"accountName\": \"<string>\",\n    \"accountNumber\": \"<string>\",\n    \"bankName\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"nameEnquiryId\": \"<integer>\",\n    \"accountId\": \"<long>\",\n    \"bankId\": \"<integer>\",\n    \"transferType\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "fc0af808-a616-4ec3-a448-a0aba74b3942"
				},
				{
					"name": "Edit details of a benficiary",
					"item": [
						{
							"name": "Edit Beneficiary",
							"item": [
								{
									"name": "Invalid ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f656241-c305-479e-ade1-d0aae2380fe2",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Request Body Property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
													"    pm.expect(jsonData.result).to.be.null;\r",
													"    pm.expect(jsonData.resultType).to.be.a('number');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.validationMessages).to.be.null;\r",
													"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
													"    pm.expect(jsonData.errorCode).to.be.a('number');\r",
													"    pm.expect(jsonData.responseCode).to.be.null;\r",
													"});\r",
													"\r",
													"pm.test(\"hasResult is false\", function () {\r",
													"    pm.expect(jsonData.hasResult).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"resultType is 2\", function () {\r",
													"    pm.expect(jsonData.resultType).to.eql(2);\r",
													"});\r",
													"\r",
													"pm.test(\"message is Beneficiary details not found\", function () {\r",
													"    pm.expect(jsonData.message).to.eql('Beneficiary details not found');\r",
													"});\r",
													"\r",
													"pm.test(\"successful is false\", function () {\r",
													"    pm.expect(jsonData.successful).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"errorCode is 0\", function () {\r",
													"    pm.expect(jsonData.errorCode).to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c42ac4e5-a7b3-4849-b8f9-86df50c450ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"33\",\n  \"beneficiaryName\": \"Golden Boy\",\n  \"bankName\": \"GoMoney\",\n  \"accountName\": \"Gold Launder\",\n  \"accountNumber\": \"9402762900\",\n  \"emailAddress\": \"user22@example.com\",\n  \"countryCode\": \"+234\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"200\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Save\",\n        \"dataValue\": \"Money\"\n      }\n    ]\n  },\n  \"address\": \"Port Harcourt\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "9652ac4b-fc91-40ac-815d-d010c9d3aa43",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Valid ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f656241-c305-479e-ade1-d0aae2380fe2",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"// pm.test(\"Request Body Property\", function () {\r",
													"//     pm.expect(jsonData).to.be.an('object');\r",
													"//     pm.expect(jsonData.hasResult).to.be.a('boolean');\r",
													"//     pm.expect(jsonData.result).to.be.null;\r",
													"//     pm.expect(jsonData.resultType).to.be.a('number');\r",
													"//     pm.expect(jsonData.message).to.be.a('string');\r",
													"//     pm.expect(jsonData.validationMessages).to.be.null;\r",
													"//     pm.expect(jsonData.successful).to.be.a('boolean');\r",
													"//     pm.expect(jsonData.errorCode).to.be.a('number');\r",
													"//     pm.expect(jsonData.responseCode).to.be.null;\r",
													"// });\r",
													"\r",
													"// pm.test(\"hasResult is false\", function () {\r",
													"//     pm.expect(jsonData.hasResult).to.eql(false);\r",
													"// });\r",
													"\r",
													"// pm.test(\"resultType is 2\", function () {\r",
													"//     pm.expect(jsonData.resultType).to.eql(2);\r",
													"// });\r",
													"\r",
													"// pm.test(\"message is Beneficiary details not found\", function () {\r",
													"//     pm.expect(jsonData.message).to.eql('Beneficiary details not found');\r",
													"// });\r",
													"\r",
													"// pm.test(\"successful is false\", function () {\r",
													"//     pm.expect(jsonData.successful).to.eql(false);\r",
													"// });\r",
													"\r",
													"// pm.test(\"errorCode is 0\", function () {\r",
													"//     pm.expect(jsonData.errorCode).to.eql(0);\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8eca9b4d-999e-421e-b06f-dde6f4cd30fb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"177\",\n  \"beneficiaryName\": \"Golden Boy\",\n  \"accountName\": \"Unyc Qi\",\n  \"accountNumber\": \"1010002178\",\n  \"bankName\": \"Bank \",\n  \"emailAddress\": \"user22@11example.com\",\n  \"countryCode\": \"+234\",\n  \"currencyRequirement\": {\n    \"name\": \"NGN\",\n    \"value\": \"200\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"Save\",\n        \"dataValue\": \"Money\"\n      }\n    ]\n  },\n  \"address\": \"Port Harcourt\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries"
									},
									"response": [
										{
											"id": "b443148d-b447-4cae-b5f6-4f61ce02600c",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "bba8c17b-8234-4063-a8a0-a95a4b457b7a"
						},
						{
							"name": "Delete Beneficiary",
							"item": [
								{
									"name": "Delete Beneficiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "947aef94-466d-4ace-a69b-e49942a70b50",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.hasResult).to.be,a('boolean');\r",
													"    pm.expect(jsonData.result).to.be.an('object');\r",
													"    pm.expect(jsonData.resultType).to.be.a('number');\r",
													"    pm.expect(jsonData.message).to.be.null;\r",
													"    pm.expect(jsonData.validationMessages).to.be.null;\r",
													"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
													"    pm.expect(jsonData.errorCode).to.eql('number');\r",
													"    pm.expect(jsonData.responseCode).to.be.null;\r",
													"});\r",
													"\r",
													"pm.test(\"hasResult is true\", function () {\r",
													"    pm.expect(jsonData.hasResult).to.eql('true');\r",
													"});\r",
													"\r",
													"pm.test(\"result is Beneficiary successfully deleted\", function () {\r",
													"    pm.expect(jsonData.result.message).to.eql('Beneficiary successfully deleted');\r",
													"});\r",
													"\r",
													"pm.test(\"resultType is 1\", function () {\r",
													"    pm.expect(jsonData.resultType).to.eql(1);\r",
													"});\r",
													"\r",
													"pm.test(\"errorCode\", function () { \r",
													"    pm.expect(jsonData.errorCode).to.eql(0);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e4507a91-e35a-495d-a84e-968c7f593500",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries/177"
									},
									"response": [
										{
											"id": "a5dd6113-7e9b-4ecb-81d0-4ccbd16c3af3",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Deleted Beneficiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "947aef94-466d-4ace-a69b-e49942a70b50",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.hasResult).to.be,a('boolean');\r",
													"    pm.expect(jsonData.result).to.be.an('object');\r",
													"    pm.expect(jsonData.resultType).to.be.a('number');\r",
													"    pm.expect(jsonData.message).to.be.null;\r",
													"    pm.expect(jsonData.validationMessages).to.be.null;\r",
													"    pm.expect(jsonData.successful).to.be.a('boolean');\r",
													"    pm.expect(jsonData.errorCode).to.eql('number');\r",
													"    pm.expect(jsonData.responseCode).to.be.null;\r",
													"});\r",
													"\r",
													"pm.test(\"hasResult is true\", function () {\r",
													"    pm.expect(jsonData.hasResult).to.eql('true');\r",
													"});\r",
													"\r",
													"pm.test(\"result is Beneficiary successfully deleted\", function () {\r",
													"    pm.expect(jsonData.result.message).to.eql('Beneficiary successfully deleted');\r",
													"});\r",
													"\r",
													"pm.test(\"resultType is 1\", function () {\r",
													"    pm.expect(jsonData.resultType).to.eql(1);\r",
													"});\r",
													"\r",
													"pm.test(\"errorCode\", function () { \r",
													"    pm.expect(jsonData.errorCode).to.eql(0);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2e0d700c-f44a-49cb-b25a-3e3efcc74685",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{business_access_token}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "x-api-key",
												"value": "{{x-api-key}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/transfer/api/v1/transfers/beneficiaries/177"
									},
									"response": [
										{
											"id": "3131c576-9cb1-455f-9bf8-0b8729a6a9ec",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountName\": \" iL \",\n  \"accountNumber\": \"759117742\",\n  \"bankName\": \"Aju 6\\fW \",\n  \"beneficiaryName\": \"VxU\\tP\",\n  \"countryCode\": \"<string>\",\n  \"currencyRequirement\": {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\",\n    \"forms\": [\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      },\n      {\n        \"dataLabel\": \"<string>\",\n        \"dataValue\": \"<string>\"\n      }\n    ]\n  },\n  \"emailAddress\": \"<email>\",\n  \"address\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/v1/transfers/beneficiaries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "d2d61fdd-3239-4f52-8dc0-fe2da1bf3f08"
						}
					],
					"id": "3987cc62-97d1-42e9-8396-504db3427216"
				}
			],
			"id": "d93c8035-e97f-45fa-81de-e3ded284d105"
		},
		{
			"name": "SavingsPlan",
			"item": [
				{
					"name": "Login Copy",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cbbe3ec-ec6a-449c-b893-0f648dd308b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is present in the response\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.exist;\r",
											"});\r",
											"\r",
											"pm.test(\"Access token is a non-empty string\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"Set access token as an environmental variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"customer_access_token\", jsonData.access_token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "44d4b9cf-0cbc-448a-a779-8f8a3f5ae501",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "grant_type can either be password, client_credentials or refresh_token",
											"key": "grant_type",
											"value": "password"
										},
										{
											"description": "username= test1860@mailinator.com, test6900, {{latest_cust_email}}",
											"key": "username",
											"value": "test8033@mailinator.com"
										},
										{
											"description": "password",
											"key": "password",
											"value": "Tested@0980"
										},
										{
											"description": "client_id",
											"key": "client_id",
											"value": "ECBEECBC7CE5434DBA509B9375203EC1"
										},
										{
											"description": "client_secret",
											"key": "client_secret",
											"value": "E166C7F9E6EA4D899A499EE239FCD930"
										}
									]
								},
								"url": "{{baseUrl}}/identity/connect/token",
								"description": "Get Auth Token"
							},
							"response": [
								{
									"id": "af1e6e90-f435-426f-b947-5ee3f934f444",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "grant_type can either be password, client_credentials or refresh_token",
													"key": "grant_type",
													"value": "<string>"
												},
												{
													"description": "username",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "password",
													"key": "password",
													"value": "<string>"
												},
												{
													"description": "client_id",
													"key": "client_id",
													"value": "<string>"
												},
												{
													"description": "client_secret",
													"key": "client_secret",
													"value": "<string>"
												}
											]
										},
										"url": "{{baseUrl}}/connect/token"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"access_token\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "33109477-ea18-45cf-ac7c-e0e7e1587860"
				},
				{
					"name": "Add A Savings",
					"item": [
						{
							"name": "Succcessful Savings Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "869427a4-38ed-4a5a-a51b-109cf1f9360e",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'resultType' property with value '1'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'message' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'validationMessages' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'successful' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'errorCode' property with value '0'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'responseCode' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' property contains a 'message' property with value 'Plan created successfully'\", function() {\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"message\", \"Plan created successfully\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "de9d2b0e-2430-4098-89c1-24d806afea08",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"3\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Business plan\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"targetAmount\": \"500\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"100\",\n  \"savingStartDate\": \"2027-09-23T07:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "81dbfe35-362c-4a1b-b67f-b4d3b9098bf7",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Date required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86265b60-3838-4aa2-9cb7-51a942036404",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' property is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' property is 3\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(3);",
											"});",
											"",
											"pm.test(\"Response 'message' property is 'Response has validation errors'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' property is an array with specific messages\", function () {",
											"    const validationMessages = pm.response.json().validationMessages;",
											"    pm.expect(validationMessages).to.be.an('array');",
											"    pm.expect(validationMessages).to.include(\"'Saving Start Date' must not be empty.\");",
											"    pm.expect(validationMessages).to.include(\"Kindly specify the saving start date\");",
											"});",
											"",
											"pm.test(\"Response 'successful' property is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' property is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' property is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d0c66fbf-d216-44de-95dc-12441fbf7418",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"3\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"First month (october)\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/savings/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "e0883cfd-a95b-4567-a768-b54c2b081fa6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Frequency that doesn't exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6d495db-64e9-4259-8250-b186b4a9f74e",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The field Frequency is invalid.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d84cb73e-f8c1-402b-a858-761b7813a3f6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"100\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"New Savings Plan\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2027-09-23T07:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "7a0fd862-b6e1-42ce-84d7-ce7543d6dad2",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Days Required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd77f933-67ef-4a55-8fbe-9f0f2bfffa6b",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Int32'. Path 'maturityDays', line 4, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1237863e-77ef-44fe-8e16-439b93f83177",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "8b94a901-42e4-49d1-8634-3cca5b733002",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Number at 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a6f373e-cbfb-4cd6-8049-97beb4bf6eef",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Please supply a maturity value in days\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5b388586-f2e1-4f36-ab2c-30435359aaae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"0\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{bussAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "52e6eed1-dd51-4a8d-95b8-1dec23129348",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Account number is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91ec3b44-4040-465a-aa5a-66e375081f56",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The SourceAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f0a38e2b-fa67-4363-964e-1b31237e23f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "ab896785-1ebd-444f-85b7-f10f29bce6aa",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Savings Amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b51c0d57-1bab-49cc-beec-679c13c003ae",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'savingAmount', line 10, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4b6d2752-539d-4b1f-9d24-8713de9d4e13",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "2290c2ad-9fd5-4015-98c9-3b45a581146a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Target amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b3fc5e3-a1dc-4610-b983-25ac3dc30fb8",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'targetAmount', line 8, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ac653847-6400-49b5-9d41-1808fb9bc94b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "d87492dc-d862-4aa8-9421-4ec3c79f8124",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Plan name is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac9ea620-51d2-4ae4-81c4-130d624f208f",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The PlanName field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d28c14ba-6482-49cf-a284-3edf2f2f2165",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "2aa018f2-a99b-41ba-a218-ee9a3558f5aa",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Target Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "864f94bc-88e8-474e-86c6-0d9f9c29862d",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with two messages\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(2);\r",
											"    pm.expect(validationMessages).to.include(\"The field SavingAmount must be between 1 and 2147483647.\");\r",
											"    pm.expect(validationMessages).to.include(\"Savings target amount is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2195e171-3a96-458e-ac18-8a03933aa319",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"-100\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"-400\",\n  \"savingStartDate\": \"2024-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "c99a297a-856c-4090-a955-f2b1f4e77f36",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid product ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eec0901e-3ced-473d-990e-67d633100383",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Error creating savings plan: Invalid saving product ID'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Error creating savings plan: Invalid saving product ID\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "57b79c5f-5800-4090-a62c-0411e3877ff6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid Product ID\",\n  \"savingsProductId\": \"1000\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "0e89d23a-6b73-49c7-af8c-347ffc5dbe4e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Start date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c177700-8502-4ec4-8a7b-894a3b310fb9",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Invalid Saving's Start date, date must be greater than or equals to today'\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Invalid Saving's Start date, date must be greater than or equals to today\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2f77f7ae-fbd2-4281-9eff-22049202a072",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid start date\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2022-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "4cb7d825-98a8-4b42-b26e-cd8a5d310ba8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "bc00ab59-ccb0-4e93-aca6-704b75219443"
				},
				{
					"name": "Edit Savings Plan",
					"item": [
						{
							"name": "Succcessful Savings Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdf4fc54-a642-4d25-8bd5-9b3dfa5f3011",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'resultType' property with value '1'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'message' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'validationMessages' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"validationMessages\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'successful' property with value 'true'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'errorCode' property with value '0'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"errorCode\", 0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'responseCode' property with value 'null'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"responseCode\", null);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' property contains a 'message' property with value 'Plan updated successfully'\", function() {\r",
											"    pm.expect(pm.response.json().result).to.have.property(\"message\", \"Plan updated successfully\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f5da2b29-d318-4457-a1d9-88362e7bc014",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"2\",\n  \"maturityDays\": \"10\",\n  \"planName\": \"Updated Plan\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"4000\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"3000\",\n  \"savingStartDate\": \"2025-09-23T07:15:00.942Z\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "a5381227-12e5-49c5-80e0-db271a63ce1d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Date required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86265b60-3838-4aa2-9cb7-51a942036404",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' property is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' property is 3\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(3);",
											"});",
											"",
											"pm.test(\"Response 'message' property is 'Response has validation errors'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' property is an array with specific messages\", function () {",
											"    const validationMessages = pm.response.json().validationMessages;",
											"    pm.expect(validationMessages).to.be.an('array');",
											"    pm.expect(validationMessages).to.include(\"'Saving Start Date' must not be empty.\");",
											"    pm.expect(validationMessages).to.include(\"Kindly specify the saving start date\");",
											"});",
											"",
											"pm.test(\"Response 'successful' property is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' property is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' property is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a2c5901b-5453-4950-9517-1915fefc4a18",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"3\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"First month (october)\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "df934550-46de-4361-a984-70899a6f40f5",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Frequency that doesn't exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6d495db-64e9-4259-8250-b186b4a9f74e",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The field Frequency is invalid.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "85878104-5c94-46d6-ac2a-cf1bc6fbb977",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"100\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"New Savings Plan\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2027-09-23T07:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "d531d908-8b7b-4a9d-8231-52a33b0b037f",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Days Required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd77f933-67ef-4a55-8fbe-9f0f2bfffa6b",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Int32'. Path 'maturityDays', line 4, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "33672836-ba9c-4422-9175-39bd4fa68c5d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "778258a3-598b-4535-86ef-cd942ea751be",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity Number at 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a6f373e-cbfb-4cd6-8049-97beb4bf6eef",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Please supply a maturity value in days\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2e790af2-7515-4bd6-be4e-c3f9a9c969cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"0\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"false\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\",\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "0268c8de-0cdc-49e2-b804-a997b4df902e",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Account number is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91ec3b44-4040-465a-aa5a-66e375081f56",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The SourceAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "28a3a555-3262-42d4-9683-731a9b1099c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "a8d19112-58e8-4d81-bc50-f4a51aa1873a",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Savings Amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b51c0d57-1bab-49cc-beec-679c13c003ae",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'savingAmount', line 10, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cade6bf7-0b44-46be-b6db-0b20ea660d3f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"\",\n  \"savingStartDate\": \"2023-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "872ddb09-cc7e-4d5a-a911-488e7cdcc114",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Target amount required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b3fc5e3-a1dc-4610-b983-25ac3dc30fb8",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"Error converting value {null} to type 'System.Decimal'. Path 'targetAmount', line 8, position 20.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "76d5553c-f59e-4ce0-b29b-b89cb0ad0bce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "baeb648a-cdfc-4718-8445-672541a08beb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Plan name is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac9ea620-51d2-4ae4-81c4-130d624f208f",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one message\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(1);\r",
											"    pm.expect(validationMessages[0]).to.equal(\"The PlanName field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "051cfa34-18ff-44fd-a873-cc3d0ff2fe42",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "63acd406-30d6-4ae3-bfa2-27a8c8c1a5d9",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Target Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "864f94bc-88e8-474e-86c6-0d9f9c29862d",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with two messages\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.be.an('array');\r",
											"    pm.expect(validationMessages).to.have.lengthOf(2);\r",
											"    pm.expect(validationMessages).to.include(\"The field SavingAmount must be between 1 and 2147483647.\");\r",
											"    pm.expect(validationMessages).to.include(\"Savings target amount is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c41b281e-a086-4a3f-97c8-b43f9b84a753",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"withdraw immediately\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"-100\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"-400\",\n  \"savingStartDate\": \"2024-09-23T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "70838b8a-3c94-4360-82e6-3b4195db06e8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid product ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eec0901e-3ced-473d-990e-67d633100383",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Error updating savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Error updating savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fd8bb70c-715b-4c9f-815e-99b1079485c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid Product ID\",\n  \"savingsProductId\": \"1000\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2024-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "1f2f1324-e8c8-418b-9175-c53b4f5c0f30",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Start date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c177700-8502-4ec4-8a7b-894a3b310fb9",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Invalid Saving's Start date, date must be greater than or equals to today'\", function () {\r",
											"    const validationMessages = pm.response.json().validationMessages;\r",
											"    pm.expect(validationMessages).to.include(\"Invalid Saving's Start date, date must be greater than or equals to today\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "48138962-2448-4456-bfb9-07f5afe796f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\": \"1\",\n  \"frequency\": \"1\",\n  \"maturityDays\": \"1\",\n  \"planName\": \"Invalid start date\",\n  \"savingsProductId\": \"4\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"targetAmount\": \"200\",\n  \"autoSave\": \"true\",\n  \"savingAmount\": \"400\",\n  \"savingStartDate\": \"2022-09-20T23:15:00.942Z\",\n  \"productCode\": \"100\",\n  \"savingPlanId\": \"26\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan"
							},
							"response": [
								{
									"id": "055b448e-3f09-49ff-8271-165d78f0fac8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channel\": null,\n  \"frequency\": null,\n  \"maturityDays\": \"<integer>\",\n  \"planName\": \"<string>\",\n  \"savingsProductId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"targetAmount\": \"<double>\",\n  \"autoSave\": \"<boolean>\",\n  \"savingAmount\": \"<double>\",\n  \"savingStartDate\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "ecf31f5d-b66d-417e-bbbf-b30fbf4b2466"
				},
				{
					"name": "deposit into savings plan",
					"item": [
						{
							"name": "Successful Deposit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cdf61fa9-5917-444f-8a65-059e0841fc29",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"The hasResult field should be a boolean\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');",
											"});",
											"",
											"",
											"pm.test(\"The 'result' field is an object\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('object');",
											"});",
											"",
											"",
											"pm.test(\"Validate resultType field is a number\", function() {",
											"  const responseData = pm.response.json();",
											"",
											"  pm.expect(responseData.resultType).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to true\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'result' is an object\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('object');",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 1\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(1);",
											"});",
											"",
											"pm.test(\"Response 'message' is null\", function () {",
											"    pm.expect(pm.response.json().message).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is true\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'result' has 'reference' property\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('reference');",
											"});",
											"",
											"pm.test(\"Response 'result' has 'message' property\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('message');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7bd5558e-f5f9-4eed-893d-496fc8f525d3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"144\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "88332339-5afb-4fb5-9870-ed8595b1830d",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "PIN is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84e7ed46-dacc-4e4e-a6ca-ab03fc72ba1f",
										"exec": [
											"",
											"pm.test(\"Response status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.equal(400);",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 3\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(3);",
											"});",
											"",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is an array with one element\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.an('array').that.has.lengthOf(1);",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' contains 'Transaction PIN is required'\", function () {",
											"    pm.expect(pm.response.json().validationMessages[0]).to.equal(\"Transaction PIN is required\");",
											"});",
											"",
											"pm.test(\"Response 'successful' is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b5176b7f-d661-40e3-af21-33793e442dee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "11a735f5-ecca-47ba-9d41-26e3580236da",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5eadb2c-296d-40f3-8774-49829f275dfd",
										"exec": [
											"",
											"pm.test(\"Response status code is 400\", function () {",
											"  pm.expect(pm.response.code).to.equal(400);",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to false\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'result' is null\", function () {",
											"    pm.expect(pm.response.json().result).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 2\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(2);",
											"});",
											"",
											"pm.test(\"Response 'message' is 'Invalid Transaction PIN'\", function () {",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is false\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(false);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 1003\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(1003);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is 'BANK78BP01002'\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.equal(\"BANK78BP01002\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "105b14cb-8617-48f5-afdd-7692ebe8dacb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6300\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "cbddb3c3-47c7-4080-86e3-2782b9bcc423",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "986ef805-102a-4772-a288-6acd32d9607a",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Deposit amount is required'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"Deposit amount is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a60b00b8-0d44-4db2-b6bd-7aaa5f461d2d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "2e8ace7d-af02-48a1-b3a3-f59cbd7f4dc8",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Amount field is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6900b1d1-e154-458b-b791-92ca396e2021",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Error converting value {null} to type 'System.Decimal'. Path 'amount', line 2, position 14.'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"Error converting value {null} to type 'System.Decimal'. Path 'amount', line 2, position 14.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1fbfa530-9e5e-4f88-8551-bf1340da1392",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "8b0842dc-8427-4441-975a-5aa7bbe34dee",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Source Account Required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "646ee3c5-86dd-4ffd-bbb7-80a7a110dd8e",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'The SourceAccountNo field is required.'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The SourceAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "770f2d8b-9d8e-4664-b4d2-7ff64d077152",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"sourceAccountNo\": \"\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "cc83729e-1be5-44c3-8efa-72fd9f9ea702",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid savings plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3ab7dc0-a1b0-4846-8de9-bbd8697d7ce9",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Plan deposit failed No active savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Plan deposit failed No active savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2eab98a2-aec3-4a6f-bb66-d203396929c6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"100\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"9000\",\n  \"sourceAccountNo\": \"{{sourceAccount}}\",\n  \"transactionPin\": \"6383\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/deposit"
							},
							"response": [
								{
									"id": "e53b078c-7cfd-42e5-984d-17d32f7e9740",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"sourceAccountNo\": \"<string>\",\n  \"transactionPin\": \"9062\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/deposit"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"reference\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "b4e2d6b5-e6ff-47b4-95b4-e4e84c2101a5"
				},
				{
					"name": "withdraw from savings plan",
					"item": [
						{
							"name": "Successful Withdrawal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff1dabd6-7050-44fc-a14b-9a463eaf0b04",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');",
											"});",
											"",
											"",
											"pm.test(\"The 'result' field must exist and be an object\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');",
											"});",
											"",
											"pm.test(\"The 'result' field must have 'message' and 'reference' properties\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.result.message).to.exist.and.to.be.a('string');",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string');",
											"});",
											"",
											"",
											"pm.test(\"The resultType field should be a number\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.resultType).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Response has 'hasResult' set to true\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'result' is an object\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('object');",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 1\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(1);",
											"});",
											"",
											"pm.test(\"Response 'message' is null\", function () {",
											"    pm.expect(pm.response.json().message).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is true\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'result' contains 'message'\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('message');",
											"});",
											"",
											"pm.test(\"Response 'result' contains 'reference'\", function () {",
											"    pm.expect(pm.response.json().result).to.have.property('reference');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "862257f7-9cbb-4c96-8113-00ebf3d4e0ca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"3\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://sandbox.bank78.co/savings/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "8b9db0a3-8fad-4329-a17c-0c0fdc83db4c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Maturity not reached",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea276224-4c53-4ff3-9b57-adb8227811c6",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Plan product does not allow immatured withdrawals'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Plan product does not allow immatured withrawals\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "429b8bda-e374-4da8-bc5b-98d831d06235",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"5\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "fe563232-ff3b-46ac-aac3-1503ed1c8a83",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Insufficient balance for withdrawal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05159d0b-8b7d-44d6-af11-967ebb25f097",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Insufficient balance on your savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Insufficient balance on your savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 1010\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(1010);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is 'BANK78BP01009'\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.equal(\"BANK78BP01009\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4861b442-eac6-471a-9c5d-10905001ba26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"26\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "992a79c8-c01b-4264-962f-76318d838b54",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Withdrawal to another account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e7b9e1d-eb41-49df-9b8a-26154044e4c5",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'hasResult' field should be a boolean\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The 'result' field must exist and be an object\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result).to.exist.and.to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"The 'result' field must have 'message' and 'reference' properties\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData.result.message).to.exist.and.to.be.a('string');\r",
											"    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The resultType field should be a number\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData.resultType).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'hasResult' set to true\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is an object\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 1\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is null\", function () {\r",
											"    pm.expect(pm.response.json().message).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is true\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' contains 'message'\", function () {\r",
											"    pm.expect(pm.response.json().result).to.have.property('message');\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' contains 'reference'\", function () {\r",
											"    pm.expect(pm.response.json().result).to.have.property('reference');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "475721d8-a606-4535-a116-ab2643faafe4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{bussAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "6533ec7a-2441-457b-a944-772bc00c2b7c",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Pin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b50bf8d4-3e2c-469b-a767-073df42c4559",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Invalid Transaction PIN'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Invalid Transaction PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 1003\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(1003);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is 'BANK78BP01002'\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.equal(\"BANK78BP01002\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9c5017d1-a40b-41e8-9476-59957ab3431c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6130\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "fc01043b-9d6c-4fb8-92de-116135fffd8b",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Pin is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cf14c57-ec2b-4e87-a676-d79f6144e4df",
										"exec": [
											"\r",
											"pm.test(\"Response status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is an array with one element\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.an('array').that.has.lengthOf(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' contains 'Transaction PIN is required'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages[0]).to.equal(\"Transaction PIN is required\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a8603805-74d9-4028-b9ab-990b2e975e05",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "3989c695-6da3-4f00-a6d0-264fd7d587ba",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Amount field is required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8034625-56da-456e-9097-f5dc4e970664",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'The Amount field is required'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The Amount field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "757652f3-1053-4739-9074-c947847efaba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "a9c39e65-b95e-4848-bb4d-3298675311eb",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d5d2e70-5b25-4a3b-8d15-cd9d56220394",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"The amount specified must be greater than 0\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The amount specified must be greater than 0\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "395c6d69-e717-4b00-a399-96cacb4e87b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"-200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "eea3a7cf-3f22-4036-b973-f08a708139f1",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid savings plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c496a0d9-bf92-4317-8468-7fc64d878987",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 2\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Plan withdrawal failed No active savings plan'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Plan withdrawal failed No active savings plan\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9f9ba680-385b-4bcd-8315-f8e52112e2b0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"9000\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{{sourceAccount}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "0e78f62a-15f0-4700-9e34-693ef21da7e3",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Invalid Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2f1d38e-6665-4204-9b0b-7a1da2545126",
										"exec": [
											"pm.test(\"Response has a 'hasResult' property with value 'false'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"hasResult\", false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'resultType' property with value '3'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"resultType\", 3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'message' property with value 'Response has validation errors'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"message\", \"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response has a 'successful' property with value 'false'\", function() {\r",
											"    pm.expect(pm.response.json()).to.have.property(\"successful\", false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response has 'validationMessages' property which is an array\", function() {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Validation message mentions 'Credit account number should only be digits and at least 10 digits'\", function() {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"Credit account number should only be digits and at least 10 digits\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0926b5c0-903b-4d7e-a736-8b538d44d6a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"{1010001dfhaj}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "874173f6-206b-4589-b9e0-0789fe1f3638",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Account field required",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ebb2667-17d9-4544-aa41-f49abe1d74cc",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to false\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is null\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 3\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(3);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is 'Response has validation errors'\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Response has validation errors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' array contains 'The CreditAccountNo field is required.'\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.include(\"The CreditAccountNo field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is false\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b61cc77e-9666-4591-a420-cd1fe5f59a4b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"200\",\n  \"channel\": \"1\",\n  \"savingPlanId\": \"8\",\n  \"transactionPin\": \"6383\",\n  \"creditAccountNo\": \"\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/withdraw"
							},
							"response": [
								{
									"id": "aa35f36e-9c8f-4bfb-a98f-5022a3621c40",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": \"<double>\",\n  \"channel\": null,\n  \"savingPlanId\": \"<integer>\",\n  \"transactionPin\": \"9041\",\n  \"creditAccountNo\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/withdraw"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\",\n    \"reference\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "57fca188-e3f6-4da0-8b93-9c550e6807ca"
				},
				{
					"name": "View Single Plan",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "215cfbb4-39b7-4336-bcb2-e4ca367daad3",
										"exec": [
											"",
											"pm.test(\"Response has 'hasResult' set to true\", function () {",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'result' is an object\", function () {",
											"    pm.expect(pm.response.json().result).to.be.an('object');",
											"});",
											"",
											"pm.test(\"Response 'resultType' is 1\", function () {",
											"    pm.expect(pm.response.json().resultType).to.equal(1);",
											"});",
											"",
											"pm.test(\"Response 'message' is null\", function () {",
											"    pm.expect(pm.response.json().message).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'validationMessages' is null\", function () {",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;",
											"});",
											"",
											"pm.test(\"Response 'successful' is true\", function () {",
											"    pm.expect(pm.response.json().successful).to.equal(true);",
											"});",
											"",
											"pm.test(\"Response 'errorCode' is 0\", function () {",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);",
											"});",
											"",
											"pm.test(\"Response 'responseCode' is null\", function () {",
											"    pm.expect(pm.response.json().responseCode).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'accruedInterest' is a number\", function () {",
											"    pm.expect(pm.response.json().result.accruedInterest).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'daysBeforeMaturity' is a number\", function () {",
											"    pm.expect(pm.response.json().result.daysBeforeMaturity).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'frequency' is a string\", function () {",
											"    pm.expect(pm.response.json().result.frequency).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'id' is a number\", function () {",
											"    pm.expect(pm.response.json().result.id).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'userId' is a string\", function () {",
											"    pm.expect(pm.response.json().result.userId).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'hasInterest' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.hasInterest).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'autoSave' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.autoSave).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'frequencyId' is a number\", function () {",
											"    pm.expect(pm.response.json().result.frequencyId).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'targetAmount' is a number\", function () {",
											"    pm.expect(pm.response.json().result.targetAmount).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'planName' is a string\", function () {",
											"    pm.expect(pm.response.json().result.planName).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'sourceAccountNo' is a string\", function () {",
											"    pm.expect(pm.response.json().result.sourceAccountNo).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'sourceAccountName' is a string\", function () {",
											"    pm.expect(pm.response.json().result.sourceAccountName).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'savingsProductId' is a number\", function () {",
											"    pm.expect(pm.response.json().result.savingsProductId).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'totalSavings' is a number\", function () {",
											"    pm.expect(pm.response.json().result.totalSavings).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'isActive' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.isActive).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'savingStartDate' is a string\", function () {",
											"    pm.expect(pm.response.json().result.savingStartDate).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'shouldLockSavings' is a boolean\", function () {",
											"    pm.expect(pm.response.json().result.shouldLockSavings).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"Result 'lockDuration' is a number\", function () {",
											"    pm.expect(pm.response.json().result.lockDuration).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'lastWithdrawalDate' is null\", function () {",
											"    pm.expect(pm.response.json().result.lastWithdrawalDate).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'lastWithdrawalAmount' is null\", function () {",
											"    pm.expect(pm.response.json().result.lastWithdrawalAmount).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'maturityDate' is a string\", function () {",
											"    pm.expect(pm.response.json().result.maturityDate).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Result 'savingAmount' is a number\", function () {",
											"    pm.expect(pm.response.json().result.savingAmount).to.be.a('number');",
											"});",
											"",
											"pm.test(\"Result 'accruedinterest' is null\", function () {",
											"    pm.expect(pm.response.json().result.accruedinterest).to.be.null;",
											"});",
											"",
											"pm.test(\"Result 'lastInterestPaidDate' is null\", function () {",
											"    pm.expect(pm.response.json().result.lastInterestPaidDate).to.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "adf62986-59bc-4b17-b576-104e5121ff36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/26"
							},
							"response": [
								{
									"id": "2bc3cd9a-cb4c-402e-95e6-0041d48f23b6",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"frequencyId\": null,\n    \"maturityDays\": \"<integer>\",\n    \"planName\": \"<string>\",\n    \"referenceNumber\": \"<string>\",\n    \"savingAmount\": \"<double>\",\n    \"sourceAccountName\": \"<string>\",\n    \"sourceAccountNo\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"hasInterest\": \"<boolean>\",\n    \"autoSave\": \"<boolean>\",\n    \"targetAmount\": \"<double>\",\n    \"savingsProductId\": \"<integer>\",\n    \"totalSavings\": \"<double>\",\n    \"isActive\": \"<boolean>\",\n    \"lastSavingsAmount\": \"<double>\",\n    \"lastSavingsDate\": \"<dateTime>\",\n    \"savingStartDate\": \"<dateTime>\",\n    \"shouldLockSavings\": \"<boolean>\",\n    \"lockDuration\": \"<integer>\",\n    \"lastWithdrawalDate\": \"<dateTime>\",\n    \"lastWithdrawalAmount\": \"<double>\",\n    \"maturityDate\": \"<dateTime>\",\n    \"accruedinterest\": \"<double>\",\n    \"lastInterestPaidDate\": \"<dateTime>\",\n    \"interestIsUp\": \"<boolean>\",\n    \"accruedInterestPercentage\": \"<double>\",\n    \"nextAutoSaveDate\": \"<dateTime>\",\n    \"nextWithdrawalDate\": \"<dateTime>\",\n    \"hasMatured\": \"<boolean>\",\n    \"endedOn\": \"<dateTime>\",\n    \"accruedInterest\": \"<double>\",\n    \"frequency\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "dd8a29cb-f55b-43ce-b966-1abdf323120a"
				},
				{
					"name": "List savings plan",
					"item": [
						{
							"name": "Get Paged",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b09eddf-a8c6-410b-bcd4-d3fb5b8a96ad",
										"exec": [
											"pm.test(\"Response has 'hasResult' set to true\", function () {\r",
											"    pm.expect(pm.response.json().hasResult).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'result' is an object\", function () {\r",
											"    pm.expect(pm.response.json().result).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'resultType' is 1\", function () {\r",
											"    pm.expect(pm.response.json().resultType).to.equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'message' is null\", function () {\r",
											"    pm.expect(pm.response.json().message).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'validationMessages' is null\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'successful' is true\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'errorCode' is 0\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Response 'responseCode' is null\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Result 'items' is an array\", function () {\r",
											"    pm.expect(pm.response.json().result.items).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Result 'total' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.total).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Result 'info' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.info).to.be.a('number');\r",
											"});\r",
											"\r",
											"// Assertions for the first item in the 'items' array\r",
											"pm.test(\"Item 1 'accruedInterest' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].accruedInterest).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'frequency' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].frequency).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'id' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].id).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'userId' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].userId).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'hasInterest' is a boolean\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].hasInterest).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'autoSave' is a boolean\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].autoSave).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'frequencyId' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].frequencyId).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'targetAmount' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].targetAmount).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'planName' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].planName).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'sourceAccountNo' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].sourceAccountNo).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'sourceAccountName' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].sourceAccountName).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'savingsProductId' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].savingsProductId).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'totalSavings' is a number\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].totalSavings).to.be.a('number');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'isActive' is a boolean\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].isActive).to.be.a('boolean');\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'lastSavingsAmount' is null\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].lastSavingsAmount).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'lastSavingsDate' is null\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].lastSavingsDate).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Item 1 'savingStartDate' is a string\", function () {\r",
											"    pm.expect(pm.response.json().result.items[0].savingStartDate).to.be.a('string');\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dd8959d0-f368-4028-bc84-30de2c0e3ad5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/getpaged/1/10/%7B%7D",
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "2b3ac38a-8ccf-4eca-9462-9698588d2c60",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/getpaged/:page/:pagesize/:whereCondition",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"getpaged",
												":page",
												":pagesize",
												":whereCondition"
											],
											"variable": [
												{
													"key": "page"
												},
												{
													"key": "pagesize"
												},
												{
													"key": "whereCondition"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"items\": [\n      {\n        \"frequencyId\": null,\n        \"maturityDays\": \"<integer>\",\n        \"planName\": \"<string>\",\n        \"referenceNumber\": \"<string>\",\n        \"savingAmount\": \"<double>\",\n        \"sourceAccountName\": \"<string>\",\n        \"sourceAccountNo\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"hasInterest\": \"<boolean>\",\n        \"autoSave\": \"<boolean>\",\n        \"targetAmount\": \"<double>\",\n        \"savingsProductId\": \"<integer>\",\n        \"totalSavings\": \"<double>\",\n        \"isActive\": \"<boolean>\",\n        \"lastSavingsAmount\": \"<double>\",\n        \"lastSavingsDate\": \"<dateTime>\",\n        \"savingStartDate\": \"<dateTime>\",\n        \"shouldLockSavings\": \"<boolean>\",\n        \"lockDuration\": \"<integer>\",\n        \"lastWithdrawalDate\": \"<dateTime>\",\n        \"lastWithdrawalAmount\": \"<double>\",\n        \"maturityDate\": \"<dateTime>\",\n        \"accruedinterest\": \"<double>\",\n        \"lastInterestPaidDate\": \"<dateTime>\",\n        \"interestIsUp\": \"<boolean>\",\n        \"accruedInterestPercentage\": \"<double>\",\n        \"nextAutoSaveDate\": \"<dateTime>\",\n        \"nextWithdrawalDate\": \"<dateTime>\",\n        \"hasMatured\": \"<boolean>\",\n        \"endedOn\": \"<dateTime>\",\n        \"accruedInterest\": \"<double>\",\n        \"frequency\": \"<string>\"\n      },\n      {\n        \"frequencyId\": null,\n        \"maturityDays\": \"<integer>\",\n        \"planName\": \"<string>\",\n        \"referenceNumber\": \"<string>\",\n        \"savingAmount\": \"<double>\",\n        \"sourceAccountName\": \"<string>\",\n        \"sourceAccountNo\": \"<string>\",\n        \"userId\": \"<string>\",\n        \"hasInterest\": \"<boolean>\",\n        \"autoSave\": \"<boolean>\",\n        \"targetAmount\": \"<double>\",\n        \"savingsProductId\": \"<integer>\",\n        \"totalSavings\": \"<double>\",\n        \"isActive\": \"<boolean>\",\n        \"lastSavingsAmount\": \"<double>\",\n        \"lastSavingsDate\": \"<dateTime>\",\n        \"savingStartDate\": \"<dateTime>\",\n        \"shouldLockSavings\": \"<boolean>\",\n        \"lockDuration\": \"<integer>\",\n        \"lastWithdrawalDate\": \"<dateTime>\",\n        \"lastWithdrawalAmount\": \"<double>\",\n        \"maturityDate\": \"<dateTime>\",\n        \"accruedinterest\": \"<double>\",\n        \"lastInterestPaidDate\": \"<dateTime>\",\n        \"interestIsUp\": \"<boolean>\",\n        \"accruedInterestPercentage\": \"<double>\",\n        \"nextAutoSaveDate\": \"<dateTime>\",\n        \"nextWithdrawalDate\": \"<dateTime>\",\n        \"hasMatured\": \"<boolean>\",\n        \"endedOn\": \"<dateTime>\",\n        \"accruedInterest\": \"<double>\",\n        \"frequency\": \"<string>\"\n      }\n    ],\n    \"total\": \"<integer>\",\n    \"info\": \"<double>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "107607f4-6797-4af8-b125-8b1c22d94dbe"
				},
				{
					"name": "querypaged",
					"item": [
						{
							"name": "Get Paged",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fba03502-9a4c-4e08-8e52-2e74c02ef762",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"  pm.expect(pm.response.code).to.equal(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate that 'hasResult' field is a boolean\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.hasResult).to.be.a('boolean');",
											"});",
											"",
											"",
											"pm.test(\"Validate the 'result' field is an array and is not empty\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('array', \"'result' field should be an array\");",
											"    pm.expect(responseData.result).to.have.lengthOf.at.least(1, \"'result' array should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "14de9149-6ecc-4e2a-a672-e3fcece35782",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/querypaged/1/14/%7B%7D",
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "8feab378-39fc-4192-bbc5-874fcd578076",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/querypaged/:page/:pagesize/:whereCondition",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"querypaged",
												":page",
												":pagesize",
												":whereCondition"
											],
											"variable": [
												{
													"key": "page"
												},
												{
													"key": "pagesize"
												},
												{
													"key": "whereCondition"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"frequencyId\": null,\n      \"maturityDays\": \"<integer>\",\n      \"planName\": \"<string>\",\n      \"referenceNumber\": \"<string>\",\n      \"savingAmount\": \"<double>\",\n      \"sourceAccountName\": \"<string>\",\n      \"sourceAccountNo\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"hasInterest\": \"<boolean>\",\n      \"autoSave\": \"<boolean>\",\n      \"targetAmount\": \"<double>\",\n      \"savingsProductId\": \"<integer>\",\n      \"totalSavings\": \"<double>\",\n      \"isActive\": \"<boolean>\",\n      \"lastSavingsAmount\": \"<double>\",\n      \"lastSavingsDate\": \"<dateTime>\",\n      \"savingStartDate\": \"<dateTime>\",\n      \"shouldLockSavings\": \"<boolean>\",\n      \"lockDuration\": \"<integer>\",\n      \"lastWithdrawalDate\": \"<dateTime>\",\n      \"lastWithdrawalAmount\": \"<double>\",\n      \"maturityDate\": \"<dateTime>\",\n      \"accruedinterest\": \"<double>\",\n      \"lastInterestPaidDate\": \"<dateTime>\",\n      \"interestIsUp\": \"<boolean>\",\n      \"accruedInterestPercentage\": \"<double>\",\n      \"nextAutoSaveDate\": \"<dateTime>\",\n      \"nextWithdrawalDate\": \"<dateTime>\",\n      \"hasMatured\": \"<boolean>\",\n      \"endedOn\": \"<dateTime>\",\n      \"accruedInterest\": \"<double>\",\n      \"frequency\": \"<string>\"\n    },\n    {\n      \"frequencyId\": null,\n      \"maturityDays\": \"<integer>\",\n      \"planName\": \"<string>\",\n      \"referenceNumber\": \"<string>\",\n      \"savingAmount\": \"<double>\",\n      \"sourceAccountName\": \"<string>\",\n      \"sourceAccountNo\": \"<string>\",\n      \"userId\": \"<string>\",\n      \"hasInterest\": \"<boolean>\",\n      \"autoSave\": \"<boolean>\",\n      \"targetAmount\": \"<double>\",\n      \"savingsProductId\": \"<integer>\",\n      \"totalSavings\": \"<double>\",\n      \"isActive\": \"<boolean>\",\n      \"lastSavingsAmount\": \"<double>\",\n      \"lastSavingsDate\": \"<dateTime>\",\n      \"savingStartDate\": \"<dateTime>\",\n      \"shouldLockSavings\": \"<boolean>\",\n      \"lockDuration\": \"<integer>\",\n      \"lastWithdrawalDate\": \"<dateTime>\",\n      \"lastWithdrawalAmount\": \"<double>\",\n      \"maturityDate\": \"<dateTime>\",\n      \"accruedinterest\": \"<double>\",\n      \"lastInterestPaidDate\": \"<dateTime>\",\n      \"interestIsUp\": \"<boolean>\",\n      \"accruedInterestPercentage\": \"<double>\",\n      \"nextAutoSaveDate\": \"<dateTime>\",\n      \"nextWithdrawalDate\": \"<dateTime>\",\n      \"hasMatured\": \"<boolean>\",\n      \"endedOn\": \"<dateTime>\",\n      \"accruedInterest\": \"<double>\",\n      \"frequency\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "9c12ff5a-2835-474a-b9a8-aee65e5765b7"
				},
				{
					"name": "rollover",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/rollover",
							"id": "209202d8-8bac-4105-a1a0-fc915eccc44e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"savingPlanId\": \"26\"\r\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/rollover"
							},
							"response": [
								{
									"id": "6806a7d6-b04f-4c21-8808-70c66d6de976",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v1/SavingsPlan/rollover"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": {\n    \"message\": \"<string>\"\n  },\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "64795528-fbd9-4a56-87c9-4ceddc463d37"
				},
				{
					"name": "savingsfrequencies",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/savingsfrequencies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ebe4cf14-3610-4492-9440-7cac9a69c7b4",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"The 'result' field is an array with at least one element\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('array').and.to.have.lengthOf.at.least(1);",
											"});",
											"",
											"",
											"pm.test(\"Each element in the 'result' array has the required fields - id and name\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result).to.be.an('array');",
											"    responseData.result.forEach(function (element) {",
											"        pm.expect(element.id).to.exist.and.to.be.a('number');",
											"        pm.expect(element.name).to.exist.and.to.be.a('string');",
											"    });",
											"});",
											"",
											"",
											"pm.test(\"Name field is a non-empty string\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.result[0].name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "76addcbf-6fe5-45c8-9429-92e4978caf64",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/admin/saving-plans/savingsfrequencies"
							},
							"response": [
								{
									"id": "694db1f0-726c-48bc-8d53-505d12c4ccb9",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/savingsfrequencies"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasResult\": \"<boolean>\",\n  \"result\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"resultType\": null,\n  \"message\": \"<string>\",\n  \"validationMessages\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"successful\": \"<boolean>\",\n  \"errorCode\": null,\n  \"responseCode\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "8d1a9025-8d6f-4cce-b0f7-e60f1d24d718"
				},
				{
					"name": "download-report",
					"item": [
						{
							"name": "Download report",
							"id": "0632214d-6d9c-4889-9f90-5210f2ee71e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://savings-dev.bank78.co/api/v1/admin/saving-plans/download-report",
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "af8ff407-27e3-4205-a215-032dc6705d4b",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/download-report?whereCondition=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"download-report"
											],
											"query": [
												{
													"key": "whereCondition",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "64d7e4d6-0c02-478d-ae2f-4f444f4eec36"
				},
				{
					"name": "get-report-olumns",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/get-report-olumns",
							"id": "64478503-ad9d-4e6e-8f7b-2a8513c6561e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/admin/saving-plans/get-report-olumns"
							},
							"response": [
								{
									"id": "da4d4f8d-d41e-474c-bb41-be5745d886a4",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/get-report-olumns"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<integer>\"\n  }\n]"
								}
							]
						}
					],
					"id": "96c11834-a63d-4799-a1d5-56b3e9353173"
				},
				{
					"name": "export-column",
					"item": [
						{
							"name": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber",
							"id": "55a5fb68-0983-45df-8f27-c359e41f44ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://savings-dev.bank78.co/api/SavingTransactionLog/ExportData?columns=2&whereCondition=name",
									"protocol": "https",
									"host": [
										"savings-dev",
										"bank78",
										"co"
									],
									"path": [
										"api",
										"SavingTransactionLog",
										"ExportData"
									],
									"query": [
										{
											"key": "columns",
											"value": "2"
										},
										{
											"key": "whereCondition",
											"value": "name"
										},
										{
											"key": "",
											"value": null,
											"type": "text",
											"disabled": true
										}
									]
								},
								"description": "Filter by dateCreatedFrom,dateCreatedTo,hasInterest/hasNoInterest,hasMaturity/hasNoMaturity,autoSave/noAutoSave,phoneNumber"
							},
							"response": [
								{
									"id": "7e00ce53-fcb8-458a-9c72-5ab87018be98",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/SavingsPlan/export-column?columns=<string>&whereCondition=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"SavingsPlan",
												"export-column"
											],
											"query": [
												{
													"key": "columns",
													"value": "<string>"
												},
												{
													"key": "whereCondition",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "3c146411-80fd-4816-a524-96ae04e02a97"
				},
				{
					"name": "RunAutoSave",
					"item": [
						{
							"name": "/api/v1/SavingsPlan/RunAutoSave",
							"id": "32e43d89-3d88-4835-ac8c-1abd9b844590",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/RunAutoSave"
							},
							"response": [
								{
									"id": "35a4d2ce-b593-438c-8cda-fc0239cbed12",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/RunAutoSave"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "927a9870-9307-437c-b7c0-be6609b1d55c"
				},
				{
					"name": "Dashboard",
					"item": [
						{
							"name": "View Dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a4236adb-2706-4e31-99d7-e656ed8917e9",
										"exec": [
											"",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Verify that 'hasResult' is true\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.hasResult).to.be.true;",
											"});",
											"",
											"",
											"pm.test(\"Total savings is a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.result.totalSavings).to.be.a('number').and.to.be.at.least(0);",
											"});",
											"",
											"",
											"pm.test(\"Total interest is a non-negative number\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.result).to.be.an('object');",
											"    pm.expect(responseData.result.totalInterest).to.be.a('number');",
											"    pm.expect(responseData.result.totalInterest).to.be.at.least(0);",
											"});",
											"",
											"",
											"pm.test(\"Verify that interestDelta is equal to 0\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.result).to.exist.and.to.be.an('object');",
											"  pm.expect(responseData.result.interestDelta).to.exist.and.to.equal(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "68c87395-7199-4b10-bf02-87832aace141",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": "https://savings-dev.bank78.co/api/v1/SavingsPlan/dashboard"
							},
							"response": [
								{
									"id": "2bd4b667-d16e-47fd-8327-7152035a339b",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/api/v1/SavingsPlan/RunAutoSave"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "755bbd81-6417-4196-91cf-250d575f19e9"
				}
			],
			"id": "68c8db95-4d42-4ea0-80c8-55400a7b4f48"
		},
		{
			"name": "Security questions",
			"item": [
				{
					"name": "Post security Question",
					"item": [
						{
							"name": "Add security-questions that exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "018bd18f-aef8-482f-817a-6d6087e35656",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Has result equal to false\", function () {\r",
											"     pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType equal to 2\", function () {\r",
											"     pm.expect(pm.response.json().resultType).to.equal(2);\r",
											"});\r",
											"pm.test(\"message equal to success\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Security Question Already Created\");\r",
											"});\r",
											"pm.test(\"validationMessages\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.equal(null);\r",
											"});\r",
											"pm.test(\"successful\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"pm.test(\"errorCode\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a158c7f8-4eb7-4bac-85c0-cbdc5f1e285b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"responses\": [\r\n    {\r\n      \"questionId\":\"85073817-cc32-4589-9a7e-67fdbf31629f\",\r\n      \"response\": \"string\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/add"
							},
							"response": []
						},
						{
							"name": "Add security-questions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "018bd18f-aef8-482f-817a-6d6087e35656",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Has result equal to true\", function () {\r",
											"     pm.expect(pm.response.json().hasResult).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType equal to 1\", function () {\r",
											"     pm.expect(pm.response.json().resultType).to.equal(1);\r",
											"});\r",
											"pm.test(\"message equal to success\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Success\");\r",
											"});\r",
											"pm.test(\"validationMessages\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.equal(null);\r",
											"});\r",
											"pm.test(\"successful\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(true);\r",
											"});\r",
											"pm.test(\"errorCode\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8b197743-5e4e-4517-b71a-a309c75d1637",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"responses\": [\r\n    {\r\n      \"questionId\":\"85073817-cc32-4589-9a7e-67fdbf31629f\",\r\n      \"response\": \"string\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/add"
							},
							"response": []
						},
						{
							"name": "Add security-questions -Invalid questionid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "018bd18f-aef8-482f-817a-6d6087e35656",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Has result equal to false\", function () {\r",
											"     pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											" \r",
											"pm.test(\"successful\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"pm.test(\"errorCode\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cb0faddc-64ef-4284-9788-a03608fb7798",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"responses\": [\r\n    {\r\n      \"questionId\":\"88oookkj98\",\r\n      \"response\": \"string\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/add"
							},
							"response": []
						},
						{
							"name": "Add security-questions -Empty questionid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "018bd18f-aef8-482f-817a-6d6087e35656",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Has result equal to false\", function () {\r",
											"     pm.expect(pm.response.json().hasResult).to.equal(false);\r",
											"});\r",
											"\r",
											"pm.test(\"validationMessages\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages[0]).to.equal(\"The QuestionId field is required.\");\r",
											"});\r",
											"\r",
											"pm.test(\"successful\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(false);\r",
											"});\r",
											"pm.test(\"errorCode\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "879a378d-2c70-40d7-89d9-45e9e542766f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"responses\": [\r\n    {\r\n      \"questionId\":\"\",\r\n      \"response\": \"string\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/add"
							},
							"response": []
						}
					],
					"id": "bb2087fa-38f8-4cf8-96c1-2445257f0d4b"
				},
				{
					"name": "Get all questions",
					"item": [
						{
							"name": "View all questions without x-API key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2132416e-4d78-48eb-a70f-5870b300d4c2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"message equal to Forbidden\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Forbidden\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "92bd2781-2569-4342-91a7-02e01df0156a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/all"
							},
							"response": []
						},
						{
							"name": "View all questions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2132416e-4d78-48eb-a70f-5870b300d4c2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Has result equal to true\", function () {\r",
											"     pm.expect(pm.response.json().hasResult).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType equal to 1\", function () {\r",
											"     pm.expect(pm.response.json().resultType).to.equal(1);\r",
											"});\r",
											"pm.test(\"message equal to success\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Success\");\r",
											"});\r",
											"pm.test(\"validationMessages\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.equal(null);\r",
											"});\r",
											"pm.test(\"successful\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(true);\r",
											"});\r",
											"pm.test(\"errorCode\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"pm.test(\"responseCode\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.equal(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "98a0df84-ac69-433e-bdd8-dcdeda390e9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{customer_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity/v1/accounts/security-questions/all?",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"v1",
										"accounts",
										"security-questions",
										"all"
									],
									"query": [
										{
											"key": "",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "2fa1daeb-5415-4b2f-842d-6b2700d5852a"
				},
				{
					"name": "Get randomize security-questions",
					"item": [
						{
							"name": "randomize security-questions- Valid details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a5a75b0-1dc4-4059-aa9a-05876034d715",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"ResponseBody matches string questionId \", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"questionId\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResponseBody matches string userId \", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"userId\");\r",
											"});\r",
											"pm.test(\"ResponseBody matches string question\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"question\");\r",
											"});\r",
											"pm.test(\"Has result equal to true\", function () {\r",
											"     pm.expect(pm.response.json().hasResult).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"resultType equal to 1\", function () {\r",
											"     pm.expect(pm.response.json().resultType).to.equal(1);\r",
											"});\r",
											"pm.test(\"message equal to success\", function () {\r",
											"    pm.expect(pm.response.json().message).to.equal(\"Success\");\r",
											"});\r",
											"pm.test(\"validationMessages\", function () {\r",
											"    pm.expect(pm.response.json().validationMessages).to.equal(null);\r",
											"});\r",
											"pm.test(\"successful\", function () {\r",
											"    pm.expect(pm.response.json().successful).to.equal(true);\r",
											"});\r",
											"pm.test(\"errorCode\", function () {\r",
											"    pm.expect(pm.response.json().errorCode).to.equal(0);\r",
											"});\r",
											"pm.test(\"responseCode\", function () {\r",
											"    pm.expect(pm.response.json().responseCode).to.equal(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "395fb3a5-8314-4ab5-a933-6623141d15e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/randomize"
							},
							"response": []
						},
						{
							"name": "randomize security-questions- no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a5a75b0-1dc4-4059-aa9a-05876034d715",
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Status code name has string Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ed10c314-f9b4-46e2-bb46-3d22a1ae4cc0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/randomize"
							},
							"response": []
						}
					],
					"id": "95240de6-2c8a-4e12-8bf0-608ed5be35d7"
				},
				{
					"name": "Validate security-questions",
					"item": [
						{
							"name": "validate security-questions",
							"id": "d608994e-435f-4250-81da-d088cbdb73ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{business_access_token}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{x-api-key}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"questionId\": \"85073817-cc32-4589-9a7e-67fdbf31629f\",\r\n  \"response\": \"cps\",\r\n  \"action\": \"forgot password\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/identity/v1/accounts/security-questions/validate"
							},
							"response": []
						}
					],
					"id": "682da469-0158-4514-9a19-55a12cd48330"
				}
			],
			"id": "cf3a8d65-61d1-4894-8618-21498d1675a2"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "81ca6b05-4d91-4e7a-b3f0-e6835c4b683c",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a8ab491d-1568-4464-b392-11ef7c72d7d2",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "firstname",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		},
		{
			"key": "bus_username",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "Onboarding_access_token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://sandbox.bank78.co",
			"type": "string"
		}
	]
}