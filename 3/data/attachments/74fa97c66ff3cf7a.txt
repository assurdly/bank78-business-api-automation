
pm.test("Response status code is 400", function () {
    pm.expect(pm.response.code).to.equal(400);
});


pm.test("Validate the 'hasResult' field is present and has a boolean value", function () {
    const responseData = pm.response.json();

    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData.hasResult).to.exist.and.to.be.a('boolean');
});


pm.test("Validate the 'message' field is present and has a string value", function () {
    const responseData = pm.response.json();

    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData.message).to.exist.and.to.be.a('string');
});

pm.test("Assert the 'message' field is 'Invalid Transaction PIN'", function () {
    const responseData = pm.response.json();

    pm.expect(responseData.message).to.equal("Invalid Transaction PIN");
});

pm.test("Validate the 'resultType' field is present and has a value of 2", function () {
    const responseData = pm.response.json();

    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData.resultType).to.exist.and.to.equal(2);
});

pm.test("Validate the 'result' field is present and has a null value", function () {
    const responseData = pm.response.json();

    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData.result).to.be.null;
});