
pm.test("Response status code is 200", function () {
  pm.expect(pm.response.code).to.equal(200);
});


pm.test("The 'hasResult' field should be a boolean", function () {
  const responseData = pm.response.json();
  
  pm.expect(responseData.hasResult).to.be.a('boolean');
});


pm.test("The 'result' field must exist and be an object", function () {
    const responseData = pm.response.json();

    pm.expect(responseData.result).to.exist.and.to.be.an('object');
});

pm.test("The 'result' field must have 'message' and 'reference' properties", function () {
    const responseData = pm.response.json();

    pm.expect(responseData.result.message).to.exist.and.to.be.a('string');
    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string');
});


pm.test("The resultType field should be a number", function () {
    const responseData = pm.response.json();
    
    pm.expect(responseData.resultType).to.be.a('number');
});

pm.test("Response has 'hasResult' set to true", function () {
    pm.expect(pm.response.json().hasResult).to.equal(true);
});

pm.test("Response 'result' is an object", function () {
    pm.expect(pm.response.json().result).to.be.an('object');
});

pm.test("Response 'resultType' is 1", function () {
    pm.expect(pm.response.json().resultType).to.equal(1);
});

pm.test("Response 'message' is null", function () {
    pm.expect(pm.response.json().message).to.be.null;
});

pm.test("Response 'validationMessages' is null", function () {
    pm.expect(pm.response.json().validationMessages).to.be.null;
});

pm.test("Response 'successful' is true", function () {
    pm.expect(pm.response.json().successful).to.equal(true);
});

pm.test("Response 'errorCode' is 0", function () {
    pm.expect(pm.response.json().errorCode).to.equal(0);
});

pm.test("Response 'responseCode' is null", function () {
    pm.expect(pm.response.json().responseCode).to.be.null;
});

pm.test("Response 'result' contains 'message'", function () {
    pm.expect(pm.response.json().result).to.have.property('message');
});

pm.test("Response 'result' contains 'reference'", function () {
    pm.expect(pm.response.json().result).to.have.property('reference');
});
