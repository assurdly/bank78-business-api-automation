pm.test("Response status code is 400", function () {
    pm.response.to.have.status(400);
});

pm.test("Response code is Bad Request", function () {
    pm.response.to.have.status("Bad Request");
});

const responseData = pm.response.json();

pm.test("Response has the required fields", function () {
    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData.hasResult).to.exist;
    pm.expect(responseData.result).to.be.null;
    pm.expect(responseData.resultType).to.exist;
    pm.expect(responseData.message).to.exist;
    pm.expect(responseData.validationMessages).to.be.be.an('array');
    pm.expect(responseData.successful).to.exist;
});


pm.test("The 'hasResult' field should be a boolean", function () {
    pm.expect(responseData.hasResult).to.be.a('boolean');
    pm.expect(responseData.hasResult).to.eq(false);
});

pm.test("The resultType field should be a number", function () {
    pm.expect(responseData.resultType).to.be.a('number');
    pm.expect(responseData.resultType).to.eq(3);
});

pm.test("The message field is present", function () {
    pm.expect(responseData.message).to.be.a('string');
    pm.expect(responseData.message).to.eq("Response has validation errors");
});

pm.test("The validationMessages field is present", function () {
    pm.expect(responseData.validationMessages[0]).to.eq("The OTP field is required.");
});

pm.test("The successful field is present", function () {
    pm.expect(responseData.successful).to.be.a('boolean');
    pm.expect(responseData.successful).to.eq(false);
});

