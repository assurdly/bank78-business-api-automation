pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Status code response is OK", function () {
    pm.response.to.have.status("OK");
});

pm.test("Content-Type is present", function () {
    pm.response.to.have.header("Content-Type");
});

var jsonData = pm.response.json();

pm.test("Response has a result property", function () {
    pm.expect(jsonData).to.exist;
    pm.expect(jsonData).to.be.an('object');
});

pm.test("Response has a hasResult property", function () {
    pm.expect(jsonData.hasResult).to.be.a('boolean');
    pm.expect(jsonData.hasResult).to.eq(true);
});

pm.test("Result property is a non-empty object", function () {
    pm.expect(jsonData.result).to.be.an('object').and.to.not.be.empty;
});

pm.test("Response contains a result message property", function () {
    pm.expect(jsonData.result.message).to.be.a('string');
    pm.expect(jsonData.result.message).to.eq("Recovery email sent successfully");
});

pm.test("Response contains a resultType property", function () {
    pm.expect(jsonData.resultType).to.be.a('number');
    pm.expect(jsonData.resultType).to.eq(1);
});

pm.test("Message property is present", function () {
    pm.expect(jsonData.message).to.be.a('string');
    pm.expect(jsonData.message).to.eq('Success');
});

pm.test("ValidationMessages is present", function () {
    pm.expect(jsonData.validationMessages).to.be.null;
});

pm.test("Successful is present", function () {
   pm.expect(jsonData.successful).to.be.a('boolean');
   pm.expect(jsonData.successful).to.eq(true);
});