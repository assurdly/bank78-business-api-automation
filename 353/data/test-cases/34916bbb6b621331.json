{"uid":"34916bbb6b621331","name":"Signup - RC/BN numeric character input","fullName":"Business APIs - QA/Onboarding (Business)/Sign Up#Signup - RC/BN numeric character input","historyId":"ad43a1dd9312047e069a7222e6ef65c1:cdf101d9440a39617d8ac38c06c3bded","time":{"start":1732638894840,"stop":1732638895047,"duration":207},"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","steps":[{"name":"Response status code is 200","time":{"start":1732638895038,"stop":1732638895038,"duration":0},"status":"failed","statusMessage":"expected 400 to equal 200","statusTrace":"AssertionError: expected 400 to equal 200\n   at Object.eval sandbox-script.js:1:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First name is a non-empty string","time":{"start":1732638895039,"stop":1732638895039,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'firstName')","statusTrace":"TypeError: Cannot read properties of null (reading 'firstName')\n   at Object.eval sandbox-script.js:2:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"lastName is a non-empty string","time":{"start":1732638895039,"stop":1732638895039,"duration":0},"status":"failed","statusMessage":"expected null to exist","statusTrace":"AssertionError: expected null to exist\n   at Object.eval sandbox-script.js:3:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"userName is a non-empty string","time":{"start":1732638895040,"stop":1732638895040,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'userName')","statusTrace":"TypeError: Cannot read properties of null (reading 'userName')\n   at Object.eval sandbox-script.js:4:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response has required fields","time":{"start":1732638895042,"stop":1732638895042,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:5:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Email is in a valid format","time":{"start":1732638895042,"stop":1732638895043,"duration":1},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:6:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Phone number is in a valid format","time":{"start":1732638895043,"stop":1732638895043,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'phoneNumber')","statusTrace":"TypeError: Cannot read properties of null (reading 'phoneNumber')\n   at Object.eval sandbox-script.js:7:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"countryCode is a non-empty string","time":{"start":1732638895044,"stop":1732638895044,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'countryCode')","statusTrace":"TypeError: Cannot read properties of null (reading 'countryCode')\n   at Object.eval sandbox-script.js:8:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Assert resultType is 'Success'","time":{"start":1732638895045,"stop":1732638895045,"duration":0},"status":"failed","statusMessage":"expected 'Error' to equal 'Success'","statusTrace":"AssertionError: expected 'Error' to equal 'Success'\n   at Object.eval sandbox-script.js:9:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"53e264b46794443c","name":"Request Headers","source":"53e264b46794443c.json","type":"application/json","size":1156},{"uid":"8b29a6f13d9976e4","name":"Request Body","source":"8b29a6f13d9976e4.txt","type":"text/plain","size":448},{"uid":"b82beb0b90c43ca1","name":"Response Headers","source":"b82beb0b90c43ca1.json","type":"application/json","size":1173},{"uid":"b4ea84b4ed0e0157","name":"Response Body","source":"b4ea84b4ed0e0157.txt","type":"text/plain","size":188}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1720-127"},{"name":"thread","value":"pid-2023-worker-main"},{"name":"parentSuite","value":"Business APIs - QA"},{"name":"suite","value":"Onboarding (Business)"},{"name":"subSuite","value":"Sign Up"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":38,"unknown":0,"total":69},"items":[{"uid":"40d04ab73d33914c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/352//#testresult/40d04ab73d33914c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732627819924,"stop":1732627820135,"duration":211}},{"uid":"5738c2180bf136e0","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/351//#testresult/5738c2180bf136e0","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732625637195,"stop":1732625637421,"duration":226}},{"uid":"571ffb629185d077","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/350//#testresult/571ffb629185d077","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732623079297,"stop":1732623079922,"duration":625}},{"uid":"c76cb7604c24a8b0","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/349//#testresult/c76cb7604c24a8b0","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732622529865,"stop":1732622530147,"duration":282}},{"uid":"6675c9bb5f4f444c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/348//#testresult/6675c9bb5f4f444c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732478746502,"stop":1732478746788,"duration":286}},{"uid":"43c65619e54762a8","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/347//#testresult/43c65619e54762a8","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732298532649,"stop":1732298533015,"duration":366}},{"uid":"c37c02b13c6cb7a8","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/346//#testresult/c37c02b13c6cb7a8","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732108050246,"stop":1732108052096,"duration":1850}},{"uid":"1dd9ee3a56ead5f4","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/345//#testresult/1dd9ee3a56ead5f4","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732008731130,"stop":1732008731344,"duration":214}},{"uid":"738e39461d1f4283","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/344//#testresult/738e39461d1f4283","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1732008539239,"stop":1732008539481,"duration":242}},{"uid":"17f200d809a8a7d6","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/342//#testresult/17f200d809a8a7d6","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731950326492,"stop":1731950326690,"duration":198}},{"uid":"c8e0353270146f95","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/341//#testresult/c8e0353270146f95","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731873958275,"stop":1731873958543,"duration":268}},{"uid":"889ec12fc5592daf","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/340//#testresult/889ec12fc5592daf","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731693680869,"stop":1731693681104,"duration":235}},{"uid":"caa287ca16ba18e2","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/339//#testresult/caa287ca16ba18e2","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731503165266,"stop":1731503165470,"duration":204}},{"uid":"6a0db84376703d48","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/338//#testresult/6a0db84376703d48","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731489852019,"stop":1731489852337,"duration":318}},{"uid":"3f1eb3d8bd1028d4","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/337//#testresult/3f1eb3d8bd1028d4","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731278898385,"stop":1731278898651,"duration":266}},{"uid":"c4f199b5bc704ea3","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/336//#testresult/c4f199b5bc704ea3","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731278712013,"stop":1731278712196,"duration":183}},{"uid":"15aec63956aff3ba","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/335//#testresult/15aec63956aff3ba","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731278527602,"stop":1731278527831,"duration":229}},{"uid":"30a0157564b446fd","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/334//#testresult/30a0157564b446fd","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731278350621,"stop":1731278350884,"duration":263}},{"uid":"2b0d485865cbf5f1","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/333//#testresult/2b0d485865cbf5f1","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731278174567,"stop":1731278174834,"duration":267}},{"uid":"93ac0cca4b0eaba","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/332//#testresult/93ac0cca4b0eaba","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1731277800812,"stop":1731277801009,"duration":197}}]},"tags":[]},"source":"34916bbb6b621331.json","parameterValues":["POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business","400"]}