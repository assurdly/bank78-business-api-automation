{"uid":"38c218547fbfca8e","name":"Signup - RC/BN numeric character input","fullName":"Business APIs - QA/Onboarding (Business)/Sign Up#Signup - RC/BN numeric character input","historyId":"ad43a1dd9312047e069a7222e6ef65c1:cdf101d9440a39617d8ac38c06c3bded","time":{"start":1736341572629,"stop":1736341572918,"duration":289},"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","steps":[{"name":"Response status code is 200","time":{"start":1736341572908,"stop":1736341572908,"duration":0},"status":"failed","statusMessage":"expected 400 to equal 200","statusTrace":"AssertionError: expected 400 to equal 200\n   at Object.eval sandbox-script.js:1:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First name is a non-empty string","time":{"start":1736341572909,"stop":1736341572909,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'firstName')","statusTrace":"TypeError: Cannot read properties of null (reading 'firstName')\n   at Object.eval sandbox-script.js:2:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"lastName is a non-empty string","time":{"start":1736341572911,"stop":1736341572911,"duration":0},"status":"failed","statusMessage":"expected null to exist","statusTrace":"AssertionError: expected null to exist\n   at Object.eval sandbox-script.js:3:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"userName is a non-empty string","time":{"start":1736341572912,"stop":1736341572912,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'userName')","statusTrace":"TypeError: Cannot read properties of null (reading 'userName')\n   at Object.eval sandbox-script.js:4:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response has required fields","time":{"start":1736341572912,"stop":1736341572912,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:5:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Email is in a valid format","time":{"start":1736341572913,"stop":1736341572913,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:6:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Phone number is in a valid format","time":{"start":1736341572914,"stop":1736341572914,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'phoneNumber')","statusTrace":"TypeError: Cannot read properties of null (reading 'phoneNumber')\n   at Object.eval sandbox-script.js:7:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"countryCode is a non-empty string","time":{"start":1736341572914,"stop":1736341572914,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'countryCode')","statusTrace":"TypeError: Cannot read properties of null (reading 'countryCode')\n   at Object.eval sandbox-script.js:8:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Assert resultType is 'Success'","time":{"start":1736341572915,"stop":1736341572915,"duration":0},"status":"failed","statusMessage":"expected 'Error' to equal 'Success'","statusTrace":"AssertionError: expected 'Error' to equal 'Success'\n   at Object.eval sandbox-script.js:9:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"71f608c83fc808cd","name":"Request Headers","source":"71f608c83fc808cd.json","type":"application/json","size":1156},{"uid":"c05a9185efd094c","name":"Request Body","source":"c05a9185efd094c.txt","type":"text/plain","size":452},{"uid":"31e5bc7000fb6499","name":"Response Headers","source":"31e5bc7000fb6499.json","type":"application/json","size":1178},{"uid":"ff6b2b4b54a408e7","name":"Response Body","source":"ff6b2b4b54a408e7.txt","type":"text/plain","size":188}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az713-578"},{"name":"thread","value":"pid-2039-worker-main"},{"name":"parentSuite","value":"Business APIs - QA"},{"name":"suite","value":"Onboarding (Business)"},{"name":"subSuite","value":"Sign Up"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":61,"broken":0,"skipped":0,"passed":38,"unknown":0,"total":99},"items":[{"uid":"7adffe469902d10c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/382//#testresult/7adffe469902d10c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1736107556653,"stop":1736107557026,"duration":373}},{"uid":"4dead288ff5bb6b7","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/381//#testresult/4dead288ff5bb6b7","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735927299421,"stop":1735927299712,"duration":291}},{"uid":"1d14b63ee3c77016","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/380//#testresult/1d14b63ee3c77016","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735736689356,"stop":1735736689684,"duration":328}},{"uid":"1e861559104afa90","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/379//#testresult/1e861559104afa90","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735502743981,"stop":1735502744316,"duration":335}},{"uid":"dfbb5c7e5f977d94","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/378//#testresult/dfbb5c7e5f977d94","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735322482745,"stop":1735322482997,"duration":252}},{"uid":"329de0fd46f8583c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/377//#testresult/329de0fd46f8583c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735131893536,"stop":1735131893797,"duration":261}},{"uid":"7c25e9eb1485e021","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/376//#testresult/7c25e9eb1485e021","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734897943992,"stop":1734897944189,"duration":197}},{"uid":"2d3b5080697305b0","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/375//#testresult/2d3b5080697305b0","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734717689941,"stop":1734717690203,"duration":262}},{"uid":"66e8cc679066d520","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/374//#testresult/66e8cc679066d520","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734527241917,"stop":1734527243238,"duration":1321}},{"uid":"9ea637e343585a5b","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/373//#testresult/9ea637e343585a5b","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734363528377,"stop":1734363528590,"duration":213}},{"uid":"f51188d5a53c11ee","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/372//#testresult/f51188d5a53c11ee","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734361004606,"stop":1734361004797,"duration":191}},{"uid":"d79de26c5b9f6992","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/371//#testresult/d79de26c5b9f6992","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734293167236,"stop":1734293167681,"duration":445}},{"uid":"92e682f0e8baebf1","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/370//#testresult/92e682f0e8baebf1","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734112880622,"stop":1734112880809,"duration":187}},{"uid":"675addf430617bbb","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/369//#testresult/675addf430617bbb","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733988537227,"stop":1733988537492,"duration":265}},{"uid":"6ba7a155ef192002","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/368//#testresult/6ba7a155ef192002","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733987572684,"stop":1733987572905,"duration":221}},{"uid":"be9822bd6bc95eef","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/367//#testresult/be9822bd6bc95eef","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733987385232,"stop":1733987385490,"duration":258}},{"uid":"d207c6da50adf097","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/366//#testresult/d207c6da50adf097","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733922537568,"stop":1733922537854,"duration":286}},{"uid":"e7494998b6df554c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/365//#testresult/e7494998b6df554c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733688364539,"stop":1733688364905,"duration":366}},{"uid":"e1a3e4e54e0f302b","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/364//#testresult/e1a3e4e54e0f302b","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733508088885,"stop":1733508089078,"duration":193}},{"uid":"7faadf657cd7727e","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/363//#testresult/7faadf657cd7727e","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1733483135720,"stop":1733483136001,"duration":281}}]},"tags":[]},"source":"38c218547fbfca8e.json","parameterValues":["POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business","400"]}