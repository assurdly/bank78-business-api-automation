{"uid":"6a0badca7698402f","name":"Signup - RC/BN numeric character input","fullName":"Business APIs - QA/Onboarding (Business)/Sign Up#Signup - RC/BN numeric character input","historyId":"ad43a1dd9312047e069a7222e6ef65c1:cdf101d9440a39617d8ac38c06c3bded","time":{"start":1738156547307,"stop":1738156547713,"duration":406},"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","statusTrace":"Response code: 400, status: Bad Request","steps":[{"name":"Response status code is 200","time":{"start":1738156547704,"stop":1738156547704,"duration":0},"status":"failed","statusMessage":"expected 400 to equal 200","statusTrace":"AssertionError: expected 400 to equal 200\n   at Object.eval sandbox-script.js:1:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First name is a non-empty string","time":{"start":1738156547705,"stop":1738156547705,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'firstName')","statusTrace":"TypeError: Cannot read properties of null (reading 'firstName')\n   at Object.eval sandbox-script.js:2:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"lastName is a non-empty string","time":{"start":1738156547706,"stop":1738156547706,"duration":0},"status":"failed","statusMessage":"expected null to exist","statusTrace":"AssertionError: expected null to exist\n   at Object.eval sandbox-script.js:3:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"userName is a non-empty string","time":{"start":1738156547706,"stop":1738156547706,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'userName')","statusTrace":"TypeError: Cannot read properties of null (reading 'userName')\n   at Object.eval sandbox-script.js:4:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response has required fields","time":{"start":1738156547707,"stop":1738156547707,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:5:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Email is in a valid format","time":{"start":1738156547708,"stop":1738156547708,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'email')","statusTrace":"TypeError: Cannot read properties of null (reading 'email')\n   at Object.eval sandbox-script.js:6:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Phone number is in a valid format","time":{"start":1738156547709,"stop":1738156547709,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'phoneNumber')","statusTrace":"TypeError: Cannot read properties of null (reading 'phoneNumber')\n   at Object.eval sandbox-script.js:7:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"countryCode is a non-empty string","time":{"start":1738156547709,"stop":1738156547709,"duration":0},"status":"failed","statusMessage":"Cannot read properties of null (reading 'countryCode')","statusTrace":"TypeError: Cannot read properties of null (reading 'countryCode')\n   at Object.eval sandbox-script.js:8:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Assert resultType is 'Success'","time":{"start":1738156547710,"stop":1738156547710,"duration":0},"status":"failed","statusMessage":"expected 'Error' to equal 'Success'","statusTrace":"AssertionError: expected 'Error' to equal 'Success'\n   at Object.eval sandbox-script.js:9:7)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"15044cae1ef9adbb","name":"Request Headers","source":"15044cae1ef9adbb.json","type":"application/json","size":1156},{"uid":"650f5a70ed841066","name":"Request Body","source":"650f5a70ed841066.txt","type":"text/plain","size":451},{"uid":"9cd2851b1642e1d9","name":"Response Headers","source":"9cd2851b1642e1d9.json","type":"application/json","size":1176},{"uid":"df0d94ce163ba663","name":"Response Body","source":"df0d94ce163ba663.txt","type":"text/plain","size":168}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1967-363"},{"name":"thread","value":"pid-2171-worker-main"},{"name":"parentSuite","value":"Business APIs - QA"},{"name":"suite","value":"Onboarding (Business)"},{"name":"subSuite","value":"Sign Up"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":67,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":108},"items":[{"uid":"a35155c14face94","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/391//#testresult/a35155c14face94","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1737922726012,"stop":1737922726485,"duration":473}},{"uid":"5297fb842a818707","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/390//#testresult/5297fb842a818707","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1737742268439,"stop":1737742268853,"duration":414}},{"uid":"bb505fc93a66bd81","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/389//#testresult/bb505fc93a66bd81","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1737551766815,"stop":1737551767203,"duration":388}},{"uid":"1b65c87b4d956cb3","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/388//#testresult/1b65c87b4d956cb3","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1737317899173,"stop":1737317899776,"duration":603}},{"uid":"27f27fb5c7842ccf","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/387//#testresult/27f27fb5c7842ccf","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1737137470337,"stop":1737137470747,"duration":410}},{"uid":"38dfc4c4058d9e6c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/386//#testresult/38dfc4c4058d9e6c","status":"passed","time":{"start":1736946935449,"stop":1736946936113,"duration":664}},{"uid":"4b2bf18a10ee10cf","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/385//#testresult/4b2bf18a10ee10cf","status":"passed","time":{"start":1736712365812,"stop":1736712366738,"duration":926}},{"uid":"f5f24ebcd880bea0","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/384//#testresult/f5f24ebcd880bea0","status":"passed","time":{"start":1736532087639,"stop":1736532088376,"duration":737}},{"uid":"38c218547fbfca8e","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/383//#testresult/38c218547fbfca8e","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1736341572629,"stop":1736341572918,"duration":289}},{"uid":"7adffe469902d10c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/382//#testresult/7adffe469902d10c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1736107556653,"stop":1736107557026,"duration":373}},{"uid":"4dead288ff5bb6b7","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/381//#testresult/4dead288ff5bb6b7","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735927299421,"stop":1735927299712,"duration":291}},{"uid":"1d14b63ee3c77016","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/380//#testresult/1d14b63ee3c77016","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735736689356,"stop":1735736689684,"duration":328}},{"uid":"1e861559104afa90","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/379//#testresult/1e861559104afa90","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735502743981,"stop":1735502744316,"duration":335}},{"uid":"dfbb5c7e5f977d94","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/378//#testresult/dfbb5c7e5f977d94","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735322482745,"stop":1735322482997,"duration":252}},{"uid":"329de0fd46f8583c","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/377//#testresult/329de0fd46f8583c","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1735131893536,"stop":1735131893797,"duration":261}},{"uid":"7c25e9eb1485e021","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/376//#testresult/7c25e9eb1485e021","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734897943992,"stop":1734897944189,"duration":197}},{"uid":"2d3b5080697305b0","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/375//#testresult/2d3b5080697305b0","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734717689941,"stop":1734717690203,"duration":262}},{"uid":"66e8cc679066d520","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/374//#testresult/66e8cc679066d520","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734527241917,"stop":1734527243238,"duration":1321}},{"uid":"9ea637e343585a5b","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/373//#testresult/9ea637e343585a5b","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734363528377,"stop":1734363528590,"duration":213}},{"uid":"f51188d5a53c11ee","reportUrl":"https://assurdly.github.io/bank78-business-api-automation/372//#testresult/f51188d5a53c11ee","status":"failed","statusDetails":"Response status code is 200, First name is a non-empty string, lastName is a non-empty string, userName is a non-empty string, Response has required fields, Email is in a valid format, Phone number is in a valid format, countryCode is a non-empty string, Assert resultType is 'Success'","time":{"start":1734361004606,"stop":1734361004797,"duration":191}}]},"tags":[]},"source":"6a0badca7698402f.json","parameterValues":["POST - https://sandbox.bank78.co/onboard/api/user/save?profile=business","400"]}