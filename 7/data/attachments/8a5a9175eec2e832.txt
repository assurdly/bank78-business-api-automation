pm.test("Response has 'hasResult' set to true", function () {
    pm.expect(pm.response.json().hasResult).to.equal(true);
});

pm.test("Response 'result' is an object", function () {
    pm.expect(pm.response.json().result).to.be.an('object');
});

pm.test("Response 'resultType' is 1", function () {
    pm.expect(pm.response.json().resultType).to.equal(1);
});

pm.test("Response 'message' is null", function () {
    pm.expect(pm.response.json().message).to.be.null;
});

pm.test("Response 'validationMessages' is null", function () {
    pm.expect(pm.response.json().validationMessages).to.be.null;
});

pm.test("Response 'successful' is true", function () {
    pm.expect(pm.response.json().successful).to.equal(true);
});

pm.test("Response 'errorCode' is 0", function () {
    pm.expect(pm.response.json().errorCode).to.equal(0);
});

pm.test("Response 'responseCode' is null", function () {
    pm.expect(pm.response.json().responseCode).to.be.null;
});

pm.test("Result 'items' is an array", function () {
    pm.expect(pm.response.json().result.items).to.be.an('array');
});

pm.test("Result 'total' is a number", function () {
    pm.expect(pm.response.json().result.total).to.be.a('number');
});

pm.test("Result 'info' is a number", function () {
    pm.expect(pm.response.json().result.info).to.be.a('number');
});

// Assertions for the first item in the 'items' array
pm.test("Item 1 'accruedInterest' is a number", function () {
    pm.expect(pm.response.json().result.items[0].accruedInterest).to.be.a('number');
});

pm.test("Item 1 'frequency' is a string", function () {
    pm.expect(pm.response.json().result.items[0].frequency).to.be.a('string');
});

pm.test("Item 1 'id' is a number", function () {
    pm.expect(pm.response.json().result.items[0].id).to.be.a('number');
});

pm.test("Item 1 'userId' is a string", function () {
    pm.expect(pm.response.json().result.items[0].userId).to.be.a('string');
});

pm.test("Item 1 'hasInterest' is a boolean", function () {
    pm.expect(pm.response.json().result.items[0].hasInterest).to.be.a('boolean');
});

pm.test("Item 1 'autoSave' is a boolean", function () {
    pm.expect(pm.response.json().result.items[0].autoSave).to.be.a('boolean');
});

pm.test("Item 1 'frequencyId' is a number", function () {
    pm.expect(pm.response.json().result.items[0].frequencyId).to.be.a('number');
});

pm.test("Item 1 'targetAmount' is a number", function () {
    pm.expect(pm.response.json().result.items[0].targetAmount).to.be.a('number');
});

pm.test("Item 1 'planName' is a string", function () {
    pm.expect(pm.response.json().result.items[0].planName).to.be.a('string');
});

pm.test("Item 1 'sourceAccountNo' is a string", function () {
    pm.expect(pm.response.json().result.items[0].sourceAccountNo).to.be.a('string');
});

pm.test("Item 1 'sourceAccountName' is a string", function () {
    pm.expect(pm.response.json().result.items[0].sourceAccountName).to.be.a('string');
});

pm.test("Item 1 'savingsProductId' is a number", function () {
    pm.expect(pm.response.json().result.items[0].savingsProductId).to.be.a('number');
});

pm.test("Item 1 'totalSavings' is a number", function () {
    pm.expect(pm.response.json().result.items[0].totalSavings).to.be.a('number');
});

pm.test("Item 1 'isActive' is a boolean", function () {
    pm.expect(pm.response.json().result.items[0].isActive).to.be.a('boolean');
});

pm.test("Item 1 'lastSavingsAmount' is null", function () {
    pm.expect(pm.response.json().result.items[0].lastSavingsAmount).to.be.null;
});

pm.test("Item 1 'lastSavingsDate' is null", function () {
    pm.expect(pm.response.json().result.items[0].lastSavingsDate).to.be.null;
});

pm.test("Item 1 'savingStartDate' is a string", function () {
    pm.expect(pm.response.json().result.items[0].savingStartDate).to.be.a('string');
});

