pm.test("Response code is 200 (OK)", function () {
    pm.response.to.have.status(200);
});

pm.test("Response hasResult property is a boolean", function () {
    pm.expect(pm.response.json().hasResult).to.be.a('boolean');
});

pm.test("Response result property is an array", function () {
    pm.expect(pm.response.json().result).to.be.an('array');
});

pm.test("Response resultType property is a number or null", function () {
    pm.expect(pm.response.json().resultType).to.satisfy(function(value) {
        return typeof value === 'number' || value === null;
    });
});

pm.test("Response message property is a string or null", function () {
    pm.expect(pm.response.json().message).to.satisfy(function(value) {
        return typeof value === 'string' || value === null;
    });
});


pm.test("Response successful property is a boolean or null", function () {
    pm.expect(pm.response.json().successful).to.satisfy(function(value) {
        return typeof value === 'boolean' || value === null;
    });
});

pm.test("Response errorCode property is a number or null", function () {
    pm.expect(pm.response.json().errorCode).to.satisfy(function(value) {
        return typeof value === 'number' || value === null;
    });
});

pm.test("Response responseCode property is a string or null", function () {
    pm.expect(pm.response.json().responseCode).to.satisfy(function(value) {
        return typeof value === 'string' || value === null;
    });
});

pm.test("At least one success message is present", function () {
    const results = pm.response.json().result;
    
    // Use a flag to track if a success message is found
    let successFound = false;

    // Iterate through the results array
    results.forEach(function (result) {
        if (result.message === "Successful") {
            successFound = true;
            return; // Exit the loop once a success message is found
        }
    });
    pm.expect(successFound).to.equal(true, "No success message found in the response");
});

pm.test("At least one 'Transfer in processing' message is present", function () {
    const results = pm.response.json().result;

    const hasProcessingMessage = results.some(function (result) {
        return result.message === "Successful";
    });

    pm.expect(hasProcessingMessage).to.be.true;
});
