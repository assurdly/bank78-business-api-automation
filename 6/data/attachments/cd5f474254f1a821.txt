pm.test("Response has 'hasResult' set to false", function () {
    pm.expect(pm.response.json().hasResult).to.equal(false);
});

pm.test("Response 'result' is null", function () {
    pm.expect(pm.response.json().result).to.be.null;
});

pm.test("Response 'resultType' is 3", function () {
    pm.expect(pm.response.json().resultType).to.equal(3);
});

pm.test("Response 'message' is 'Response has validation errors'", function () {
    pm.expect(pm.response.json().message).to.equal("Response has validation errors");
});

pm.test("Response 'validationMessages' contains 'Invalid Saving's Start date, date must be greater than or equals to today'", function () {
    const validationMessages = pm.response.json().validationMessages;
    pm.expect(validationMessages).to.include("Invalid Saving's Start date, date must be greater than or equals to today");
});

pm.test("Response 'successful' is false", function () {
    pm.expect(pm.response.json().successful).to.equal(false);
});

pm.test("Response 'errorCode' is 0", function () {
    pm.expect(pm.response.json().errorCode).to.equal(0);
});

pm.test("Response 'responseCode' is null", function () {
    pm.expect(pm.response.json().responseCode).to.be.null;
});
