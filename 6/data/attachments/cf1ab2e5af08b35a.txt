// Validate the response status code is 200 (OK)
pm.test("Response code is 200 (OK)", function () {
    pm.response.to.have.status(200);
});

// Validate the response structure and properties
pm.test("Response structure and properties", function () {
    pm.expect(pm.response.json()).to.have.property("hasResult", true);
    pm.expect(pm.response.json()).to.have.property("result");
    pm.expect(pm.response.json()).to.have.property("resultType", 1);
    pm.expect(pm.response.json()).to.have.property("message", "Approved or completed successfully");
    pm.expect(pm.response.json()).to.have.property("validationMessages");
    pm.expect(pm.response.json()).to.have.property("successful", true);
    pm.expect(pm.response.json()).to.have.property("errorCode", 0);
    pm.expect(pm.response.json()).to.have.property("responseCode", "00");
});

pm.test("Amount is a non-negative number", function () {
    const responseData = pm.response.json();

    pm.expect(responseData.result.amount).to.exist.and.to.be.a('number');
    pm.expect(responseData.result.amount).to.be.at.least(0);
});


pm.test("Reference is a non-empty string", function () {
    const responseData = pm.response.json();

    pm.expect(responseData.result.reference).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, "Value should not be empty");
});

// Assert that the "reference" field is present in the response body
pm.test("Verify 'reference' field is present", function () {
    pm.expect(pm.response.json()).to.have.property("result");
    pm.expect(pm.response.json().result).to.have.property("reference");
});
